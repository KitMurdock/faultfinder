 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 0. Instruction: 00000006. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000126c
 >> Updated                     : 0x0000000080001270
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  01 48 2d e9          	: push {r0, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  02 48 2d e9          	: push {r1, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  04 48 2d e9          	: push {r2, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  08 48 2d e9          	: push {r3, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  10 48 2d e9          	: push {r4, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  20 48 2d e9          	: push {r5, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  40 48 2d e9          	: push {r6, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  80 48 2d e9          	: push {r7, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  00 49 2d e9          	: push {r8, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  00 4a 2d e9          	: push {sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  00 4c 2d e9          	: push {sl, fp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  00 40 2d e9          	: stmdb sp!, {lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 58 2d e9          	: push {fp, ip, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 68 2d e9          	: push {fp, sp, lr}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 08 2d e9          	: stmdb sp!, {fp}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000126c. Hit: 1. Lifespan: 2. Instruction: 00000006. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 48 2d e9          	: push {fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 c8 2d e9          	: push {fp, lr, pc}
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  00 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 0. Instruction: 00000012. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000418
 >> Updated                     : 0x000000008000041c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x1
 >> Updated instruction            :  13 34 a0 e3          	: mov r3, #0x13000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x13000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x2
 >> Updated instruction            :  10 34 a0 e3          	: mov r3, #16, #8
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x4
 >> Updated instruction            :  16 34 a0 e3          	: mov r3, #0x16000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x16000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x8
 >> Updated instruction            :  1a 34 a0 e3          	: mov r3, #0x1a000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1a000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x10
 >> Updated instruction            :  02 34 a0 e3          	: mov r3, #0x2000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x20
 >> Updated instruction            :  32 34 a0 e3          	: mov r3, #0x32000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x40
 >> Updated instruction            :  52 34 a0 e3          	: mov r3, #0x52000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x52000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x80
 >> Updated instruction            :  92 34 a0 e3          	: mov r3, #0x92000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x92000004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x100
 >> Updated instruction            :  12 35 a0 e3          	: mov r3, #0x4800000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4800004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x200
 >> Updated instruction            :  12 36 a0 e3          	: mov r3, #0x1200000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1200004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x400
 >> Updated instruction            :  12 30 a0 e3          	: mov r3, #0x12
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x16, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x800
 >> Updated instruction            :  12 3c a0 e3          	: mov r3, #0x1200
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1204, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x1000
 >> Updated instruction            :  12 24 a0 e3          	: mov r2, #0x12000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x2000
 >> Updated instruction            :  12 14 a0 e3          	: mov r1, #0x12000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x4000
 >> Updated instruction            :  12 74 a0 e3          	: mov r7, #0x12000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000418. Hit: 1. Lifespan: 2. Instruction: 00000012. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 34 a0 e3          	: mov r3, #0x12000000
 >> Mask                           :  0x8000
 >> Updated instruction            :  12 b4 a0 e3          	: mov fp, #0x12000000
 >> Lifespan countdown: 2. (0x8000041c)
 >> Lifespan countdown: 1. (0x80000420)
 >> Reverting instruction          :  12 34 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x11fffff8, value: 0x0!! Count 15 Skipping to end.
 >> Run result: Fault errored program - last instruction: 14.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 0. Instruction: 00000015. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000424
 >> Updated                     : 0x0000000080000428
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000424. Hit: 1. Lifespan: 2. Instruction: 00000015. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000428)
 >> Lifespan countdown: 1. (0x8000042c)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000011fffff8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 18.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 0. Instruction: 00000020. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000438
 >> Updated                     : 0x000000008000043c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 13 e3          	: tst r3, #5
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 13 e3          	: tst r3, #6
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000430)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 13 e3          	: tst r3, #0
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 13 e3          	: tst r3, #0xc
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 13 e3          	: tst r3, #0x14
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 13 e3          	: tst r3, #0x24
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 13 e3          	: tst r3, #0x44
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 13 e3          	: tst r3, #0x84
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 13 e3          	: tst r3, #4, #2
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 13 e3          	: tst r3, #4, #4
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 13 e3          	: tst r3, #4, #8
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 13 e3          	: tst r3, #4, #16
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000438. Hit: 1. Lifespan: 2. Instruction: 00000020. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x8000043c)
 >> Lifespan countdown: 1. (0x80000440)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 0. Instruction: 00000033. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003bc
 >> Updated                     : 0x00000000800003c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1
 >> Updated instruction            :  0d d0 4d e2          	: sub sp, sp, #0xd
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2
 >> Updated instruction            :  0e d0 4d e2          	: sub sp, sp, #0xe
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4
 >> Updated instruction            :  08 d0 4d e2          	: sub sp, sp, #8
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8
 >> Updated instruction            :  04 d0 4d e2          	: sub sp, sp, #4
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000001fff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x10
 >> Updated instruction            :  1c d0 4d e2          	: sub sp, sp, #0x1c
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x20
 >> Updated instruction            :  2c d0 4d e2          	: sub sp, sp, #0x2c
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x40
 >> Updated instruction            :  4c d0 4d e2          	: sub sp, sp, #0x4c
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x80
 >> Updated instruction            :  8c d0 4d e2          	: sub sp, sp, #0x8c
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x100
 >> Updated instruction            :  0c d1 4d e2          	: sub sp, sp, #12, #2
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x1a000004, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x200
 >> Updated instruction            :  0c d2 4d e2          	: sub sp, sp, #12, #4
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010ff28, value: 0x8010ff34!! Count 38 Skipping to end.
 >> Run result: Fault errored program - last instruction: 37.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x400
 >> Updated instruction            :  0c d4 4d e2          	: sub sp, sp, #12, #8
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7410ff28, value: 0x8010ff34!! Count 38 Skipping to end.
 >> Run result: Fault errored program - last instruction: 37.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x800
 >> Updated instruction            :  0c d8 4d e2          	: sub sp, sp, #12, #16
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8004ff28, value: 0x8010ff34!! Count 38 Skipping to end.
 >> Run result: Fault errored program - last instruction: 37.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c c0 4d e2          	: sub ip, sp, #0xc
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c f0 4d e2          	: sub pc, sp, #0xc
 >> Lifespan countdown: 2. (0x8010ff20)
 >> Lifespan countdown: 1. (0x8010ff24)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 90 4d e2          	: sub sb, sp, #0xc
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003bc. Hit: 1. Lifespan: 2. Instruction: 00000033. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 50 4d e2          	: sub r5, sp, #0xc
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 0. Instruction: 00000042. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000340
 >> Updated                     : 0x0000000080000344
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000344)
 >> Lifespan countdown: 1. (0x80000348)
 >> Reverting instruction          :  08 30 1b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000344)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000344)
 >> Lifespan countdown: 1. (0x80000348)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000344)
 >> Lifespan countdown: 1. (0x80000348)
 >> Reverting instruction          :  08 30 1b e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000344)
 >> Lifespan countdown: 1. (0x80000348)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000340. Hit: 1. Lifespan: 2. Instruction: 00000042. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000344)
 >> Lifespan countdown: 1. (0x80000348)
 >> Reverting instruction          :  08 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000011fffff8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 46.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 0. Instruction: 00000047. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000354
 >> Updated                     : 0x0000000080000358
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 20 a0 e3          	: mov r2, #3
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 20 a0 e3          	: mov r2, #0
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 20 a0 e3          	: mov r2, #6
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 20 a0 e3          	: mov r2, #0xa
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 20 a0 e3          	: mov r2, #0x12
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 20 a0 e3          	: mov r2, #0x22
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 20 a0 e3          	: mov r2, #0x42
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 20 a0 e3          	: mov r2, #0x82
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 21 a0 e3          	: mov r2, #0x80000000
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 22 a0 e3          	: mov r2, #0x20000000
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 24 a0 e3          	: mov r2, #0x2000000
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 28 a0 e3          	: mov r2, #0x20000
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 30 a0 e3          	: mov r3, #2
 >> Lifespan countdown: 2. (0x80000358)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa, value: 0x10!! Count 49 Skipping to end.
 >> Run result: Fault errored program - last instruction: 48.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 00 a0 e3          	: mov r0, #2
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 60 a0 e3          	: mov r6, #2
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000354. Hit: 1. Lifespan: 2. Instruction: 00000047. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 a0 a0 e3          	: mov sl, #2
 >> Lifespan countdown: 2. (0x80000358)
 >> Lifespan countdown: 1. (0x8000035c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 0. Instruction: 00000053. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000036c
 >> Updated                     : 0x0000000080000370
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 13 e3          	: tst r3, #5
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 13 e3          	: tst r3, #6
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000364)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 13 e3          	: tst r3, #0
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 13 e3          	: tst r3, #0xc
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 13 e3          	: tst r3, #0x14
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 13 e3          	: tst r3, #0x24
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 13 e3          	: tst r3, #0x44
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 13 e3          	: tst r3, #0x84
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 13 e3          	: tst r3, #4, #2
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 13 e3          	: tst r3, #4, #4
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 13 e3          	: tst r3, #4, #8
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 13 e3          	: tst r3, #4, #16
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000036c. Hit: 1. Lifespan: 2. Instruction: 00000053. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 13 e3          	: tst r3, #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 13 e3          	: tst r3, #4
 >> Lifespan countdown: 2. (0x80000370)
 >> Lifespan countdown: 1. (0x80000374)
 >> Reverting instruction          :  04 00 13 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 0. Instruction: 00000066. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003cc
 >> Updated                     : 0x00000000800003d0
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 50 e3          	: cmp r0, #1
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 50 e3          	: cmp r0, #2
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 50 e3          	: cmp r0, #4
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 50 e3          	: cmp r0, #8
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 50 e3          	: cmp r0, #0x10
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 50 e3          	: cmp r0, #0x20
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 50 e3          	: cmp r0, #0x40
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 50 e3          	: cmp r0, #0x80
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 50 e3          	: cmp r0, #0, #2
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 50 e3          	: cmp r0, #0, #4
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 50 e3          	: cmp r0, #0, #8
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 50 e3          	: cmp r0, #0, #16
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003cc. Hit: 1. Lifespan: 2. Instruction: 00000066. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x800003d0)
 >> Lifespan countdown: 1. (0x800003d4)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 0. Instruction: 00000076. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001294
 >> Updated                     : 0x0000000080001298
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x1
 >> Updated instruction            :  bd 60 4b e2          	: sub r6, fp, #0xbd
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x2
 >> Updated instruction            :  be 60 4b e2          	: sub r6, fp, #0xbe
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x4
 >> Updated instruction            :  b8 60 4b e2          	: sub r6, fp, #0xb8
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x8
 >> Updated instruction            :  b4 60 4b e2          	: sub r6, fp, #0xb4
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x10
 >> Updated instruction            :  ac 60 4b e2          	: sub r6, fp, #0xac
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x20
 >> Updated instruction            :  9c 60 4b e2          	: sub r6, fp, #0x9c
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x40
 >> Updated instruction            :  fc 60 4b e2          	: sub r6, fp, #0xfc
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x80
 >> Updated instruction            :  3c 60 4b e2          	: sub r6, fp, #0x3c
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x100
 >> Updated instruction            :  bc 61 4b e2          	: sub r6, fp, #188, #2
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x200
 >> Updated instruction            :  bc 62 4b e2          	: sub r6, fp, #188, #4
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c010fff1, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x400
 >> Updated instruction            :  bc 64 4b e2          	: sub r6, fp, #188, #8
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c410fffc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x800
 >> Updated instruction            :  bc 68 4b e2          	: sub r6, fp, #188, #16
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007f54fffc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x1000
 >> Updated instruction            :  bc 70 4b e2          	: sub r7, fp, #0xbc
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x2000
 >> Updated instruction            :  bc 40 4b e2          	: sub r4, fp, #0xbc
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x4000
 >> Updated instruction            :  bc 20 4b e2          	: sub r2, fp, #0xbc
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001294. Hit: 1. Lifespan: 2. Instruction: 00000076. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bc 60 4b e2          	: sub r6, fp, #0xbc
 >> Mask                           :  0x8000
 >> Updated instruction            :  bc e0 4b e2          	: sub lr, fp, #0xbc
 >> Lifespan countdown: 2. (0x80001298)
 >> Lifespan countdown: 1. (0x8000129c)
 >> Reverting instruction          :  bc 60 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 0. Instruction: 00000085. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012b8
 >> Updated                     : 0x00000000800012bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x1
 >> Updated instruction            :  e5 ff ff eb          	: bl #0xf9c
 >> Lifespan countdown: 2. (0x80001254)
 >> Lifespan countdown: 1. (0x80001258)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 112.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x2
 >> Updated instruction            :  e6 ff ff eb          	: bl #0xfa0
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x4
 >> Updated instruction            :  e0 ff ff eb          	: bl #0xf88
 >> Lifespan countdown: 2. (0x80001240)
 >> Lifespan countdown: 1. (0x80001244)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa00001, value: 0x1!! Count 89 Skipping to end.
 >> Run result: Fault errored program - last instruction: 88.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x8
 >> Updated instruction            :  ec ff ff eb          	: bl #0xfb8
 >> Lifespan countdown: 2. (0x80001270)
 >> Lifespan countdown: 1. (0x80001274)
 >> Reverting instruction          :  e4 ff ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x10
 >> Updated instruction            :  f4 ff ff eb          	: bl #0xfd8
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  e4 ff ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x20
 >> Updated instruction            :  c4 ff ff eb          	: bl #0xf18
 >> Lifespan countdown: 2. (0x800011d0)
 >> Lifespan countdown: 1. (0x800011d4)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 2897.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x40
 >> Updated instruction            :  a4 ff ff eb          	: bl #0xe98
 >> Lifespan countdown: 2. (0x80001150)
 >> Lifespan countdown: 1. (0x80001154)
 >> Reverting instruction          :  e4 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x80
 >> Updated instruction            :  64 ff ff eb          	: bl #0xd98
 >> Lifespan countdown: 2. (0x80001050)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 2171.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x100
 >> Updated instruction            :  e4 fe ff eb          	: bl #0xb98
 >> Lifespan countdown: 2. (0x80000e50)
 >> Lifespan countdown: 1. (0x80000e54)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x200
 >> Updated instruction            :  e4 fd ff eb          	: bl #0x798
 >> Lifespan countdown: 2. (0x80000a50)
 >> Lifespan countdown: 1. (0x80000a54)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 442.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x400
 >> Updated instruction            :  e4 fb ff eb          	: bl #0xffffff98
 >> Lifespan countdown: 2. (0x80000250)
 >> Lifespan countdown: 1. (0x80000254)
 >> Reverting instruction          :  e4 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x800
 >> Updated instruction            :  e4 f7 ff eb          	: bl #0xffffef98
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff250, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 85.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x1000
 >> Updated instruction            :  e4 ef ff eb          	: bl #0xffffcf98
 >!  Erm -  fetching from unmapped memory, address: 0x7fffd250, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 85.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x2000
 >> Updated instruction            :  e4 df ff eb          	: bl #0xffff8f98
 >!  Erm -  fetching from unmapped memory, address: 0x7fff9250, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 85.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x4000
 >> Updated instruction            :  e4 bf ff eb          	: bl #0xffff0f98
 >!  Erm -  fetching from unmapped memory, address: 0x7fff1250, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 85.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b8. Hit: 1. Lifespan: 2. Instruction: 00000085. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e4 ff ff eb          	: bl #0xf98
 >> Mask                           :  0x8000
 >> Updated instruction            :  e4 7f ff eb          	: bl #0xfffe0f98
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe1250, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 85.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 0. Instruction: 00000102. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000474
 >> Updated                     : 0x0000000080000478
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x1
 >> Updated instruction            :  ff 2c 0d e3          	: movw r2, #0xdcff
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x2
 >> Updated instruction            :  fc 2c 0d e3          	: movw r2, #0xdcfc
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x4
 >> Updated instruction            :  fa 2c 0d e3          	: movw r2, #0xdcfa
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x8
 >> Updated instruction            :  f6 2c 0d e3          	: movw r2, #0xdcf6
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x10
 >> Updated instruction            :  ee 2c 0d e3          	: movw r2, #0xdcee
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x20
 >> Updated instruction            :  de 2c 0d e3          	: movw r2, #0xdcde
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x40
 >> Updated instruction            :  be 2c 0d e3          	: movw r2, #0xdcbe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x80
 >> Updated instruction            :  7e 2c 0d e3          	: movw r2, #0xdc7e
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x100
 >> Updated instruction            :  fe 2d 0d e3          	: movw r2, #0xddfe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x200
 >> Updated instruction            :  fe 2e 0d e3          	: movw r2, #0xdefe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x400
 >> Updated instruction            :  fe 28 0d e3          	: movw r2, #0xd8fe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x800
 >> Updated instruction            :  fe 24 0d e3          	: movw r2, #0xd4fe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x1000
 >> Updated instruction            :  fe 3c 0d e3          	: movw r3, #0xdcfe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x2000
 >> Updated instruction            :  fe 0c 0d e3          	: movw r0, #0xdcfe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xdd0e, value: 0x98ba2301!! Count 107 Skipping to end.
 >> Run result: Fault errored program - last instruction: 106.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x4000
 >> Updated instruction            :  fe 6c 0d e3          	: movw r6, #0xdcfe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000dcfe, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000474. Hit: 1. Lifespan: 2. Instruction: 00000102. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fe 2c 0d e3          	: movw r2, #0xdcfe
 >> Mask                           :  0x8000
 >> Updated instruction            :  fe ac 0d e3          	: movw sl, #0xdcfe
 >> Lifespan countdown: 2. (0x80000478)
 >> Lifespan countdown: 1. (0x8000047c)
 >> Reverting instruction          :  fe 2c 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 0. Instruction: 00000109. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000490
 >> Updated                     : 0x0000000080000494
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x1
 >> Updated instruction            :  05 30 80 e5          	: str r3, [r0, #5]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x2
 >> Updated instruction            :  06 30 80 e5          	: str r3, [r0, #6]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x4
 >> Updated instruction            :  00 30 80 e5          	: str r3, [r0]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 30 80 e5          	: str r3, [r0, #0xc]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x10
 >> Updated instruction            :  14 30 80 e5          	: str r3, [r0, #0x14]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x20
 >> Updated instruction            :  24 30 80 e5          	: str r3, [r0, #0x24]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x40
 >> Updated instruction            :  44 30 80 e5          	: str r3, [r0, #0x44]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x80
 >> Updated instruction            :  84 30 80 e5          	: str r3, [r0, #0x84]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x100
 >> Updated instruction            :  04 31 80 e5          	: str r3, [r0, #0x104]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110064, value: 0x0!! Count 110 Skipping to end.
 >> Run result: Fault errored program - last instruction: 109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x200
 >> Updated instruction            :  04 32 80 e5          	: str r3, [r0, #0x204]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110164, value: 0x0!! Count 110 Skipping to end.
 >> Run result: Fault errored program - last instruction: 109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x400
 >> Updated instruction            :  04 34 80 e5          	: str r3, [r0, #0x404]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110364, value: 0x0!! Count 110 Skipping to end.
 >> Run result: Fault errored program - last instruction: 109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x800
 >> Updated instruction            :  04 38 80 e5          	: str r3, [r0, #0x804]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110764, value: 0x0!! Count 110 Skipping to end.
 >> Run result: Fault errored program - last instruction: 109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 20 80 e5          	: str r2, [r0, #4]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 10 80 e5          	: str r1, [r0, #4]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 70 80 e5          	: str r7, [r0, #4]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000490. Hit: 1. Lifespan: 2. Instruction: 00000109. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 30 80 e5          	: str r3, [r0, #4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 b0 80 e5          	: str fp, [r0, #4]
 >> Lifespan countdown: 2. (0x80000494)
 >> Lifespan countdown: 1. (0x80000498)
 >> Reverting instruction          :  04 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 0. Instruction: 00000117. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001178
 >> Updated                     : 0x000000008000117c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 40 a0 e1          	: mov r4, r1
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 40 a0 e1          	: mov r4, r2
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 40 a0 e1          	: mov r4, r4
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 40 a0 e1          	: mov r4, r8
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 40 a0 e1          	: lsl r4, r0, r0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 40 a0 e1          	: lsr r4, r0, #0x20
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 40 a0 e1          	: asr r4, r0, #0x20
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000003, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 40 a0 e1          	: lsl r4, r0, #1
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fec4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 41 a0 e1          	: lsl r4, r0, #2
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd84, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 42 a0 e1          	: lsl r4, r0, #4
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff604, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 44 a0 e1          	: lsl r4, r0, #8
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff6004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 48 a0 e1          	: lsl r4, r0, #0x10
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff600004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 50 a0 e1          	: mov r5, r0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 60 a0 e1          	: mov r6, r0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 00 a0 e1          	: mov r0, r0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001178. Hit: 1. Lifespan: 2. Instruction: 00000117. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 a0 e1          	: mov r4, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 c0 a0 e1          	: mov ip, r0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  00 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 0. Instruction: 00000124. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001194
 >> Updated                     : 0x0000000080001198
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 22 c2 e3          	: bic r2, r2, #0xf0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 22 c2 e3          	: bic r2, r2, #12, #4
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 22 c2 e3          	: bic r2, r2, #0xa0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x8
 >> Updated instruction            :  06 22 c2 e3          	: bic r2, r2, #0x60000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 22 c2 e3          	: bic r2, r2, #0xe0000001
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 22 c2 e3          	: bic r2, r2, #0xe0000002
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 22 c2 e3          	: bic r2, r2, #0xe0000004
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 22 c2 e3          	: bic r2, r2, #0xe0000008
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 23 c2 e3          	: bic r2, r2, #0x38000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 20 c2 e3          	: bic r2, r2, #0xe
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 26 c2 e3          	: bic r2, r2, #0xe00000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 2a c2 e3          	: bic r2, r2, #0xe000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 32 c2 e3          	: bic r3, r2, #0xe0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 02 c2 e3          	: bic r0, r2, #0xe0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 62 c2 e3          	: bic r6, r2, #0xe0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001194. Hit: 1. Lifespan: 2. Instruction: 00000124. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 22 c2 e3          	: bic r2, r2, #0xe0000000
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e a2 c2 e3          	: bic sl, r2, #0xe0000000
 >> Lifespan countdown: 2. (0x80001198)
 >> Lifespan countdown: 1. (0x8000119c)
 >> Reverting instruction          :  0e 22 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 0. Instruction: 00000127. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011a0
 >> Updated                     : 0x00000000800011a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 32          	: addlo r3, r3, #0
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 32          	: addlo r3, r3, #3
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 32          	: addlo r3, r3, #5
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 32          	: addlo r3, r3, #9
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 32          	: addlo r3, r3, #0x11
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 32          	: addlo r3, r3, #0x21
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 32          	: addlo r3, r3, #0x41
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 32          	: addlo r3, r3, #0x81
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 32          	: addlo r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 32          	: addlo r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 32          	: addlo r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 32          	: addlo r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 32          	: addlo r2, r3, #1
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 32          	: addlo r1, r3, #1
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 32          	: addlo r7, r3, #1
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011a0. Hit: 1. Lifespan: 2. Instruction: 00000127. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 32          	: addlo r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 32          	: addlo fp, r3, #1
 >> Lifespan countdown: 2. (0x800011a4)
 >> Lifespan countdown: 1. (0x800011a8)
 >> Reverting instruction          :  01 30 83 32 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 0. Instruction: 00000135. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001200
 >> Updated                     : 0x0000000080001204
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 a0 e1          	: mov r2, r4
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 a0 e1          	: mov r2, r7
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 a0 e1          	: mov r2, r1
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 a0 e1          	: mov r2, sp
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 a0 e1          	: lsl r2, r5, r0
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 a0 e1          	: lsr r2, r5, #0x20
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 a0 e1          	: asr r2, r5, #0x20
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 a0 e1          	: lsl r2, r5, #1
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 a0 e1          	: lsl r2, r5, #2
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 a0 e1          	: lsl r2, r5, #4
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 a0 e1          	: lsl r2, r5, #8
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 a0 e1          	: lsl r2, r5, #0x10
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 a0 e1          	: mov r3, r5
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 a0 e1          	: mov r0, r5
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 a0 e1          	: mov r6, r5
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001200. Hit: 1. Lifespan: 2. Instruction: 00000135. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 a0 e1          	: mov r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 a0 e1          	: mov sl, r5
 >> Lifespan countdown: 2. (0x80001204)
 >> Lifespan countdown: 1. (0x80001208)
 >> Reverting instruction          :  05 20 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 0. Instruction: 00000140. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001214
 >> Updated                     : 0x0000000080001218
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 2212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x1
 >> Updated instruction            :  d4 fb ff ea          	: b #0xffffff58
 >> Lifespan countdown: 2. (0x8000016c)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 141.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x2
 >> Updated instruction            :  d7 fb ff ea          	: b #0xffffff64
 >> Lifespan countdown: 2. (0x80000178)
 >> Lifespan countdown: 1. (0x8000017c)
 >> Reverting instruction          :  d5 fb ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x4
 >> Updated instruction            :  d1 fb ff ea          	: b #0xffffff4c
 >> Lifespan countdown: 2. (0x80000160)
 >> Lifespan countdown: 1. (0x80000164)
 >> Reverting instruction          :  d5 fb ff ea 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 144.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x8
 >> Updated instruction            :  dd fb ff ea          	: b #0xffffff7c
 >> Lifespan countdown: 2. (0x80000190)
 >> Lifespan countdown: 1. (0x80000194)
 >> Reverting instruction          :  d5 fb ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x10
 >> Updated instruction            :  c5 fb ff ea          	: b #0xffffff1c
 >> Lifespan countdown: 2. (0x80000130)
 >> Lifespan countdown: 1. (0x80000134)
 >> Reverting instruction          :  d5 fb ff ea 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 156.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x20
 >> Updated instruction            :  f5 fb ff ea          	: b #0xffffffdc
 >> Lifespan countdown: 2. (0x800001f0)
 >> Lifespan countdown: 1. (0x800001f4)
 >> Reverting instruction          :  d5 fb ff ea 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 176.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x40
 >> Updated instruction            :  95 fb ff ea          	: b #0xfffffe5c
 >> Lifespan countdown: 2. (0x80000070)
 >> Lifespan countdown: 1. (0x80000074)
 >> Reverting instruction          :  d5 fb ff ea 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000011, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 151.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x80
 >> Updated instruction            :  55 fb ff ea          	: b #0xfffffd5c
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff70, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x100
 >> Updated instruction            :  d5 fa ff ea          	: b #0xfffffb5c
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd70, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x200
 >> Updated instruction            :  d5 f9 ff ea          	: b #0xfffff75c
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff970, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x400
 >> Updated instruction            :  d5 ff ff ea          	: b #0xf5c
 >> Lifespan countdown: 2. (0x80001170)
 >> Lifespan countdown: 1. (0x8000007c)
 >> Reverting instruction          :  d5 fb ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x800
 >> Updated instruction            :  d5 f3 ff ea          	: b #0xffffdf5c
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe170, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x1000
 >> Updated instruction            :  d5 eb ff ea          	: b #0xffffbf5c
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc170, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x2000
 >> Updated instruction            :  d5 db ff ea          	: b #0xffff7f5c
 >!  Erm -  fetching from unmapped memory, address: 0x7fff8170, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x4000
 >> Updated instruction            :  d5 bb ff ea          	: b #0xfffeff5c
 >!  Erm -  fetching from unmapped memory, address: 0x7fff0170, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001214. Hit: 1. Lifespan: 2. Instruction: 00000140. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d5 fb ff ea          	: b #0xffffff5c
 >> Mask                           :  0x8000
 >> Updated instruction            :  d5 7b ff ea          	: b #0xfffdff5c
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe0170, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 0. Instruction: 00000144. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000017c
 >> Updated                     : 0x0000000080000180
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 81 e2          	: add ip, r1, #5
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 81 e2          	: add ip, r1, #6
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 81 e2          	: add ip, r1, #0
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 81 e2          	: add ip, r1, #0xc
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 81 e2          	: add ip, r1, #0x14
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 81 e2          	: add ip, r1, #0x24
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 81 e2          	: add ip, r1, #0x44
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 81 e2          	: add ip, r1, #0x84
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 81 e2          	: add ip, r1, #4, #2
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 81 e2          	: add ip, r1, #4, #4
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 81 e2          	: add ip, r1, #4, #8
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 81 e2          	: add ip, r1, #4, #16
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 81 e2          	: add sp, r1, #4
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x31fffff0, value: 0x8010ff60!! Count 157 Skipping to end.
 >> Run result: Fault errored program - last instruction: 156.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 81 e2          	: add lr, r1, #4
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >!  Erm -  fetching from unmapped memory, address: 0x33266278, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 81 e2          	: add r8, r1, #4
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000017c. Hit: 1. Lifespan: 2. Instruction: 00000144. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 81 e2          	: add ip, r1, #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 81 e2          	: add r4, r1, #4
 >> Lifespan countdown: 2. (0x80000180)
 >> Lifespan countdown: 1. (0x80000184)
 >> Reverting instruction          :  04 c0 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 0. Instruction: 00000149. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000190
 >> Updated                     : 0x0000000080000194
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x1
 >> Updated instruction            :  0a 00 52 e3          	: cmp r2, #0xa
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x2
 >> Updated instruction            :  09 00 52 e3          	: cmp r2, #9
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x4
 >> Updated instruction            :  0f 00 52 e3          	: cmp r2, #0xf
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x8
 >> Updated instruction            :  03 00 52 e3          	: cmp r2, #3
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x10
 >> Updated instruction            :  1b 00 52 e3          	: cmp r2, #0x1b
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x20
 >> Updated instruction            :  2b 00 52 e3          	: cmp r2, #0x2b
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x40
 >> Updated instruction            :  4b 00 52 e3          	: cmp r2, #0x4b
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x80
 >> Updated instruction            :  8b 00 52 e3          	: cmp r2, #0x8b
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x100
 >> Updated instruction            :  0b 01 52 e3          	: cmp r2, #0xc0000002
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x200
 >> Updated instruction            :  0b 02 52 e3          	: cmp r2, #0xb0000000
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x400
 >> Updated instruction            :  0b 04 52 e3          	: cmp r2, #0xb000000
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x800
 >> Updated instruction            :  0b 08 52 e3          	: cmp r2, #0xb0000
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x1000
 >> Updated instruction            :  0b 10 52 e3          	: cmp r2, #0xb
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x2000
 >> Updated instruction            :  0b 20 52 e3          	: cmp r2, #0xb
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x4000
 >> Updated instruction            :  0b 40 52 e3          	: cmp r2, #0xb
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000190. Hit: 1. Lifespan: 2. Instruction: 00000149. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0b 00 52 e3          	: cmp r2, #0xb
 >> Mask                           :  0x8000
 >> Updated instruction            :  0b 80 52 e3          	: cmp r2, #0xb
 >> Lifespan countdown: 2. (0x80000194)
 >> Lifespan countdown: 1. (0x80000198)
 >> Reverting instruction          :  0b 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 0. Instruction: 00000155. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001a8
 >> Updated                     : 0x00000000800001ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 30 03 e2          	: and r3, r3, #2
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 30 03 e2          	: and r3, r3, #1
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 30 03 e2          	: and r3, r3, #7
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 30 03 e2          	: and r3, r3, #0xb
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 30 03 e2          	: and r3, r3, #0x13
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 30 03 e2          	: and r3, r3, #0x23
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 30 03 e2          	: and r3, r3, #0x43
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 30 03 e2          	: and r3, r3, #0x83
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 31 03 e2          	: and r3, r3, #0xc0000000
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 32 03 e2          	: and r3, r3, #0x30000000
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 34 03 e2          	: and r3, r3, #0x3000000
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 38 03 e2          	: and r3, r3, #0x30000
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 20 03 e2          	: and r2, r3, #3
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 10 03 e2          	: and r1, r3, #3
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 70 03 e2          	: and r7, r3, #3
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a8. Hit: 1. Lifespan: 2. Instruction: 00000155. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 03 e2          	: and r3, r3, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 b0 03 e2          	: and fp, r3, #3
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  03 30 03 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff3f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1258.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 0. Instruction: 00000163. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001c8
 >> Updated                     : 0x00000000800001cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x1
 >> Updated instruction            :  39 00 00 0a          	: beq #0x10ec
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  38 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 00 00 0a          	: beq #0x10f0
 >> Lifespan countdown: 2. (0x800002b8)
 >> Lifespan countdown: 1. (0x80000218)
 >> Reverting instruction          :  38 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 00 00 0a          	: beq #0x10f8
 >> Lifespan countdown: 2. (0x800002c0)
 >> Lifespan countdown: 1. (0x800002c4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 229.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x8
 >> Updated instruction            :  30 00 00 0a          	: beq #0x10c8
 >> Lifespan countdown: 2. (0x80000290)
 >> Lifespan countdown: 1. (0x80000294)
 >> Reverting instruction          :  38 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x10
 >> Updated instruction            :  28 00 00 0a          	: beq #0x10a8
 >> Lifespan countdown: 2. (0x80000270)
 >> Lifespan countdown: 1. (0x80000274)
 >> Reverting instruction          :  38 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x20
 >> Updated instruction            :  18 00 00 0a          	: beq #0x1068
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  38 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 337 Skipping to end.
 >> Run result: Fault errored program - last instruction: 336.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x40
 >> Updated instruction            :  78 00 00 0a          	: beq #0x11e8
 >> Lifespan countdown: 2. (0x800003b0)
 >> Lifespan countdown: 1. (0x800003b4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 205.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 00 00 0a          	: beq #0x12e8
 >> Lifespan countdown: 2. (0x800004b0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 164.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x100
 >> Updated instruction            :  38 01 00 0a          	: beq #0x14e8
 >> Lifespan countdown: 2. (0x800006b0)
 >> Lifespan countdown: 1. (0x800006b4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f, value: 0x0!! Count 170 Skipping to end.
 >> Run result: Fault errored program - last instruction: 169.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x200
 >> Updated instruction            :  38 02 00 0a          	: beq #0x18e8
 >> Lifespan countdown: 2. (0x80000ab0)
 >> Lifespan countdown: 1. (0x80000ab4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x610af987!! Count 495 Skipping to end.
 >> Run result: Fault errored program - last instruction: 494.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x400
 >> Updated instruction            :  38 04 00 0a          	: beq #0x20e8
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  38 00 00 0a 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x800
 >> Updated instruction            :  38 08 00 0a          	: beq #0x30e8
 >> Lifespan countdown: 2. (0x800022b0)
 >> Lifespan countdown: 1. (0x800022b4)
 >> Reverting instruction          :  38 00 00 0a 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 10 00 0a          	: beq #0x50e8
 >> Lifespan countdown: 2. (0x800042b0)
 >> Lifespan countdown: 1. (0x800042b4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 28663.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 20 00 0a          	: beq #0x90e8
 >> Lifespan countdown: 2. (0x800082b0)
 >> Lifespan countdown: 1. (0x800082b4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 24567.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 40 00 0a          	: beq #0x110e8
 >> Lifespan countdown: 2. (0x800102b0)
 >> Lifespan countdown: 1. (0x800102b4)
 >> Reverting instruction          :  38 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 16375.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001c8. Hit: 1. Lifespan: 2. Instruction: 00000163. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 00 00 0a          	: beq #0x10e8
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 80 00 0a          	: beq #0x210e8
 >!  Erm -  fetching from unmapped memory, address: 0x800202b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 163.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 0. Instruction: 00000179. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000234
 >> Updated                     : 0x0000000080000238
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 54 e1          	: cmp r4, r2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 54 e1          	: cmp r4, r1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 54 e1          	: cmp r4, r7
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 54 e1          	: cmp r4, fp
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 54 e1          	: cmp r4, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 54 e1          	: cmp r4, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 54 e1          	: cmp r4, r3, asr #32
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 54 e1          	: cmp r4, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 54 e1          	: cmp r4, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 54 e1          	: cmp r4, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 54 e1          	: cmp r4, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 54 e1          	: cmp r4, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000234. Hit: 2. Lifespan: 2. Instruction: 00000179. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 54 e1          	: cmp r4, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 54 e1          	: cmp r4, r3
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  03 00 54 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 0. Instruction: 00000186. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000023c
 >> Updated                     : 0x0000000080000240
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x1
 >> Updated instruction            :  fb ff ff 8a          	: bhi #0xff4
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x2
 >> Updated instruction            :  f8 ff ff 8a          	: bhi #0xfe8
 >> Lifespan countdown: 2. (0x80000224)
 >> Lifespan countdown: 1. (0x80000228)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x4
 >> Updated instruction            :  fe ff ff 8a          	: bhi #0x1000
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x8
 >> Updated instruction            :  f2 ff ff 8a          	: bhi #0xfd0
 >> Lifespan countdown: 2. (0x8000020c)
 >> Lifespan countdown: 1. (0x80000210)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x10
 >> Updated instruction            :  ea ff ff 8a          	: bhi #0xfb0
 >> Lifespan countdown: 2. (0x800001ec)
 >> Lifespan countdown: 1. (0x800001f0)
 >> Reverting instruction          :  fa ff ff 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x20
 >> Updated instruction            :  da ff ff 8a          	: bhi #0xf70
 >> Lifespan countdown: 2. (0x800001ac)
 >> Lifespan countdown: 1. (0x800001b0)
 >> Reverting instruction          :  fa ff ff 8a 
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 243.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x40
 >> Updated instruction            :  ba ff ff 8a          	: bhi #0xef0
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80000130)
 >> Reverting instruction          :  fa ff ff 8a 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 204.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x80
 >> Updated instruction            :  7a ff ff 8a          	: bhi #0xdf0
 >> Lifespan countdown: 2. (0x8000002c)
 >> Lifespan countdown: 1. (0x80000030)
 >> Reverting instruction          :  fa ff ff 8a 
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 195.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x100
 >> Updated instruction            :  fa fe ff 8a          	: bhi #0xbf0
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffe2c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x200
 >> Updated instruction            :  fa fd ff 8a          	: bhi #0x7f0
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffa2c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x400
 >> Updated instruction            :  fa fb ff 8a          	: bhi #0xfffffff0
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff22c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x800
 >> Updated instruction            :  fa f7 ff 8a          	: bhi #0xffffeff0
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe22c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x1000
 >> Updated instruction            :  fa ef ff 8a          	: bhi #0xffffcff0
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc22c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x2000
 >> Updated instruction            :  fa df ff 8a          	: bhi #0xffff8ff0
 >!  Erm -  fetching from unmapped memory, address: 0x7fff822c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x4000
 >> Updated instruction            :  fa bf ff 8a          	: bhi #0xffff0ff0
 >!  Erm -  fetching from unmapped memory, address: 0x7fff022c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000023c. Hit: 3. Lifespan: 2. Instruction: 00000186. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa ff ff 8a          	: bhi #0xff0
 >> Mask                           :  0x8000
 >> Updated instruction            :  fa 7f ff 8a          	: bhi #0xfffe0ff0
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe022c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 0. Instruction: 00000209. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001018
 >> Updated                     : 0x000000008000101c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 80 e2          	: add r3, r0, #0
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 80 e2          	: add r3, r0, #3
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 80 e2          	: add r3, r0, #5
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 80 e2          	: add r3, r0, #9
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 80 e2          	: add r3, r0, #0x11
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 80 e2          	: add r3, r0, #0x21
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 80 e2          	: add r3, r0, #0x41
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 80 e2          	: add r3, r0, #0x81
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 80 e2          	: add r3, r0, #0x40000000
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 80 e2          	: add r3, r0, #0x10000000
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 80 e2          	: add r3, r0, #0x1000000
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 80 e2          	: add r3, r0, #0x10000
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 80 e2          	: add r2, r0, #1
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 80 e2          	: add r1, r0, #1
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x39, value: 0x80!! Count 216 Skipping to end.
 >> Run result: Fault errored program - last instruction: 215.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 80 e2          	: add r7, r0, #1
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001018. Hit: 1. Lifespan: 2. Instruction: 00000209. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 80 e2          	: add r3, r0, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 80 e2          	: add fp, r0, #1
 >> Lifespan countdown: 2. (0x8000101c)
 >> Lifespan countdown: 1. (0x80001020)
 >> Reverting instruction          :  01 30 80 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffffd, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1092.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 0. Instruction: 00000217. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001038
 >> Updated                     : 0x000000008000103c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x1
 >> Updated instruction            :  06 00 00 8a          	: bhi #0x1020
 >> Lifespan countdown: 2. (0x80001058)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x2
 >> Updated instruction            :  05 00 00 8a          	: bhi #0x101c
 >> Lifespan countdown: 2. (0x80001054)
 >> Lifespan countdown: 1. (0x80001058)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x4
 >> Updated instruction            :  03 00 00 8a          	: bhi #0x1014
 >> Lifespan countdown: 2. (0x8000104c)
 >> Lifespan countdown: 1. (0x80001050)
 >> Reverting instruction          :  07 00 00 8a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1668.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 00 00 8a          	: bhi #0x1044
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x10
 >> Updated instruction            :  17 00 00 8a          	: bhi #0x1064
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x20
 >> Updated instruction            :  27 00 00 8a          	: bhi #0x10a4
 >> Lifespan countdown: 2. (0x800010dc)
 >> Lifespan countdown: 1. (0x800010e0)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x40
 >> Updated instruction            :  47 00 00 8a          	: bhi #0x1124
 >> Lifespan countdown: 2. (0x8000115c)
 >> Lifespan countdown: 1. (0x80001160)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x80
 >> Updated instruction            :  87 00 00 8a          	: bhi #0x1224
 >> Lifespan countdown: 2. (0x8000125c)
 >> Lifespan countdown: 1. (0x80001260)
 >> Reverting instruction          :  07 00 00 8a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x100
 >> Updated instruction            :  07 01 00 8a          	: bhi #0x1424
 >> Lifespan countdown: 2. (0x8000145c)
 >> Lifespan countdown: 1. (0x80001460)
 >> Reverting instruction          :  07 00 00 8a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 220.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x200
 >> Updated instruction            :  07 02 00 8a          	: bhi #0x1824
 >> Lifespan countdown: 2. (0x8000185c)
 >> Lifespan countdown: 1. (0x80001860)
 >> Reverting instruction          :  07 00 00 8a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff34, value: 0x80000000!! Count 241 Skipping to end.
 >> Run result: Fault errored program - last instruction: 240.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x400
 >> Updated instruction            :  07 04 00 8a          	: bhi #0x2024
 >> Lifespan countdown: 2. (0x8000205c)
 >> Lifespan countdown: 1. (0x80002060)
 >> Reverting instruction          :  07 00 00 8a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000011, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x800
 >> Updated instruction            :  07 08 00 8a          	: bhi #0x3024
 >> Lifespan countdown: 2. (0x8000305c)
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 10 00 8a          	: bhi #0x5024
 >> Lifespan countdown: 2. (0x8000505c)
 >> Lifespan countdown: 1. (0x80005060)
 >> Reverting instruction          :  07 00 00 8a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27842.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 20 00 8a          	: bhi #0x9024
 >> Lifespan countdown: 2. (0x8000905c)
 >> Lifespan countdown: 1. (0x80009060)
 >> Reverting instruction          :  07 00 00 8a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 23746.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 40 00 8a          	: bhi #0x11024
 >> Lifespan countdown: 2. (0x8001105c)
 >> Lifespan countdown: 1. (0x80011060)
 >> Reverting instruction          :  07 00 00 8a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 15554.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001038. Hit: 1. Lifespan: 2. Instruction: 00000217. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 00 8a          	: bhi #0x1024
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 80 00 8a          	: bhi #0x21024
 >!  Erm -  fetching from unmapped memory, address: 0x8002105c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 217.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 0. Instruction: 00000232. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000ac
 >> Updated                     : 0x00000000800000b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 53 e3          	: cmp r3, #2
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 53 e3          	: cmp r3, #4
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 53 e3          	: cmp r3, #8
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 53 e3          	: cmp r3, #0x10
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 53 e3          	: cmp r3, #0x20
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 53 e3          	: cmp r3, #0x40
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 53 e3          	: cmp r3, #0x80
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 53 e3          	: cmp r3, #0, #2
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 53 e3          	: cmp r3, #0, #4
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 53 e3          	: cmp r3, #0, #8
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 53 e3          	: cmp r3, #0, #16
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000ac. Hit: 1. Lifespan: 2. Instruction: 00000232. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800000b0)
 >> Lifespan countdown: 1. (0x800000b4)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 0. Instruction: 00000239. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000c8
 >> Updated                     : 0x00000000800000cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x1
 >> Updated instruction            :  07 00 00 0a          	: beq #0x1024
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x2
 >> Updated instruction            :  04 00 00 0a          	: beq #0x1018
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x4
 >> Updated instruction            :  02 00 00 0a          	: beq #0x1010
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 00 00 0a          	: beq #0x1040
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x10
 >> Updated instruction            :  16 00 00 0a          	: beq #0x1060
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x20
 >> Updated instruction            :  26 00 00 0a          	: beq #0x10a0
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x40
 >> Updated instruction            :  46 00 00 0a          	: beq #0x1120
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x80
 >> Updated instruction            :  86 00 00 0a          	: beq #0x1220
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x100
 >> Updated instruction            :  06 01 00 0a          	: beq #0x1420
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x200
 >> Updated instruction            :  06 02 00 0a          	: beq #0x1820
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x400
 >> Updated instruction            :  06 04 00 0a          	: beq #0x2020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x800
 >> Updated instruction            :  06 08 00 0a          	: beq #0x3020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 10 00 0a          	: beq #0x5020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 20 00 0a          	: beq #0x9020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 40 00 0a          	: beq #0x11020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000c8. Hit: 1. Lifespan: 2. Instruction: 00000239. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 00 0a          	: beq #0x1020
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 80 00 0a          	: beq #0x21020
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  06 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 0. Instruction: 00000245. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000e0
 >> Updated                     : 0x00000000800000e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 c0 e5          	: strb r1, [r0]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 c0 e5          	: strb r1, [r0, #3]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 c0 e5          	: strb r1, [r0, #5]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 c0 e5          	: strb r1, [r0, #9]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 c0 e5          	: strb r1, [r0, #0x11]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 c0 e5          	: strb r1, [r0, #0x21]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 c0 e5          	: strb r1, [r0, #0x41]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 c0 e5          	: strb r1, [r0, #0x81]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000a, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 c0 e5          	: strb r1, [r0, #0x101]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011008a, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 c0 e5          	: strb r1, [r0, #0x201]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011018a, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 c0 e5          	: strb r1, [r0, #0x401]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011038a, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 c0 e5          	: strb r1, [r0, #0x801]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011078a, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 c0 e5          	: strb r0, [r0, #1]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 c0 e5          	: strb r3, [r0, #1]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 c0 e5          	: strb r5, [r0, #1]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e0. Hit: 1. Lifespan: 2. Instruction: 00000245. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 c0 e5          	: strb sb, [r0, #1]
 >> Lifespan countdown: 2. (0x800000e4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  01 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 0. Instruction: 00000253. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000100
 >> Updated                     : 0x0000000080000104
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 cc df e7          	: bfi ip, r0, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 cc df e7          	: bfi ip, r3, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 cc df e7          	: bfi ip, r5, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 cc df e7          	: bfi ip, sb, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 cc df e7          	: ldrb ip, [pc, r1, lsl #24]
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 cc df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 253.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 cc df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 253.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 cc df e7          	: bfi ip, r1, #0x19, #7
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 cd df e7          	: bfi ip, r1, #0x1a, #6
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 ce df e7          	: bfi ip, r1, #0x1c, #4
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 c8 df e7          	: bfi ip, r1, #0x10, #0x10
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 c4 df e7          	: bfi ip, r1, #8, #0x18
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 dc df e7          	: bfi sp, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010ff10, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 ec df e7          	: bfi lr, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 8c df e7          	: bfi r8, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 1. Lifespan: 2. Instruction: 00000253. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 4c df e7          	: bfi r4, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 0. Instruction: 00000259. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 330.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 263 Skipping to end.
 >> Run result: Fault errored program - last instruction: 262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 1. Lifespan: 2. Instruction: 00000259. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 0. Instruction: 00000263. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 338.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 267 Skipping to end.
 >> Run result: Fault errored program - last instruction: 266.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 2. Lifespan: 2. Instruction: 00000263. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 263.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 0. Instruction: 00000270. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 4. Lifespan: 2. Instruction: 00000270. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 0. Instruction: 00000279. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 360.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 283 Skipping to end.
 >> Run result: Fault errored program - last instruction: 282.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 6. Lifespan: 2. Instruction: 00000279. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 279.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 0. Instruction: 00000286. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 8. Lifespan: 2. Instruction: 00000286. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 0. Instruction: 00000295. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000128
 >> Updated                     : 0x000000008000012c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 e0 4e e0          	: sub lr, lr, r2
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 e0 4e e0          	: sub lr, lr, r1
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 e0 4e e0          	: sub lr, lr, r7
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b e0 4e e0          	: sub lr, lr, fp
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 e0 4e e0          	: sub lr, lr, r3, lsl r0
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 e0 4e e0          	: sub lr, lr, r3, lsr #32
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 e0 4e e0          	: sub lr, lr, r3, asr #32
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 e0 4e e0          	: sub lr, lr, r3, lsl #1
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 e1 4e e0          	: sub lr, lr, r3, lsl #2
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 e2 4e e0          	: sub lr, lr, r3, lsl #4
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 e4 4e e0          	: sub lr, lr, r3, lsl #8
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 e8 4e e0          	: sub lr, lr, r3, lsl #16
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 f0 4e e0          	: sub pc, lr, r3
 >!  Erm -  fetching from unmapped memory, address: 0xfffffffe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 295.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 c0 4e e0          	: sub ip, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 a0 4e e0          	: sub sl, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 1. Lifespan: 2. Instruction: 00000295. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 60 4e e0          	: sub r6, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x80001064)
 >> Reverting instruction          :  03 e0 4e e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 0. Instruction: 00000303. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000107c
 >> Updated                     : 0x0000000080001080
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  13 00 c7 e7          	: bfi r0, r3, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  10 00 c7 e7          	: bfi r0, r0, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  16 00 c7 e7          	: bfi r0, r6, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  1a 00 c7 e7          	: bfi r0, sl, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  02 00 c7 e7          	: strb r0, [r7, r2]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 304 Skipping to end.
 >> Run result: Fault errored program - last instruction: 303.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  32 00 c7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 303.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  52 00 c7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 303.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  92 00 c7 e7          	: bfi r0, r2, #1, #7
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  12 01 c7 e7          	: bfi r0, r2, #2, #6
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  12 02 c7 e7          	: bfi r0, r2, #4, #4
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  12 04 c7 e7          	: bfi r0, r2, #7, #1
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  12 08 c7 e7          	: bfi r0, r2, #7, #1
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  12 10 c7 e7          	: bfi r1, r2, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  12 20 c7 e7          	: bfi r2, r2, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  12 40 c7 e7          	: bfi r4, r2, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000107c. Hit: 1. Lifespan: 2. Instruction: 00000303. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 00 c7 e7          	: bfi r0, r2, #0, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  12 80 c7 e7          	: bfi r8, r2, #0, #8
 >> Lifespan countdown: 2. (0x80001080)
 >> Lifespan countdown: 1. (0x80001084)
 >> Reverting instruction          :  12 00 c7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 0. Instruction: 00000311. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000109c
 >> Updated                     : 0x00000000800010a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  23 e4 a0 e1          	: lsr lr, r3, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  20 e4 a0 e1          	: lsr lr, r0, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  26 e4 a0 e1          	: lsr lr, r6, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  2a e4 a0 e1          	: lsr lr, sl, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  32 e4 a0 e1          	: lsr lr, r2, r4
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  02 e4 a0 e1          	: lsl lr, r2, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  62 e4 a0 e1          	: ror lr, r2, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 e4 a0 e1          	: lsr lr, r2, #9
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  22 e5 a0 e1          	: lsr lr, r2, #0xa
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  22 e6 a0 e1          	: lsr lr, r2, #0xc
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  22 e0 a0 e1          	: lsr lr, r2, #0x20
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  22 ec a0 e1          	: lsr lr, r2, #0x18
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 f4 a0 e1          	: lsr pc, r2, #8
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 311.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 c4 a0 e1          	: lsr ip, r2, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 a4 a0 e1          	: lsr sl, r2, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000109c. Hit: 1. Lifespan: 2. Instruction: 00000311. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 e4 a0 e1          	: lsr lr, r2, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 64 a0 e1          	: lsr r6, r2, #8
 >> Lifespan countdown: 2. (0x800010a0)
 >> Lifespan countdown: 1. (0x800010a4)
 >> Reverting instruction          :  22 e4 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 0. Instruction: 00000318. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010b8
 >> Updated                     : 0x00000000800010bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x1
 >> Updated instruction            :  51 c0 84 e5          	: str ip, [r4, #0x51]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x2
 >> Updated instruction            :  52 c0 84 e5          	: str ip, [r4, #0x52]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x4
 >> Updated instruction            :  54 c0 84 e5          	: str ip, [r4, #0x54]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x8
 >> Updated instruction            :  58 c0 84 e5          	: str ip, [r4, #0x58]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x10
 >> Updated instruction            :  40 c0 84 e5          	: str ip, [r4, #0x40]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x20
 >> Updated instruction            :  70 c0 84 e5          	: str ip, [r4, #0x70]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x40
 >> Updated instruction            :  10 c0 84 e5          	: str ip, [r4, #0x10]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x80
 >> Updated instruction            :  d0 c0 84 e5          	: str ip, [r4, #0xd0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110030, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x100
 >> Updated instruction            :  50 c1 84 e5          	: str ip, [r4, #0x150]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100b0, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x200
 >> Updated instruction            :  50 c2 84 e5          	: str ip, [r4, #0x250]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101b0, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x400
 >> Updated instruction            :  50 c4 84 e5          	: str ip, [r4, #0x450]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103b0, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x800
 >> Updated instruction            :  50 c8 84 e5          	: str ip, [r4, #0x850]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107b0, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x1000
 >> Updated instruction            :  50 d0 84 e5          	: str sp, [r4, #0x50]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x2000
 >> Updated instruction            :  50 e0 84 e5          	: str lr, [r4, #0x50]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x4000
 >> Updated instruction            :  50 80 84 e5          	: str r8, [r4, #0x50]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b8. Hit: 1. Lifespan: 2. Instruction: 00000318. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 c0 84 e5          	: str ip, [r4, #0x50]
 >> Mask                           :  0x8000
 >> Updated instruction            :  50 40 84 e5          	: str r4, [r4, #0x50]
 >> Lifespan countdown: 2. (0x800010bc)
 >> Lifespan countdown: 1. (0x800010c0)
 >> Reverting instruction          :  50 c0 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 0. Instruction: 00000331. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004c0
 >> Updated                     : 0x00000000800004c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x1
 >> Updated instruction            :  71 00 0b e5          	: str r0, [fp, #-0x71]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x2
 >> Updated instruction            :  72 00 0b e5          	: str r0, [fp, #-0x72]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x4
 >> Updated instruction            :  74 00 0b e5          	: str r0, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x8
 >> Updated instruction            :  78 00 0b e5          	: str r0, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x10
 >> Updated instruction            :  60 00 0b e5          	: str r0, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x20
 >> Updated instruction            :  50 00 0b e5          	: str r0, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x40
 >> Updated instruction            :  30 00 0b e5          	: str r0, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x80
 >> Updated instruction            :  f0 00 0b e5          	: str r0, [fp, #-0xf0]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x100
 >> Updated instruction            :  70 01 0b e5          	: str r0, [fp, #-0x170]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x200
 >> Updated instruction            :  70 02 0b e5          	: str r0, [fp, #-0x270]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x400
 >> Updated instruction            :  70 04 0b e5          	: str r0, [fp, #-0x470]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x800
 >> Updated instruction            :  70 08 0b e5          	: str r0, [fp, #-0x870]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x1000
 >> Updated instruction            :  70 10 0b e5          	: str r1, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x2000
 >> Updated instruction            :  70 20 0b e5          	: str r2, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x4000
 >> Updated instruction            :  70 40 0b e5          	: str r4, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c0. Hit: 1. Lifespan: 2. Instruction: 00000331. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  70 00 0b e5          	: str r0, [fp, #-0x70]
 >> Mask                           :  0x8000
 >> Updated instruction            :  70 80 0b e5          	: str r8, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x800004c4)
 >> Lifespan countdown: 1. (0x800004c8)
 >> Reverting instruction          :  70 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 0. Instruction: 00000337. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004d8
 >> Updated                     : 0x00000000800004dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x1
 >> Updated instruction            :  57 07 0b e3          	: movw r0, #0xb757
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x2
 >> Updated instruction            :  54 07 0b e3          	: movw r0, #0xb754
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x4
 >> Updated instruction            :  52 07 0b e3          	: movw r0, #0xb752
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x8
 >> Updated instruction            :  5e 07 0b e3          	: movw r0, #0xb75e
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x10
 >> Updated instruction            :  46 07 0b e3          	: movw r0, #0xb746
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x20
 >> Updated instruction            :  76 07 0b e3          	: movw r0, #0xb776
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x40
 >> Updated instruction            :  16 07 0b e3          	: movw r0, #0xb716
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x80
 >> Updated instruction            :  d6 07 0b e3          	: movw r0, #0xb7d6
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x100
 >> Updated instruction            :  56 06 0b e3          	: movw r0, #0xb656
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x200
 >> Updated instruction            :  56 05 0b e3          	: movw r0, #0xb556
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x400
 >> Updated instruction            :  56 03 0b e3          	: movw r0, #0xb356
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x800
 >> Updated instruction            :  56 0f 0b e3          	: movw r0, #0xbf56
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x1000
 >> Updated instruction            :  56 17 0b e3          	: movw r1, #0xb756
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000b756, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x2000
 >> Updated instruction            :  56 27 0b e3          	: movw r2, #0xb756
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x4000
 >> Updated instruction            :  56 47 0b e3          	: movw r4, #0xb756
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004d8. Hit: 1. Lifespan: 2. Instruction: 00000337. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  56 07 0b e3          	: movw r0, #0xb756
 >> Mask                           :  0x8000
 >> Updated instruction            :  56 87 0b e3          	: movw r8, #0xb756
 >> Lifespan countdown: 2. (0x800004dc)
 >> Lifespan countdown: 1. (0x800004e0)
 >> Reverting instruction          :  56 07 0b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 0. Instruction: 00000347. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000500
 >> Updated                     : 0x0000000080000504
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x1
 >> Updated instruction            :  2b 36 0c e3          	: movw r3, #0xc62b
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x2
 >> Updated instruction            :  28 36 0c e3          	: movw r3, #0xc628
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x4
 >> Updated instruction            :  2e 36 0c e3          	: movw r3, #0xc62e
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x8
 >> Updated instruction            :  22 36 0c e3          	: movw r3, #0xc622
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x10
 >> Updated instruction            :  3a 36 0c e3          	: movw r3, #0xc63a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x20
 >> Updated instruction            :  0a 36 0c e3          	: movw r3, #0xc60a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x40
 >> Updated instruction            :  6a 36 0c e3          	: movw r3, #0xc66a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x80
 >> Updated instruction            :  aa 36 0c e3          	: movw r3, #0xc6aa
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x100
 >> Updated instruction            :  2a 37 0c e3          	: movw r3, #0xc72a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x200
 >> Updated instruction            :  2a 34 0c e3          	: movw r3, #0xc42a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x400
 >> Updated instruction            :  2a 32 0c e3          	: movw r3, #0xc22a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x800
 >> Updated instruction            :  2a 3e 0c e3          	: movw r3, #0xce2a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x1000
 >> Updated instruction            :  2a 26 0c e3          	: movw r2, #0xc62a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x2000
 >> Updated instruction            :  2a 16 0c e3          	: movw r1, #0xc62a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000c62a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x4000
 >> Updated instruction            :  2a 76 0c e3          	: movw r7, #0xc62a
 >> Lifespan countdown: 2. (0x80000504)
 >> Lifespan countdown: 1. (0x80000508)
 >> Reverting instruction          :  2a 36 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000500. Hit: 1. Lifespan: 2. Instruction: 00000347. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2a 36 0c e3          	: movw r3, #0xc62a
 >> Mask                           :  0x8000
 >> Updated instruction            :  2a b6 0c e3          	: movw fp, #0xc62a
 >> Lifespan countdown: 2. (0x80000504)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc5ae, value: 0xc1bdceee!! Count 349 Skipping to end.
 >> Run result: Fault errored program - last instruction: 348.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 0. Instruction: 00000355. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000520
 >> Updated                     : 0x0000000080000524
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x1
 >> Updated instruction            :  47 3d 4f e3          	: movt r3, #0xfd47
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x2
 >> Updated instruction            :  44 3d 4f e3          	: movt r3, #0xfd44
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x4
 >> Updated instruction            :  42 3d 4f e3          	: movt r3, #0xfd42
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x8
 >> Updated instruction            :  4e 3d 4f e3          	: movt r3, #0xfd4e
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x10
 >> Updated instruction            :  56 3d 4f e3          	: movt r3, #0xfd56
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x20
 >> Updated instruction            :  66 3d 4f e3          	: movt r3, #0xfd66
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x40
 >> Updated instruction            :  06 3d 4f e3          	: movt r3, #0xfd06
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x80
 >> Updated instruction            :  c6 3d 4f e3          	: movt r3, #0xfdc6
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x100
 >> Updated instruction            :  46 3c 4f e3          	: movt r3, #0xfc46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x200
 >> Updated instruction            :  46 3f 4f e3          	: movt r3, #0xff46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x400
 >> Updated instruction            :  46 39 4f e3          	: movt r3, #0xf946
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x800
 >> Updated instruction            :  46 35 4f e3          	: movt r3, #0xf546
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x1000
 >> Updated instruction            :  46 2d 4f e3          	: movt r2, #0xfd46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x2000
 >> Updated instruction            :  46 1d 4f e3          	: movt r1, #0xfd46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fd46ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x4000
 >> Updated instruction            :  46 7d 4f e3          	: movt r7, #0xfd46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000520. Hit: 1. Lifespan: 2. Instruction: 00000355. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  46 3d 4f e3          	: movt r3, #0xfd46
 >> Mask                           :  0x8000
 >> Updated instruction            :  46 bd 4f e3          	: movt fp, #0xfd46
 >> Lifespan countdown: 2. (0x80000524)
 >> Lifespan countdown: 1. (0x80000528)
 >> Reverting instruction          :  46 3d 4f e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xfd46fe94, value: 0x9501!! Count 358 Skipping to end.
 >> Run result: Fault errored program - last instruction: 357.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 0. Instruction: 00000362. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000053c
 >> Updated                     : 0x0000000080000540
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x1
 >> Updated instruction            :  6d 20 0b e5          	: str r2, [fp, #-0x6d]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x2
 >> Updated instruction            :  6e 20 0b e5          	: str r2, [fp, #-0x6e]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x4
 >> Updated instruction            :  68 20 0b e5          	: str r2, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x8
 >> Updated instruction            :  64 20 0b e5          	: str r2, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x10
 >> Updated instruction            :  7c 20 0b e5          	: str r2, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x20
 >> Updated instruction            :  4c 20 0b e5          	: str r2, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x40
 >> Updated instruction            :  2c 20 0b e5          	: str r2, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x98, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ec 20 0b e5          	: str r2, [fp, #-0xec]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x100
 >> Updated instruction            :  6c 21 0b e5          	: str r2, [fp, #-0x16c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x200
 >> Updated instruction            :  6c 22 0b e5          	: str r2, [fp, #-0x26c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x400
 >> Updated instruction            :  6c 24 0b e5          	: str r2, [fp, #-0x46c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x800
 >> Updated instruction            :  6c 28 0b e5          	: str r2, [fp, #-0x86c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c 30 0b e5          	: str r3, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c 00 0b e5          	: str r0, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 60 0b e5          	: str r6, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000053c. Hit: 1. Lifespan: 2. Instruction: 00000362. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 20 0b e5          	: str r2, [fp, #-0x6c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c a0 0b e5          	: str sl, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000540)
 >> Lifespan countdown: 1. (0x80000544)
 >> Reverting instruction          :  6c 20 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 0. Instruction: 00000372. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000564
 >> Updated                     : 0x0000000080000568
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 c0 20 e0          	: eor ip, r0, r2
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 c0 20 e0          	: eor ip, r0, r1
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 c0 20 e0          	: eor ip, r0, r7
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b c0 20 e0          	: eor ip, r0, fp
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 c0 20 e0          	: eor ip, r0, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 c0 20 e0          	: eor ip, r0, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 c0 20 e0          	: eor ip, r0, r3, asr #32
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 c0 20 e0          	: eor ip, r0, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 c1 20 e0          	: eor ip, r0, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 c2 20 e0          	: eor ip, r0, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 c4 20 e0          	: eor ip, r0, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 c8 20 e0          	: eor ip, r0, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 d0 20 e0          	: eor sp, r0, r3
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 e0 20 e0          	: eor lr, r0, r3
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 80 20 e0          	: eor r8, r0, r3
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000564. Hit: 1. Lifespan: 2. Instruction: 00000372. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 20 e0          	: eor ip, r0, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 40 20 e0          	: eor r4, r0, r3
 >> Lifespan countdown: 2. (0x80000568)
 >> Lifespan countdown: 1. (0x8000056c)
 >> Reverting instruction          :  03 c0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 0. Instruction: 00000380. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000584
 >> Updated                     : 0x0000000080000588
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 88 e0          	: add r8, r8, r0
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 88 e0          	: add r8, r8, r3
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 88 e0          	: add r8, r8, r5
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 88 e0          	: add r8, r8, sb
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 88 e0          	: add r8, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 88 e0          	: add r8, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 88 e0          	: add r8, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 88 e0          	: add r8, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 88 e0          	: add r8, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 88 e0          	: add r8, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 88 e0          	: add r8, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 88 e0          	: add r8, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 88 e0          	: add sb, r8, r1
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 88 e0          	: add sl, r8, r1
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 88 e0          	: add ip, r8, r1
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000584. Hit: 1. Lifespan: 2. Instruction: 00000380. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 88 e0          	: add r8, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x80000588)
 >> Lifespan countdown: 1. (0x8000058c)
 >> Reverting instruction          :  01 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 0. Instruction: 00000389. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005a8
 >> Updated                     : 0x00000000800005ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 a0 e1          	: mov lr, r1
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 a0 e1          	: mov lr, r2
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 a0 e1          	: mov lr, r4
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 a0 e1          	: mov lr, r8
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 a0 e1          	: lsl lr, r0, r0
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 a0 e1          	: lsr lr, r0, #0x20
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 a0 e1          	: asr lr, r0, #0x20
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 a0 e1          	: lsl lr, r0, #1
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 a0 e1          	: lsl lr, r0, #2
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 a0 e1          	: lsl lr, r0, #4
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 a0 e1          	: lsl lr, r0, #8
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 a0 e1          	: lsl lr, r0, #0x10
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 a0 e1          	: mov pc, r0
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 389.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 a0 e1          	: mov ip, r0
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 a0 e1          	: mov sl, r0
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005a8. Hit: 1. Lifespan: 2. Instruction: 00000389. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 a0 e1          	: mov lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 a0 e1          	: mov r6, r0
 >> Lifespan countdown: 2. (0x800005ac)
 >> Lifespan countdown: 1. (0x800005b0)
 >> Reverting instruction          :  00 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 0. Instruction: 00000397. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005c8
 >> Updated                     : 0x00000000800005cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 60 97 e5          	: ldr r6, [r7, #9]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 60 97 e5          	: ldr r6, [r7, #0xa]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 60 97 e5          	: ldr r6, [r7, #0xc]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 60 97 e5          	: ldr r6, [r7]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 60 97 e5          	: ldr r6, [r7, #0x18]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 60 97 e5          	: ldr r6, [r7, #0x28]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 60 97 e5          	: ldr r6, [r7, #0x48]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 60 97 e5          	: ldr r6, [r7, #0x88]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 61 97 e5          	: ldr r6, [r7, #0x108]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110080, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 62 97 e5          	: ldr r6, [r7, #0x208]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110180, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 64 97 e5          	: ldr r6, [r7, #0x408]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110380, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 68 97 e5          	: ldr r6, [r7, #0x808]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110780, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 70 97 e5          	: ldr r7, [r7, #8]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 40 97 e5          	: ldr r4, [r7, #8]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 20 97 e5          	: ldr r2, [r7, #8]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005c8. Hit: 1. Lifespan: 2. Instruction: 00000397. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 97 e5          	: ldr r6, [r7, #8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 e0 97 e5          	: ldr lr, [r7, #8]
 >> Lifespan countdown: 2. (0x800005cc)
 >> Lifespan countdown: 1. (0x800005d0)
 >> Reverting instruction          :  08 60 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 0. Instruction: 00000405. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005e8
 >> Updated                     : 0x00000000800005ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 50 84 e0          	: add r5, r4, r6
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 50 84 e0          	: add r5, r4, r5
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 50 84 e0          	: add r5, r4, r3
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 50 84 e0          	: add r5, r4, pc
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 50 84 e0          	: add r5, r4, r7, lsl r0
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 50 84 e0          	: add r5, r4, r7, lsr #32
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 50 84 e0          	: add r5, r4, r7, asr #32
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 50 84 e0          	: add r5, r4, r7, lsl #1
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 51 84 e0          	: add r5, r4, r7, lsl #2
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 52 84 e0          	: add r5, r4, r7, lsl #4
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 54 84 e0          	: add r5, r4, r7, lsl #8
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 58 84 e0          	: add r5, r4, r7, lsl #16
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 40 84 e0          	: add r4, r4, r7
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 70 84 e0          	: add r7, r4, r7
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 10 84 e0          	: add r1, r4, r7
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e39, value: 0x0!! Count 412 Skipping to end.
 >> Run result: Fault errored program - last instruction: 411.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005e8. Hit: 1. Lifespan: 2. Instruction: 00000405. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 50 84 e0          	: add r5, r4, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 d0 84 e0          	: add sp, r4, r7
 >> Lifespan countdown: 2. (0x800005ec)
 >> Lifespan countdown: 1. (0x800005f0)
 >> Reverting instruction          :  07 50 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 0. Instruction: 00000412. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000604
 >> Updated                     : 0x0000000080000608
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x1
 >> Updated instruction            :  ae 4f 00 e3          	: movw r4, #0xfae
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x2
 >> Updated instruction            :  ad 4f 00 e3          	: movw r4, #0xfad
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x4
 >> Updated instruction            :  ab 4f 00 e3          	: movw r4, #0xfab
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x8
 >> Updated instruction            :  a7 4f 00 e3          	: movw r4, #0xfa7
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x10
 >> Updated instruction            :  bf 4f 00 e3          	: movw r4, #0xfbf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x20
 >> Updated instruction            :  8f 4f 00 e3          	: movw r4, #0xf8f
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x40
 >> Updated instruction            :  ef 4f 00 e3          	: movw r4, #0xfef
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x80
 >> Updated instruction            :  2f 4f 00 e3          	: movw r4, #0xf2f
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x100
 >> Updated instruction            :  af 4e 00 e3          	: movw r4, #0xeaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x200
 >> Updated instruction            :  af 4d 00 e3          	: movw r4, #0xdaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x400
 >> Updated instruction            :  af 4b 00 e3          	: movw r4, #0xbaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x800
 >> Updated instruction            :  af 47 00 e3          	: movw r4, #0x7af
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x1000
 >> Updated instruction            :  af 5f 00 e3          	: movw r5, #0xfaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x2000
 >> Updated instruction            :  af 6f 00 e3          	: movw r6, #0xfaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x4000
 >> Updated instruction            :  af 0f 00 e3          	: movw r0, #0xfaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000604. Hit: 1. Lifespan: 2. Instruction: 00000412. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af 4f 00 e3          	: movw r4, #0xfaf
 >> Mask                           :  0x8000
 >> Updated instruction            :  af cf 00 e3          	: movw ip, #0xfaf
 >> Lifespan countdown: 2. (0x80000608)
 >> Lifespan countdown: 1. (0x8000060c)
 >> Reverting instruction          :  af 4f 00 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 0. Instruction: 00000420. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000624
 >> Updated                     : 0x0000000080000628
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc1bdcf52, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 70 a0 e1          	: mov r7, r0
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x51b88690, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 70 a0 e1          	: mov r7, r3
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x64, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 70 a0 e1          	: mov r7, r5
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbcdb4e3d, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 70 a0 e1          	: mov r7, sb
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x64, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 70 a0 e1          	: lsl r7, r1, r0
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x64, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 70 a0 e1          	: lsr r7, r1, #0x20
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x64, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 70 a0 e1          	: asr r7, r1, #0x20
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x63, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 70 a0 e1          	: lsl r7, r1, #1
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21ff24, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 71 a0 e1          	: lsl r7, r1, #2
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fde4, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 72 a0 e1          	: lsl r7, r1, #4
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff664, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 74 a0 e1          	: lsl r7, r1, #8
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6064, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 78 a0 e1          	: lsl r7, r1, #0x10
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600064, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 60 a0 e1          	: mov r6, r1
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc1bdcf52, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 50 a0 e1          	: mov r5, r1
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc1bdcf52, value: 0x0!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 30 a0 e1          	: mov r3, r1
 >> Lifespan countdown: 2. (0x80000628)
 >> Lifespan countdown: 1. (0x8000062c)
 >> Reverting instruction          :  01 70 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc1bdcf52, value: 0x8010ff60!! Count 423 Skipping to end.
 >> Run result: Fault errored program - last instruction: 422.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000624. Hit: 1. Lifespan: 2. Instruction: 00000420. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 70 a0 e1          	: mov r7, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 f0 a0 e1          	: mov pc, r1
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  01 70 a0 e1 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 0. Instruction: 00000427. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000640
 >> Updated                     : 0x0000000080000644
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x1
 >> Updated instruction            :  60 15 82 e0          	: add r1, r2, r0, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x2
 >> Updated instruction            :  63 15 82 e0          	: add r1, r2, r3, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x4
 >> Updated instruction            :  65 15 82 e0          	: add r1, r2, r5, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x8
 >> Updated instruction            :  69 15 82 e0          	: add r1, r2, sb, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x10
 >> Updated instruction            :  71 15 82 e0          	: add r1, r2, r1, ror r5
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x20
 >> Updated instruction            :  41 15 82 e0          	: add r1, r2, r1, asr #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x40
 >> Updated instruction            :  21 15 82 e0          	: add r1, r2, r1, lsr #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x80
 >> Updated instruction            :  e1 15 82 e0          	: add r1, r2, r1, ror #11
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x100
 >> Updated instruction            :  61 14 82 e0          	: add r1, r2, r1, ror #8
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x200
 >> Updated instruction            :  61 17 82 e0          	: add r1, r2, r1, ror #14
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x400
 >> Updated instruction            :  61 11 82 e0          	: add r1, r2, r1, ror #2
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x800
 >> Updated instruction            :  61 1d 82 e0          	: add r1, r2, r1, ror #26
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x1000
 >> Updated instruction            :  61 05 82 e0          	: add r0, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x2000
 >> Updated instruction            :  61 35 82 e0          	: add r3, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x4000
 >> Updated instruction            :  61 55 82 e0          	: add r5, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2427f2b, value: 0x80!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000640. Hit: 1. Lifespan: 2. Instruction: 00000427. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x8000
 >> Updated instruction            :  61 95 82 e0          	: add sb, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x80000644)
 >> Lifespan countdown: 1. (0x80000648)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 0. Instruction: 00000435. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000660
 >> Updated                     : 0x0000000080000664
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 88 e0          	: add r8, r8, sp
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 88 e0          	: add r8, r8, lr
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 88 e0          	: add r8, r8, r8
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 88 e0          	: add r8, r8, r4
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 88 e0          	: add r8, r8, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 88 e0          	: add r8, r8, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 88 e0          	: add r8, r8, ip, asr #32
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 88 e0          	: add r8, r8, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 88 e0          	: add r8, r8, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 88 e0          	: add r8, r8, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 88 e0          	: add r8, r8, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 88 e0          	: add r8, r8, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 88 e0          	: add sb, r8, ip
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 88 e0          	: add sl, r8, ip
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 88 e0          	: add ip, r8, ip
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000660. Hit: 1. Lifespan: 2. Instruction: 00000435. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 88 e0          	: add r0, r8, ip
 >> Lifespan countdown: 2. (0x80000664)
 >> Lifespan countdown: 1. (0x80000668)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 0. Instruction: 00000445. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000688
 >> Updated                     : 0x000000008000068c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 60 86 e0          	: add r6, r6, r1
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 60 86 e0          	: add r6, r6, r2
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 60 86 e0          	: add r6, r6, r4
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 60 86 e0          	: add r6, r6, r8
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 60 86 e0          	: add r6, r6, r0, lsl r0
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 60 86 e0          	: add r6, r6, r0, lsr #32
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 60 86 e0          	: add r6, r6, r0, asr #32
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 60 86 e0          	: add r6, r6, r0, lsl #1
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 61 86 e0          	: add r6, r6, r0, lsl #2
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 62 86 e0          	: add r6, r6, r0, lsl #4
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 64 86 e0          	: add r6, r6, r0, lsl #8
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 68 86 e0          	: add r6, r6, r0, lsl #16
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 70 86 e0          	: add r7, r6, r0
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 40 86 e0          	: add r4, r6, r0
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000099404c6e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 20 86 e0          	: add r2, r6, r0
 >> Lifespan countdown: 2. (0x8000068c)
 >> Lifespan countdown: 1. (0x80000690)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000688. Hit: 1. Lifespan: 2. Instruction: 00000445. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 e0 86 e0          	: add lr, r6, r0
 >> Lifespan countdown: 2. (0x8000068c)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x99404cc2, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 0. Instruction: 00000456. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006b4
 >> Updated                     : 0x00000000800006b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 20 e0          	: eor r5, r0, r0
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 20 e0          	: eor r5, r0, r3
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 20 e0          	: eor r5, r0, r5
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 20 e0          	: eor r5, r0, sb
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 20 e0          	: eor r5, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 20 e0          	: eor r5, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 20 e0          	: eor r5, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 20 e0          	: eor r5, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 20 e0          	: eor r5, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 20 e0          	: eor r5, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 20 e0          	: eor r5, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 20 e0          	: eor r5, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 20 e0          	: eor r4, r0, r1
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000002d77eef, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 20 e0          	: eor r7, r0, r1
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 20 e0          	: eor r1, r0, r1
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006b4. Hit: 1. Lifespan: 2. Instruction: 00000456. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 20 e0          	: eor r5, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 20 e0          	: eor sp, r0, r1
 >> Lifespan countdown: 2. (0x800006b8)
 >> Lifespan countdown: 1. (0x800006bc)
 >> Reverting instruction          :  01 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 0. Instruction: 00000459. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006c0
 >> Updated                     : 0x00000000800006c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 50 85 e0          	: add r5, r5, r0
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 50 85 e0          	: add r5, r5, r6
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 50 85 e0          	: add r5, r5, sl
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 50 85 e0          	: add r5, r5, r2, lsl r0
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 50 85 e0          	: add r5, r5, r2, lsr #32
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 50 85 e0          	: add r5, r5, r2, asr #32
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 50 85 e0          	: add r5, r5, r2, lsl #1
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 51 85 e0          	: add r5, r5, r2, lsl #2
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 52 85 e0          	: add r5, r5, r2, lsl #4
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 54 85 e0          	: add r5, r5, r2, lsl #8
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 58 85 e0          	: add r5, r5, r2, lsl #16
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 40 85 e0          	: add r4, r5, r2
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f3c5a2be, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 70 85 e0          	: add r7, r5, r2
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 10 85 e0          	: add r1, r5, r2
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006c0. Hit: 1. Lifespan: 2. Instruction: 00000459. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 d0 85 e0          	: add sp, r5, r2
 >> Lifespan countdown: 2. (0x800006c4)
 >> Lifespan countdown: 1. (0x800006c8)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 0. Instruction: 00000468. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006e4
 >> Updated                     : 0x00000000800006e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 02 e0          	: and r2, r2, r4
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 02 e0          	: and r2, r2, r7
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 02 e0          	: and r2, r2, r1
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 02 e0          	: and r2, r2, sp
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 02 e0          	: and r2, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 02 e0          	: and r2, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 02 e0          	: and r2, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 02 e0          	: and r2, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 02 e0          	: and r2, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 02 e0          	: and r2, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 02 e0          	: and r2, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 02 e0          	: and r2, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 02 e0          	: and r3, r2, r5
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 02 e0          	: and r0, r2, r5
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x402274, value: 0x0!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 02 e0          	: and r6, r2, r5
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006e4. Hit: 1. Lifespan: 2. Instruction: 00000468. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 02 e0          	: and r2, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 02 e0          	: and sl, r2, r5
 >> Lifespan countdown: 2. (0x800006e8)
 >> Lifespan countdown: 1. (0x800006ec)
 >> Reverting instruction          :  05 20 02 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 0. Instruction: 00000477. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000708
 >> Updated                     : 0x000000008000070c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 26 e0          	: eor r2, r6, r4
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 26 e0          	: eor r2, r6, r7
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 26 e0          	: eor r2, r6, r1
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 26 e0          	: eor r2, r6, sp
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 26 e0          	: eor r2, r6, r5, lsl r0
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 26 e0          	: eor r2, r6, r5, lsr #32
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 26 e0          	: eor r2, r6, r5, asr #32
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 26 e0          	: eor r2, r6, r5, lsl #1
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 26 e0          	: eor r2, r6, r5, lsl #2
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 26 e0          	: eor r2, r6, r5, lsl #4
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 26 e0          	: eor r2, r6, r5, lsl #8
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 26 e0          	: eor r2, r6, r5, lsl #16
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 26 e0          	: eor r3, r6, r5
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 26 e0          	: eor r0, r6, r5
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xcf4be86d, value: 0x0!! Count 493 Skipping to end.
 >> Run result: Fault errored program - last instruction: 492.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 26 e0          	: eor r6, r6, r5
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000708. Hit: 1. Lifespan: 2. Instruction: 00000477. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 26 e0          	: eor r2, r6, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 26 e0          	: eor sl, r6, r5
 >> Lifespan countdown: 2. (0x8000070c)
 >> Lifespan countdown: 1. (0x80000710)
 >> Reverting instruction          :  05 20 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 0. Instruction: 00000484. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000724
 >> Updated                     : 0x0000000080000728
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 c0 22 e0          	: eor ip, r2, r7
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 c0 22 e0          	: eor ip, r2, r4
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 c0 22 e0          	: eor ip, r2, r2
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e c0 22 e0          	: eor ip, r2, lr
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 c0 22 e0          	: eor ip, r2, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 c0 22 e0          	: eor ip, r2, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 c0 22 e0          	: eor ip, r2, r6, asr #32
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 c0 22 e0          	: eor ip, r2, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 c1 22 e0          	: eor ip, r2, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 c2 22 e0          	: eor ip, r2, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 c4 22 e0          	: eor ip, r2, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 c8 22 e0          	: eor ip, r2, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 d0 22 e0          	: eor sp, r2, r6
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 e0 22 e0          	: eor lr, r2, r6
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 80 22 e0          	: eor r8, r2, r6
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000724. Hit: 1. Lifespan: 2. Instruction: 00000484. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 c0 22 e0          	: eor ip, r2, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 40 22 e0          	: eor r4, r2, r6
 >> Lifespan countdown: 2. (0x80000728)
 >> Lifespan countdown: 1. (0x8000072c)
 >> Reverting instruction          :  06 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 0. Instruction: 00000494. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000074c
 >> Updated                     : 0x0000000080000750
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 20 25 e0          	: eor r2, r5, pc
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 20 25 e0          	: eor r2, r5, ip
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 20 25 e0          	: eor r2, r5, sl
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 20 25 e0          	: eor r2, r5, r6
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 20 25 e0          	: eor r2, r5, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 20 25 e0          	: eor r2, r5, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 20 25 e0          	: eor r2, r5, lr, asr #32
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 20 25 e0          	: eor r2, r5, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 21 25 e0          	: eor r2, r5, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 22 25 e0          	: eor r2, r5, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 24 25 e0          	: eor r2, r5, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 28 25 e0          	: eor r2, r5, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 30 25 e0          	: eor r3, r5, lr
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 00 25 e0          	: eor r0, r5, lr
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 60 25 e0          	: eor r6, r5, lr
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000074c. Hit: 1. Lifespan: 2. Instruction: 00000494. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 20 25 e0          	: eor r2, r5, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e a0 25 e0          	: eor sl, r5, lr
 >> Lifespan countdown: 2. (0x80000750)
 >> Lifespan countdown: 1. (0x80000754)
 >> Reverting instruction          :  0e 20 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 0. Instruction: 00000502. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000076c
 >> Updated                     : 0x0000000080000770
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 00 80 e0          	: add r0, r0, r7
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 00 80 e0          	: add r0, r0, r4
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 00 80 e0          	: add r0, r0, r2
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 00 80 e0          	: add r0, r0, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 00 80 e0          	: add r0, r0, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 00 80 e0          	: add r0, r0, r6, asr #32
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 00 80 e0          	: add r0, r0, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 01 80 e0          	: add r0, r0, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 02 80 e0          	: add r0, r0, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 04 80 e0          	: add r0, r0, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 08 80 e0          	: add r0, r0, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 10 80 e0          	: add r1, r0, r6
 >> Lifespan countdown: 2. (0x80000770)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5388e024, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 20 80 e0          	: add r2, r0, r6
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 40 80 e0          	: add r4, r0, r6
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000076c. Hit: 1. Lifespan: 2. Instruction: 00000502. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 00 80 e0          	: add r0, r0, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 80 80 e0          	: add r8, r0, r6
 >> Lifespan countdown: 2. (0x80000770)
 >> Lifespan countdown: 1. (0x80000774)
 >> Reverting instruction          :  06 00 80 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5388e028, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 0. Instruction: 00000510. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000078c
 >> Updated                     : 0x0000000080000790
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 01 e0          	: and r1, r1, r1
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 01 e0          	: and r1, r1, r2
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 01 e0          	: and r1, r1, r4
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 01 e0          	: and r1, r1, r8
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 01 e0          	: and r1, r1, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 01 e0          	: and r1, r1, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 01 e0          	: and r1, r1, r0, asr #32
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 01 e0          	: and r1, r1, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 01 e0          	: and r1, r1, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 01 e0          	: and r1, r1, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 01 e0          	: and r1, r1, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 01 e0          	: and r1, r1, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 01 e0          	: and r0, r1, r0
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 01 e0          	: and r3, r1, r0
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 01 e0          	: and r5, r1, r0
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000078c. Hit: 1. Lifespan: 2. Instruction: 00000510. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 01 e0          	: and r1, r1, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 01 e0          	: and sb, r1, r0
 >> Lifespan countdown: 2. (0x80000790)
 >> Lifespan countdown: 1. (0x80000794)
 >> Reverting instruction          :  00 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 0. Instruction: 00000518. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007ac
 >> Updated                     : 0x00000000800007b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 82 e0          	: add r2, r2, r4
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 82 e0          	: add r2, r2, r7
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 82 e0          	: add r2, r2, r1
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 82 e0          	: add r2, r2, sp
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 82 e0          	: add r2, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 82 e0          	: add r2, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 82 e0          	: add r2, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 82 e0          	: add r2, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 82 e0          	: add r2, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 82 e0          	: add r2, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 82 e0          	: add r2, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 82 e0          	: add r2, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 82 e0          	: add r3, r2, r5
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 82 e0          	: add r0, r2, r5
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 82 e0          	: add r6, r2, r5
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007ac. Hit: 1. Lifespan: 2. Instruction: 00000518. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 82 e0          	: add sl, r2, r5
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 0. Instruction: 00000526. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007cc
 >> Updated                     : 0x00000000800007d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x1
 >> Updated instruction            :  39 10 0b e5          	: str r1, [fp, #-0x39]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 10 0b e5          	: str r1, [fp, #-0x3a]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 10 0b e5          	: str r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x8
 >> Updated instruction            :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x10
 >> Updated instruction            :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x20
 >> Updated instruction            :  18 10 0b e5          	: str r1, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x40
 >> Updated instruction            :  78 10 0b e5          	: str r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 10 0b e5          	: str r1, [fp, #-0xb8]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x100
 >> Updated instruction            :  38 11 0b e5          	: str r1, [fp, #-0x138]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x200
 >> Updated instruction            :  38 12 0b e5          	: str r1, [fp, #-0x238]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x400
 >> Updated instruction            :  38 14 0b e5          	: str r1, [fp, #-0x438]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x800
 >> Updated instruction            :  38 18 0b e5          	: str r1, [fp, #-0x838]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 00 0b e5          	: str r0, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 30 0b e5          	: str r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 50 0b e5          	: str r5, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007cc. Hit: 1. Lifespan: 2. Instruction: 00000526. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 90 0b e5          	: str sb, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007d0)
 >> Lifespan countdown: 1. (0x800007d4)
 >> Reverting instruction          :  38 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 0. Instruction: 00000533. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007e8
 >> Updated                     : 0x00000000800007ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x1
 >> Updated instruction            :  85 e0 88 e5          	: str lr, [r8, #0x85]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x2
 >> Updated instruction            :  86 e0 88 e5          	: str lr, [r8, #0x86]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x4
 >> Updated instruction            :  80 e0 88 e5          	: str lr, [r8, #0x80]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x8
 >> Updated instruction            :  8c e0 88 e5          	: str lr, [r8, #0x8c]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x10
 >> Updated instruction            :  94 e0 88 e5          	: str lr, [r8, #0x94]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x20
 >> Updated instruction            :  a4 e0 88 e5          	: str lr, [r8, #0xa4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x40
 >> Updated instruction            :  c4 e0 88 e5          	: str lr, [r8, #0xc4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110024, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x80
 >> Updated instruction            :  04 e0 88 e5          	: str lr, [r8, #4]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x100
 >> Updated instruction            :  84 e1 88 e5          	: str lr, [r8, #0x184]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100e4, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x200
 >> Updated instruction            :  84 e2 88 e5          	: str lr, [r8, #0x284]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101e4, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x400
 >> Updated instruction            :  84 e4 88 e5          	: str lr, [r8, #0x484]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103e4, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x800
 >> Updated instruction            :  84 e8 88 e5          	: str lr, [r8, #0x884]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107e4, value: 0x0!! Count 534 Skipping to end.
 >> Run result: Fault errored program - last instruction: 533.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x1000
 >> Updated instruction            :  84 f0 88 e5          	: str pc, [r8, #0x84]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x2000
 >> Updated instruction            :  84 c0 88 e5          	: str ip, [r8, #0x84]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x4000
 >> Updated instruction            :  84 a0 88 e5          	: str sl, [r8, #0x84]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e8. Hit: 1. Lifespan: 2. Instruction: 00000533. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  84 e0 88 e5          	: str lr, [r8, #0x84]
 >> Mask                           :  0x8000
 >> Updated instruction            :  84 60 88 e5          	: str r6, [r8, #0x84]
 >> Lifespan countdown: 2. (0x800007ec)
 >> Lifespan countdown: 1. (0x800007f0)
 >> Reverting instruction          :  84 e0 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 0. Instruction: 00000541. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000808
 >> Updated                     : 0x000000008000080c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 89 e0          	: add ip, sb, sp
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 89 e0          	: add ip, sb, lr
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 89 e0          	: add ip, sb, r8
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 89 e0          	: add ip, sb, r4
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 89 e0          	: add ip, sb, ip, lsl r0
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 89 e0          	: add ip, sb, ip, lsr #32
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 89 e0          	: add ip, sb, ip, asr #32
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 89 e0          	: add ip, sb, ip, lsl #1
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 89 e0          	: add ip, sb, ip, lsl #2
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 89 e0          	: add ip, sb, ip, lsl #4
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 89 e0          	: add ip, sb, ip, lsl #8
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 89 e0          	: add ip, sb, ip, lsl #16
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 89 e0          	: add sp, sb, ip
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 89 e0          	: add lr, sb, ip
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 89 e0          	: add r8, sb, ip
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000808. Hit: 1. Lifespan: 2. Instruction: 00000541. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 89 e0          	: add ip, sb, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 89 e0          	: add r4, sb, ip
 >> Lifespan countdown: 2. (0x8000080c)
 >> Lifespan countdown: 1. (0x80000810)
 >> Reverting instruction          :  0c c0 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 0. Instruction: 00000551. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000830
 >> Updated                     : 0x0000000080000834
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f c0 0c e0          	: and ip, ip, pc
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c c0 0c e0          	: and ip, ip, ip
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a c0 0c e0          	: and ip, ip, sl
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 c0 0c e0          	: and ip, ip, r6
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e c0 0c e0          	: and ip, ip, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e c0 0c e0          	: and ip, ip, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e c0 0c e0          	: and ip, ip, lr, asr #32
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e c0 0c e0          	: and ip, ip, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e c1 0c e0          	: and ip, ip, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e c2 0c e0          	: and ip, ip, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e c4 0c e0          	: and ip, ip, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e c8 0c e0          	: and ip, ip, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e d0 0c e0          	: and sp, ip, lr
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e e0 0c e0          	: and lr, ip, lr
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 80 0c e0          	: and r8, ip, lr
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000830. Hit: 1. Lifespan: 2. Instruction: 00000551. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 0c e0          	: and ip, ip, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 40 0c e0          	: and r4, ip, lr
 >> Lifespan countdown: 2. (0x80000834)
 >> Lifespan countdown: 1. (0x80000838)
 >> Reverting instruction          :  0e c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 0. Instruction: 00000559. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000850
 >> Updated                     : 0x0000000080000854
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x1
 >> Updated instruction            :  39 70 9c e5          	: ldr r7, [ip, #0x39]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 70 9c e5          	: ldr r7, [ip, #0x3a]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 70 9c e5          	: ldr r7, [ip, #0x3c]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x8
 >> Updated instruction            :  30 70 9c e5          	: ldr r7, [ip, #0x30]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x10
 >> Updated instruction            :  28 70 9c e5          	: ldr r7, [ip, #0x28]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x20
 >> Updated instruction            :  18 70 9c e5          	: ldr r7, [ip, #0x18]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x40
 >> Updated instruction            :  78 70 9c e5          	: ldr r7, [ip, #0x78]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 70 9c e5          	: ldr r7, [ip, #0xb8]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x100
 >> Updated instruction            :  38 71 9c e5          	: ldr r7, [ip, #0x138]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801100b0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x200
 >> Updated instruction            :  38 72 9c e5          	: ldr r7, [ip, #0x238]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801101b0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x400
 >> Updated instruction            :  38 74 9c e5          	: ldr r7, [ip, #0x438]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801103b0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x800
 >> Updated instruction            :  38 78 9c e5          	: ldr r7, [ip, #0x838]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801107b0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 60 9c e5          	: ldr r6, [ip, #0x38]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 50 9c e5          	: ldr r5, [ip, #0x38]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 30 9c e5          	: ldr r3, [ip, #0x38]
 >> Lifespan countdown: 2. (0x80000854)
 >> Lifespan countdown: 1. (0x80000858)
 >> Reverting instruction          :  38 70 9c e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000850. Hit: 1. Lifespan: 2. Instruction: 00000559. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 70 9c e5          	: ldr r7, [ip, #0x38]
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 f0 9c e5          	: ldr pc, [ip, #0x38]
 >!  Erm -  fetching from unmapped memory, address: 0x80, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 559.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 0. Instruction: 00000564. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000864
 >> Updated                     : 0x0000000080000868
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x1
 >> Updated instruction            :  91 70 89 e5          	: str r7, [sb, #0x91]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x2
 >> Updated instruction            :  92 70 89 e5          	: str r7, [sb, #0x92]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x4
 >> Updated instruction            :  94 70 89 e5          	: str r7, [sb, #0x94]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x8
 >> Updated instruction            :  98 70 89 e5          	: str r7, [sb, #0x98]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x10
 >> Updated instruction            :  80 70 89 e5          	: str r7, [sb, #0x80]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x20
 >> Updated instruction            :  b0 70 89 e5          	: str r7, [sb, #0xb0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110010, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x40
 >> Updated instruction            :  d0 70 89 e5          	: str r7, [sb, #0xd0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110030, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x80
 >> Updated instruction            :  10 70 89 e5          	: str r7, [sb, #0x10]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x100
 >> Updated instruction            :  90 71 89 e5          	: str r7, [sb, #0x190]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100f0, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x200
 >> Updated instruction            :  90 72 89 e5          	: str r7, [sb, #0x290]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101f0, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x400
 >> Updated instruction            :  90 74 89 e5          	: str r7, [sb, #0x490]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103f0, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x800
 >> Updated instruction            :  90 78 89 e5          	: str r7, [sb, #0x890]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107f0, value: 0x80!! Count 565 Skipping to end.
 >> Run result: Fault errored program - last instruction: 564.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x1000
 >> Updated instruction            :  90 60 89 e5          	: str r6, [sb, #0x90]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x2000
 >> Updated instruction            :  90 50 89 e5          	: str r5, [sb, #0x90]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x4000
 >> Updated instruction            :  90 30 89 e5          	: str r3, [sb, #0x90]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000864. Hit: 1. Lifespan: 2. Instruction: 00000564. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 70 89 e5          	: str r7, [sb, #0x90]
 >> Mask                           :  0x8000
 >> Updated instruction            :  90 f0 89 e5          	: str pc, [sb, #0x90]
 >> Lifespan countdown: 2. (0x80000868)
 >> Lifespan countdown: 1. (0x8000086c)
 >> Reverting instruction          :  90 70 89 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 0. Instruction: 00000568. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000874
 >> Updated                     : 0x0000000080000878
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x1
 >> Updated instruction            :  6d 50 0b e5          	: str r5, [fp, #-0x6d]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x2
 >> Updated instruction            :  6e 50 0b e5          	: str r5, [fp, #-0x6e]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x4
 >> Updated instruction            :  68 50 0b e5          	: str r5, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x8
 >> Updated instruction            :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x10
 >> Updated instruction            :  7c 50 0b e5          	: str r5, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x20
 >> Updated instruction            :  4c 50 0b e5          	: str r5, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x40
 >> Updated instruction            :  2c 50 0b e5          	: str r5, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ec 50 0b e5          	: str r5, [fp, #-0xec]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x100
 >> Updated instruction            :  6c 51 0b e5          	: str r5, [fp, #-0x16c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x200
 >> Updated instruction            :  6c 52 0b e5          	: str r5, [fp, #-0x26c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x400
 >> Updated instruction            :  6c 54 0b e5          	: str r5, [fp, #-0x46c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x800
 >> Updated instruction            :  6c 58 0b e5          	: str r5, [fp, #-0x86c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c 40 0b e5          	: str r4, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c 70 0b e5          	: str r7, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 10 0b e5          	: str r1, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000874. Hit: 1. Lifespan: 2. Instruction: 00000568. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c d0 0b e5          	: str sp, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000878)
 >> Lifespan countdown: 1. (0x8000087c)
 >> Reverting instruction          :  6c 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 0. Instruction: 00000577. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000898
 >> Updated                     : 0x000000008000089c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 0c e0          	: and ip, ip, r4
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 0c e0          	: and ip, ip, r7
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 0c e0          	: and ip, ip, r1
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 0c e0          	: and ip, ip, sp
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 0c e0          	: and ip, ip, r5, lsl r0
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 0c e0          	: and ip, ip, r5, lsr #32
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 0c e0          	: and ip, ip, r5, asr #32
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 0c e0          	: and ip, ip, r5, lsl #1
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 0c e0          	: and ip, ip, r5, lsl #2
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 0c e0          	: and ip, ip, r5, lsl #4
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 0c e0          	: and ip, ip, r5, lsl #8
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 0c e0          	: and ip, ip, r5, lsl #16
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 0c e0          	: and sp, ip, r5
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 0c e0          	: and lr, ip, r5
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 0c e0          	: and r8, ip, r5
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000898. Hit: 1. Lifespan: 2. Instruction: 00000577. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 0c e0          	: and ip, ip, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 0c e0          	: and r4, ip, r5
 >> Lifespan countdown: 2. (0x8000089c)
 >> Lifespan countdown: 1. (0x800008a0)
 >> Reverting instruction          :  05 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 0. Instruction: 00000590. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008cc
 >> Updated                     : 0x00000000800008d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 90 29 e0          	: eor sb, sb, r4
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 90 29 e0          	: eor sb, sb, r7
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 90 29 e0          	: eor sb, sb, r1
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 90 29 e0          	: eor sb, sb, sp
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 90 29 e0          	: eor sb, sb, r5, lsl r0
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 90 29 e0          	: eor sb, sb, r5, lsr #32
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 90 29 e0          	: eor sb, sb, r5, asr #32
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 90 29 e0          	: eor sb, sb, r5, lsl #1
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 91 29 e0          	: eor sb, sb, r5, lsl #2
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 92 29 e0          	: eor sb, sb, r5, lsl #4
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 94 29 e0          	: eor sb, sb, r5, lsl #8
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 98 29 e0          	: eor sb, sb, r5, lsl #16
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 80 29 e0          	: eor r8, sb, r5
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 b0 29 e0          	: eor fp, sb, r5
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000bd94305d, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 598.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 d0 29 e0          	: eor sp, sb, r5
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008cc. Hit: 1. Lifespan: 2. Instruction: 00000590. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 29 e0          	: eor sb, sb, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 10 29 e0          	: eor r1, sb, r5
 >> Lifespan countdown: 2. (0x800008d0)
 >> Lifespan countdown: 1. (0x800008d4)
 >> Reverting instruction          :  05 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 0. Instruction: 00000594. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008dc
 >> Updated                     : 0x00000000800008e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 8a e0          	: add ip, sl, sp
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 8a e0          	: add ip, sl, lr
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 8a e0          	: add ip, sl, r8
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 8a e0          	: add ip, sl, r4
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 8a e0          	: add ip, sl, ip, lsl r0
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 8a e0          	: add ip, sl, ip, lsr #32
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 8a e0          	: add ip, sl, ip, asr #32
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 8a e0          	: add ip, sl, ip, lsl #1
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 8a e0          	: add ip, sl, ip, lsl #2
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 8a e0          	: add ip, sl, ip, lsl #4
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 8a e0          	: add ip, sl, ip, lsl #8
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 8a e0          	: add ip, sl, ip, lsl #16
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 8a e0          	: add sp, sl, ip
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 8a e0          	: add lr, sl, ip
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 8a e0          	: add r8, sl, ip
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008dc. Hit: 1. Lifespan: 2. Instruction: 00000594. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 8a e0          	: add r4, sl, ip
 >> Lifespan countdown: 2. (0x800008e0)
 >> Lifespan countdown: 1. (0x800008e4)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 0. Instruction: 00000604. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000904
 >> Updated                     : 0x0000000080000908
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 a0 8a e0          	: add sl, sl, r7
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 a0 8a e0          	: add sl, sl, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 a0 8a e0          	: add sl, sl, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 a0 8a e0          	: add sl, sl, r5, asr #32
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 a0 8a e0          	: add sl, sl, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 a1 8a e0          	: add sl, sl, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 a2 8a e0          	: add sl, sl, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 a4 8a e0          	: add sl, sl, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 a8 8a e0          	: add sl, sl, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 b0 8a e0          	: add fp, sl, r5
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000e3e34a36, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 606.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 80 8a e0          	: add r8, sl, r5
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 e0 8a e0          	: add lr, sl, r5
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000904. Hit: 1. Lifespan: 2. Instruction: 00000604. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 20 8a e0          	: add r2, sl, r5
 >> Lifespan countdown: 2. (0x80000908)
 >> Lifespan countdown: 1. (0x8000090c)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 0. Instruction: 00000613. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000928
 >> Updated                     : 0x000000008000092c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 08 e0          	: and r8, r8, r0
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 08 e0          	: and r8, r8, r3
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 08 e0          	: and r8, r8, r5
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 08 e0          	: and r8, r8, sb
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 08 e0          	: and r8, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 08 e0          	: and r8, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 08 e0          	: and r8, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 08 e0          	: and r8, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 08 e0          	: and r8, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 08 e0          	: and r8, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 08 e0          	: and r8, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 08 e0          	: and r8, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 08 e0          	: and sb, r8, r1
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 08 e0          	: and sl, r8, r1
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 08 e0          	: and ip, r8, r1
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000928. Hit: 1. Lifespan: 2. Instruction: 00000613. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 08 e0          	: and r0, r8, r1
 >> Lifespan countdown: 2. (0x8000092c)
 >> Lifespan countdown: 1. (0x80000930)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 0. Instruction: 00000622. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000094c
 >> Updated                     : 0x0000000080000950
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x1
 >> Updated instruction            :  69 89 8c e0          	: add r8, ip, sb, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x2
 >> Updated instruction            :  6a 89 8c e0          	: add r8, ip, sl, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x4
 >> Updated instruction            :  6c 89 8c e0          	: add r8, ip, ip, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x8
 >> Updated instruction            :  60 89 8c e0          	: add r8, ip, r0, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x10
 >> Updated instruction            :  78 89 8c e0          	: add r8, ip, r8, ror sb
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x20
 >> Updated instruction            :  48 89 8c e0          	: add r8, ip, r8, asr #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x40
 >> Updated instruction            :  28 89 8c e0          	: add r8, ip, r8, lsr #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x80
 >> Updated instruction            :  e8 89 8c e0          	: add r8, ip, r8, ror #19
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x100
 >> Updated instruction            :  68 88 8c e0          	: add r8, ip, r8, ror #16
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x200
 >> Updated instruction            :  68 8b 8c e0          	: add r8, ip, r8, ror #22
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x400
 >> Updated instruction            :  68 8d 8c e0          	: add r8, ip, r8, ror #26
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x800
 >> Updated instruction            :  68 81 8c e0          	: add r8, ip, r8, ror #2
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x1000
 >> Updated instruction            :  68 99 8c e0          	: add sb, ip, r8, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x2000
 >> Updated instruction            :  68 a9 8c e0          	: add sl, ip, r8, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x4000
 >> Updated instruction            :  68 c9 8c e0          	: add ip, ip, r8, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000094c. Hit: 1. Lifespan: 2. Instruction: 00000622. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 89 8c e0          	: add r8, ip, r8, ror #18
 >> Mask                           :  0x8000
 >> Updated instruction            :  68 09 8c e0          	: add r0, ip, r8, ror #18
 >> Lifespan countdown: 2. (0x80000950)
 >> Lifespan countdown: 1. (0x80000954)
 >> Reverting instruction          :  68 89 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 0. Instruction: 00000631. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000970
 >> Updated                     : 0x0000000080000974
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 90 29 e0          	: eor sb, sb, sp
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 90 29 e0          	: eor sb, sb, lr
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 90 29 e0          	: eor sb, sb, r8
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 90 29 e0          	: eor sb, sb, r4
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 90 29 e0          	: eor sb, sb, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 90 29 e0          	: eor sb, sb, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 90 29 e0          	: eor sb, sb, ip, asr #32
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 90 29 e0          	: eor sb, sb, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 91 29 e0          	: eor sb, sb, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 92 29 e0          	: eor sb, sb, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 94 29 e0          	: eor sb, sb, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 98 29 e0          	: eor sb, sb, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 80 29 e0          	: eor r8, sb, ip
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c b0 29 e0          	: eor fp, sb, ip
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000027afe978, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c d0 29 e0          	: eor sp, sb, ip
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000970. Hit: 1. Lifespan: 2. Instruction: 00000631. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 10 29 e0          	: eor r1, sb, ip
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 0. Instruction: 00000638. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000098c
 >> Updated                     : 0x0000000080000990
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 a0 8a e0          	: add sl, sl, sb
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a a0 8a e0          	: add sl, sl, sl
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c a0 8a e0          	: add sl, sl, ip
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 a0 8a e0          	: add sl, sl, r0
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 a0 8a e0          	: add sl, sl, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 a0 8a e0          	: add sl, sl, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 a0 8a e0          	: add sl, sl, r8, asr #32
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 a0 8a e0          	: add sl, sl, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 a1 8a e0          	: add sl, sl, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 a2 8a e0          	: add sl, sl, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 a4 8a e0          	: add sl, sl, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 a8 8a e0          	: add sl, sl, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 b0 8a e0          	: add fp, sl, r8
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000007898eb5, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 80 8a e0          	: add r8, sl, r8
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 e0 8a e0          	: add lr, sl, r8
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000098c. Hit: 1. Lifespan: 2. Instruction: 00000638. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 20 8a e0          	: add r2, sl, r8
 >> Lifespan countdown: 2. (0x80000990)
 >> Lifespan countdown: 1. (0x80000994)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 0. Instruction: 00000645. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009a8
 >> Updated                     : 0x00000000800009ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 81 e0          	: add r5, r1, r4
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 81 e0          	: add r5, r1, r7
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 81 e0          	: add r5, r1, r1
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 81 e0          	: add r5, r1, sp
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 81 e0          	: add r5, r1, r5, lsl r0
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 81 e0          	: add r5, r1, r5, lsr #32
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 81 e0          	: add r5, r1, r5, asr #32
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 81 e0          	: add r5, r1, r5, lsl #1
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 81 e0          	: add r5, r1, r5, lsl #2
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 81 e0          	: add r5, r1, r5, lsl #4
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 81 e0          	: add r5, r1, r5, lsl #8
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 81 e0          	: add r5, r1, r5, lsl #16
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 81 e0          	: add r4, r1, r5
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 81 e0          	: add r7, r1, r5
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 81 e0          	: add r1, r1, r5
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a8. Hit: 1. Lifespan: 2. Instruction: 00000645. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 81 e0          	: add r5, r1, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 81 e0          	: add sp, r1, r5
 >> Lifespan countdown: 2. (0x800009ac)
 >> Lifespan countdown: 1. (0x800009b0)
 >> Reverting instruction          :  05 50 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 0. Instruction: 00000653. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009c8
 >> Updated                     : 0x00000000800009cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 88 e0          	: add r0, r8, r2
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 88 e0          	: add r0, r8, r4
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 88 e0          	: add r0, r8, r8
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 88 e0          	: add r0, r8, r0, lsl r0
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 88 e0          	: add r0, r8, r0, lsr #32
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 88 e0          	: add r0, r8, r0, asr #32
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 88 e0          	: add r0, r8, r0, lsl #1
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 88 e0          	: add r0, r8, r0, lsl #2
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 88 e0          	: add r0, r8, r0, lsl #4
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 88 e0          	: add r0, r8, r0, lsl #8
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 88 e0          	: add r0, r8, r0, lsl #16
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 88 e0          	: add r1, r8, r0
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 88 e0          	: add r2, r8, r0
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 88 e0          	: add r4, r8, r0
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c8. Hit: 1. Lifespan: 2. Instruction: 00000653. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 88 e0          	: add r8, r8, r0
 >> Lifespan countdown: 2. (0x800009cc)
 >> Lifespan countdown: 1. (0x800009d0)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 0. Instruction: 00000664. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009f4
 >> Updated                     : 0x00000000800009f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f e0 87 e0          	: add lr, r7, pc
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c e0 87 e0          	: add lr, r7, ip
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a e0 87 e0          	: add lr, r7, sl
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 e0 87 e0          	: add lr, r7, r6
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e e0 87 e0          	: add lr, r7, lr, lsl r0
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e e0 87 e0          	: add lr, r7, lr, lsr #32
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e e0 87 e0          	: add lr, r7, lr, asr #32
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e e0 87 e0          	: add lr, r7, lr, lsl #1
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e e1 87 e0          	: add lr, r7, lr, lsl #2
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e e2 87 e0          	: add lr, r7, lr, lsl #4
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e e4 87 e0          	: add lr, r7, lr, lsl #8
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e e8 87 e0          	: add lr, r7, lr, lsl #16
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e f0 87 e0          	: add pc, r7, lr
 >!  Erm -  fetching from unmapped memory, address: 0xc3370856, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 664.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e c0 87 e0          	: add ip, r7, lr
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e a0 87 e0          	: add sl, r7, lr
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f4. Hit: 1. Lifespan: 2. Instruction: 00000664. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 87 e0          	: add lr, r7, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 60 87 e0          	: add r6, r7, lr
 >> Lifespan countdown: 2. (0x800009f8)
 >> Lifespan countdown: 1. (0x800009fc)
 >> Reverting instruction          :  0e e0 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 0. Instruction: 00000674. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a1c
 >> Updated                     : 0x0000000080000a20
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 a0 8a e0          	: add sl, sl, r0
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 a0 8a e0          	: add sl, sl, r3
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 a0 8a e0          	: add sl, sl, r5
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 a0 8a e0          	: add sl, sl, sb
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 a0 8a e0          	: add sl, sl, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 a0 8a e0          	: add sl, sl, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 a0 8a e0          	: add sl, sl, r1, asr #32
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 a0 8a e0          	: add sl, sl, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 a1 8a e0          	: add sl, sl, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 a2 8a e0          	: add sl, sl, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 a4 8a e0          	: add sl, sl, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 a8 8a e0          	: add sl, sl, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 b0 8a e0          	: add fp, sl, r1
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000dc9301ab, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 684.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 80 8a e0          	: add r8, sl, r1
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 e0 8a e0          	: add lr, sl, r1
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a1c. Hit: 1. Lifespan: 2. Instruction: 00000674. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 a0 8a e0          	: add sl, sl, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 20 8a e0          	: add r2, sl, r1
 >> Lifespan countdown: 2. (0x80000a20)
 >> Lifespan countdown: 1. (0x80000a24)
 >> Reverting instruction          :  01 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 0. Instruction: 00000682. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a3c
 >> Updated                     : 0x0000000080000a40
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 90 85 e0          	: add sb, r5, r8
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 90 85 e0          	: add sb, r5, fp
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 90 85 e0          	: add sb, r5, sp
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 90 85 e0          	: add sb, r5, r1
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 90 85 e0          	: add sb, r5, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 90 85 e0          	: add sb, r5, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 90 85 e0          	: add sb, r5, sb, asr #32
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 90 85 e0          	: add sb, r5, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 91 85 e0          	: add sb, r5, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 92 85 e0          	: add sb, r5, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 94 85 e0          	: add sb, r5, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 98 85 e0          	: add sb, r5, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 80 85 e0          	: add r8, r5, sb
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 b0 85 e0          	: add fp, r5, sb
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ebb51c9e, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 684.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 d0 85 e0          	: add sp, r5, sb
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a3c. Hit: 1. Lifespan: 2. Instruction: 00000682. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 85 e0          	: add sb, r5, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 10 85 e0          	: add r1, r5, sb
 >> Lifespan countdown: 2. (0x80000a40)
 >> Lifespan countdown: 1. (0x80000a44)
 >> Reverting instruction          :  09 90 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 0. Instruction: 00000690. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a5c
 >> Updated                     : 0x0000000080000a60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 28 e0          	: eor r8, r8, sp
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 28 e0          	: eor r8, r8, lr
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 28 e0          	: eor r8, r8, r8
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 28 e0          	: eor r8, r8, r4
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 28 e0          	: eor r8, r8, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 28 e0          	: eor r8, r8, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 28 e0          	: eor r8, r8, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 28 e0          	: eor r8, r8, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 28 e0          	: eor r8, r8, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 28 e0          	: eor r8, r8, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 28 e0          	: eor r8, r8, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 28 e0          	: eor r8, r8, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 28 e0          	: eor sb, r8, ip
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 28 e0          	: eor sl, r8, ip
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 28 e0          	: eor ip, r8, ip
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a5c. Hit: 1. Lifespan: 2. Instruction: 00000690. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 28 e0          	: eor r8, r8, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 28 e0          	: eor r0, r8, ip
 >> Lifespan countdown: 2. (0x80000a60)
 >> Lifespan countdown: 1. (0x80000a64)
 >> Reverting instruction          :  0c 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 0. Instruction: 00000699. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a80
 >> Updated                     : 0x0000000080000a84
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 50 25 e0          	: eor r5, r5, r8
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 50 25 e0          	: eor r5, r5, fp
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 50 25 e0          	: eor r5, r5, sp
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 50 25 e0          	: eor r5, r5, r1
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 50 25 e0          	: eor r5, r5, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 50 25 e0          	: eor r5, r5, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 50 25 e0          	: eor r5, r5, sb, asr #32
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 50 25 e0          	: eor r5, r5, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 51 25 e0          	: eor r5, r5, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 52 25 e0          	: eor r5, r5, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 54 25 e0          	: eor r5, r5, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 58 25 e0          	: eor r5, r5, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 40 25 e0          	: eor r4, r5, sb
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 70 25 e0          	: eor r7, r5, sb
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 10 25 e0          	: eor r1, r5, sb
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a80. Hit: 1. Lifespan: 2. Instruction: 00000699. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 50 25 e0          	: eor r5, r5, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 d0 25 e0          	: eor sp, r5, sb
 >> Lifespan countdown: 2. (0x80000a84)
 >> Lifespan countdown: 1. (0x80000a88)
 >> Reverting instruction          :  09 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 0. Instruction: 00000707. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000aa0
 >> Updated                     : 0x0000000080000aa4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 90 09 e0          	: and sb, sb, pc
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 90 09 e0          	: and sb, sb, ip
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 90 09 e0          	: and sb, sb, sl
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 90 09 e0          	: and sb, sb, r6
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 90 09 e0          	: and sb, sb, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 90 09 e0          	: and sb, sb, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 90 09 e0          	: and sb, sb, lr, asr #32
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 90 09 e0          	: and sb, sb, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 91 09 e0          	: and sb, sb, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 92 09 e0          	: and sb, sb, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 94 09 e0          	: and sb, sb, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 98 09 e0          	: and sb, sb, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 80 09 e0          	: and r8, sb, lr
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e b0 09 e0          	: and fp, sb, lr
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000019a405f8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e d0 09 e0          	: and sp, sb, lr
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aa0. Hit: 1. Lifespan: 2. Instruction: 00000707. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 09 e0          	: and sb, sb, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 10 09 e0          	: and r1, sb, lr
 >> Lifespan countdown: 2. (0x80000aa4)
 >> Lifespan countdown: 1. (0x80000aa8)
 >> Reverting instruction          :  0e 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 0. Instruction: 00000713. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ab8
 >> Updated                     : 0x0000000080000abc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 a0 8a e0          	: add sl, sl, r7
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 a0 8a e0          	: add sl, sl, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 a0 8a e0          	: add sl, sl, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 a0 8a e0          	: add sl, sl, r5, asr #32
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 a0 8a e0          	: add sl, sl, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 a1 8a e0          	: add sl, sl, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 a2 8a e0          	: add sl, sl, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 a4 8a e0          	: add sl, sl, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 a8 8a e0          	: add sl, sl, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 b0 8a e0          	: add fp, sl, r5
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c6a3e193, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 80 8a e0          	: add r8, sl, r5
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 e0 8a e0          	: add lr, sl, r5
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab8. Hit: 1. Lifespan: 2. Instruction: 00000713. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 20 8a e0          	: add r2, sl, r5
 >> Lifespan countdown: 2. (0x80000abc)
 >> Lifespan countdown: 1. (0x80000ac0)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 0. Instruction: 00000720. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ad4
 >> Updated                     : 0x0000000080000ad8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 90 89 e0          	: add sb, sb, r1
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 90 89 e0          	: add sb, sb, r2
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 90 89 e0          	: add sb, sb, r4
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 90 89 e0          	: add sb, sb, r8
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 90 89 e0          	: add sb, sb, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 90 89 e0          	: add sb, sb, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 90 89 e0          	: add sb, sb, r0, asr #32
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 90 89 e0          	: add sb, sb, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 91 89 e0          	: add sb, sb, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 92 89 e0          	: add sb, sb, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 94 89 e0          	: add sb, sb, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 98 89 e0          	: add sb, sb, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 80 89 e0          	: add r8, sb, r0
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 b0 89 e0          	: add fp, sb, r0
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000015b985e7, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 d0 89 e0          	: add sp, sb, r0
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad4. Hit: 1. Lifespan: 2. Instruction: 00000720. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 90 89 e0          	: add sb, sb, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 10 89 e0          	: add r1, sb, r0
 >> Lifespan countdown: 2. (0x80000ad8)
 >> Lifespan countdown: 1. (0x80000adc)
 >> Reverting instruction          :  00 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 0. Instruction: 00000728. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000af4
 >> Updated                     : 0x0000000080000af8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x1
 >> Updated instruction            :  43 59 03 e3          	: movw r5, #0x3943
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x2
 >> Updated instruction            :  40 59 03 e3          	: movw r5, #0x3940
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x4
 >> Updated instruction            :  46 59 03 e3          	: movw r5, #0x3946
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x8
 >> Updated instruction            :  4a 59 03 e3          	: movw r5, #0x394a
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x10
 >> Updated instruction            :  52 59 03 e3          	: movw r5, #0x3952
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x20
 >> Updated instruction            :  62 59 03 e3          	: movw r5, #0x3962
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x40
 >> Updated instruction            :  02 59 03 e3          	: movw r5, #0x3902
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x80
 >> Updated instruction            :  c2 59 03 e3          	: movw r5, #0x39c2
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x100
 >> Updated instruction            :  42 58 03 e3          	: movw r5, #0x3842
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x200
 >> Updated instruction            :  42 5b 03 e3          	: movw r5, #0x3b42
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x400
 >> Updated instruction            :  42 5d 03 e3          	: movw r5, #0x3d42
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x800
 >> Updated instruction            :  42 51 03 e3          	: movw r5, #0x3142
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x1000
 >> Updated instruction            :  42 49 03 e3          	: movw r4, #0x3942
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x2000
 >> Updated instruction            :  42 79 03 e3          	: movw r7, #0x3942
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x4000
 >> Updated instruction            :  42 19 03 e3          	: movw r1, #0x3942
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af4. Hit: 1. Lifespan: 2. Instruction: 00000728. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  42 59 03 e3          	: movw r5, #0x3942
 >> Mask                           :  0x8000
 >> Updated instruction            :  42 d9 03 e3          	: movw sp, #0x3942
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  42 59 03 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 0. Instruction: 00000736. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b14
 >> Updated                     : 0x0000000080000b18
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 85 e0          	: add r5, r5, r0
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 85 e0          	: add r5, r5, r5
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 85 e0          	: add r5, r5, sb
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 85 e0          	: add r5, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 85 e0          	: add r5, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 85 e0          	: add r5, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 85 e0          	: add r5, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 85 e0          	: add r5, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 85 e0          	: add r5, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 85 e0          	: add r5, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 85 e0          	: add r5, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 85 e0          	: add r4, r5, r1
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 85 e0          	: add r7, r5, r1
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 85 e0          	: add r1, r5, r1
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b14. Hit: 1. Lifespan: 2. Instruction: 00000736. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 85 e0          	: add sp, r5, r1
 >> Lifespan countdown: 2. (0x80000b18)
 >> Lifespan countdown: 1. (0x80000b1c)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 0. Instruction: 00000744. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b34
 >> Updated                     : 0x0000000080000b38
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x1
 >> Updated instruction            :  6d c9 8e e0          	: add ip, lr, sp, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x2
 >> Updated instruction            :  6e c9 8e e0          	: add ip, lr, lr, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x4
 >> Updated instruction            :  68 c9 8e e0          	: add ip, lr, r8, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x8
 >> Updated instruction            :  64 c9 8e e0          	: add ip, lr, r4, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x10
 >> Updated instruction            :  7c c9 8e e0          	: add ip, lr, ip, ror sb
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x20
 >> Updated instruction            :  4c c9 8e e0          	: add ip, lr, ip, asr #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x40
 >> Updated instruction            :  2c c9 8e e0          	: add ip, lr, ip, lsr #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x80
 >> Updated instruction            :  ec c9 8e e0          	: add ip, lr, ip, ror #19
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x100
 >> Updated instruction            :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x200
 >> Updated instruction            :  6c cb 8e e0          	: add ip, lr, ip, ror #22
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x400
 >> Updated instruction            :  6c cd 8e e0          	: add ip, lr, ip, ror #26
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x800
 >> Updated instruction            :  6c c1 8e e0          	: add ip, lr, ip, ror #2
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c d9 8e e0          	: add sp, lr, ip, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c e9 8e e0          	: add lr, lr, ip, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 89 8e e0          	: add r8, lr, ip, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b34. Hit: 1. Lifespan: 2. Instruction: 00000744. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c 49 8e e0          	: add r4, lr, ip, ror #18
 >> Lifespan countdown: 2. (0x80000b38)
 >> Lifespan countdown: 1. (0x80000b3c)
 >> Reverting instruction          :  6c c9 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 0. Instruction: 00000753. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b58
 >> Updated                     : 0x0000000080000b5c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 81 e0          	: add r0, r1, r1
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 81 e0          	: add r0, r1, r2
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 81 e0          	: add r0, r1, r4
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 81 e0          	: add r0, r1, r8
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 81 e0          	: add r0, r1, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 81 e0          	: add r0, r1, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 81 e0          	: add r0, r1, r0, asr #32
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 81 e0          	: add r0, r1, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 81 e0          	: add r0, r1, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 81 e0          	: add r0, r1, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 81 e0          	: add r0, r1, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 81 e0          	: add r0, r1, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 81 e0          	: add r1, r1, r0
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 81 e0          	: add r2, r1, r0
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 81 e0          	: add r4, r1, r0
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b58. Hit: 1. Lifespan: 2. Instruction: 00000753. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 81 e0          	: add r0, r1, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 81 e0          	: add r8, r1, r0
 >> Lifespan countdown: 2. (0x80000b5c)
 >> Lifespan countdown: 1. (0x80000b60)
 >> Reverting instruction          :  00 00 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 0. Instruction: 00000762. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b7c
 >> Updated                     : 0x0000000080000b80
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x1
 >> Updated instruction            :  64 5e 89 e0          	: add r5, sb, r4, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x2
 >> Updated instruction            :  67 5e 89 e0          	: add r5, sb, r7, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x4
 >> Updated instruction            :  61 5e 89 e0          	: add r5, sb, r1, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x8
 >> Updated instruction            :  6d 5e 89 e0          	: add r5, sb, sp, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x10
 >> Updated instruction            :  75 5e 89 e0          	: add r5, sb, r5, ror lr
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x20
 >> Updated instruction            :  45 5e 89 e0          	: add r5, sb, r5, asr #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x40
 >> Updated instruction            :  25 5e 89 e0          	: add r5, sb, r5, lsr #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x80
 >> Updated instruction            :  e5 5e 89 e0          	: add r5, sb, r5, ror #29
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x100
 >> Updated instruction            :  65 5f 89 e0          	: add r5, sb, r5, ror #30
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x200
 >> Updated instruction            :  65 5c 89 e0          	: add r5, sb, r5, ror #24
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x400
 >> Updated instruction            :  65 5a 89 e0          	: add r5, sb, r5, ror #20
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x800
 >> Updated instruction            :  65 56 89 e0          	: add r5, sb, r5, ror #12
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x1000
 >> Updated instruction            :  65 4e 89 e0          	: add r4, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x2000
 >> Updated instruction            :  65 7e 89 e0          	: add r7, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x4000
 >> Updated instruction            :  65 1e 89 e0          	: add r1, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b7c. Hit: 1. Lifespan: 2. Instruction: 00000762. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x8000
 >> Updated instruction            :  65 de 89 e0          	: add sp, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000b80)
 >> Lifespan countdown: 1. (0x80000b84)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 0. Instruction: 00000770. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b9c
 >> Updated                     : 0x0000000080000ba0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x1
 >> Updated instruction            :  ed ca 85 e0          	: add ip, r5, sp, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x2
 >> Updated instruction            :  ee ca 85 e0          	: add ip, r5, lr, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x4
 >> Updated instruction            :  e8 ca 85 e0          	: add ip, r5, r8, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x8
 >> Updated instruction            :  e4 ca 85 e0          	: add ip, r5, r4, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x10
 >> Updated instruction            :  fc ca 85 e0          	: strd ip, sp, [r5], ip
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xca8d2d66, value: 0xf2e0717b!! Count 771 Skipping to end.
 >> Run result: Fault errored program - last instruction: 770.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x20
 >> Updated instruction            :  cc ca 85 e0          	: add ip, r5, ip, asr #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x40
 >> Updated instruction            :  ac ca 85 e0          	: add ip, r5, ip, lsr #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x80
 >> Updated instruction            :  6c ca 85 e0          	: add ip, r5, ip, ror #20
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x100
 >> Updated instruction            :  ec cb 85 e0          	: add ip, r5, ip, ror #23
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x200
 >> Updated instruction            :  ec c8 85 e0          	: add ip, r5, ip, ror #17
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x400
 >> Updated instruction            :  ec ce 85 e0          	: add ip, r5, ip, ror #29
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x800
 >> Updated instruction            :  ec c2 85 e0          	: add ip, r5, ip, ror #5
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x1000
 >> Updated instruction            :  ec da 85 e0          	: add sp, r5, ip, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x2000
 >> Updated instruction            :  ec ea 85 e0          	: add lr, r5, ip, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x4000
 >> Updated instruction            :  ec 8a 85 e0          	: add r8, r5, ip, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b9c. Hit: 1. Lifespan: 2. Instruction: 00000770. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec ca 85 e0          	: add ip, r5, ip, ror #21
 >> Mask                           :  0x8000
 >> Updated instruction            :  ec 4a 85 e0          	: add r4, r5, ip, ror #21
 >> Lifespan countdown: 2. (0x80000ba0)
 >> Lifespan countdown: 1. (0x80000ba4)
 >> Reverting instruction          :  ec ca 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 0. Instruction: 00000778. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bbc
 >> Updated                     : 0x0000000080000bc0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x1
 >> Updated instruction            :  ba 96 4f e3          	: movt sb, #0xf6ba
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x2
 >> Updated instruction            :  b9 96 4f e3          	: movt sb, #0xf6b9
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x4
 >> Updated instruction            :  bf 96 4f e3          	: movt sb, #0xf6bf
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x8
 >> Updated instruction            :  b3 96 4f e3          	: movt sb, #0xf6b3
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x10
 >> Updated instruction            :  ab 96 4f e3          	: movt sb, #0xf6ab
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x20
 >> Updated instruction            :  9b 96 4f e3          	: movt sb, #0xf69b
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x40
 >> Updated instruction            :  fb 96 4f e3          	: movt sb, #0xf6fb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x80
 >> Updated instruction            :  3b 96 4f e3          	: movt sb, #0xf63b
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x100
 >> Updated instruction            :  bb 97 4f e3          	: movt sb, #0xf7bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x200
 >> Updated instruction            :  bb 94 4f e3          	: movt sb, #0xf4bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x400
 >> Updated instruction            :  bb 92 4f e3          	: movt sb, #0xf2bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x800
 >> Updated instruction            :  bb 9e 4f e3          	: movt sb, #0xfebb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x1000
 >> Updated instruction            :  bb 86 4f e3          	: movt r8, #0xf6bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x2000
 >> Updated instruction            :  bb b6 4f e3          	: movt fp, #0xf6bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f6bbfebc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 779.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x4000
 >> Updated instruction            :  bb d6 4f e3          	: movt sp, #0xf6bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bbc. Hit: 1. Lifespan: 2. Instruction: 00000778. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bb 96 4f e3          	: movt sb, #0xf6bb
 >> Mask                           :  0x8000
 >> Updated instruction            :  bb 16 4f e3          	: movt r1, #0xf6bb
 >> Lifespan countdown: 2. (0x80000bc0)
 >> Lifespan countdown: 1. (0x80000bc4)
 >> Reverting instruction          :  bb 96 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 0. Instruction: 00000786. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bdc
 >> Updated                     : 0x0000000080000be0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x1
 >> Updated instruction            :  be 1e 4b e3          	: movt r1, #0xbebe
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x2
 >> Updated instruction            :  bd 1e 4b e3          	: movt r1, #0xbebd
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x4
 >> Updated instruction            :  bb 1e 4b e3          	: movt r1, #0xbebb
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x8
 >> Updated instruction            :  b7 1e 4b e3          	: movt r1, #0xbeb7
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x10
 >> Updated instruction            :  af 1e 4b e3          	: movt r1, #0xbeaf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x20
 >> Updated instruction            :  9f 1e 4b e3          	: movt r1, #0xbe9f
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x40
 >> Updated instruction            :  ff 1e 4b e3          	: movt r1, #0xbeff
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x80
 >> Updated instruction            :  3f 1e 4b e3          	: movt r1, #0xbe3f
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x100
 >> Updated instruction            :  bf 1f 4b e3          	: movt r1, #0xbfbf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x200
 >> Updated instruction            :  bf 1c 4b e3          	: movt r1, #0xbcbf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x400
 >> Updated instruction            :  bf 1a 4b e3          	: movt r1, #0xbabf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x800
 >> Updated instruction            :  bf 16 4b e3          	: movt r1, #0xb6bf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x1000
 >> Updated instruction            :  bf 0e 4b e3          	: movt r0, #0xbebf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x2000
 >> Updated instruction            :  bf 3e 4b e3          	: movt r3, #0xbebf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x4000
 >> Updated instruction            :  bf 5e 4b e3          	: movt r5, #0xbebf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bdc. Hit: 1. Lifespan: 2. Instruction: 00000786. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  bf 1e 4b e3          	: movt r1, #0xbebf
 >> Mask                           :  0x8000
 >> Updated instruction            :  bf 9e 4b e3          	: movt sb, #0xbebf
 >> Lifespan countdown: 2. (0x80000be0)
 >> Lifespan countdown: 1. (0x80000be4)
 >> Reverting instruction          :  bf 1e 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 0. Instruction: 00000793. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bf8
 >> Updated                     : 0x0000000080000bfc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x1
 >> Updated instruction            :  c7 ce 07 e3          	: movw ip, #0x7ec7
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x2
 >> Updated instruction            :  c4 ce 07 e3          	: movw ip, #0x7ec4
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x4
 >> Updated instruction            :  c2 ce 07 e3          	: movw ip, #0x7ec2
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x8
 >> Updated instruction            :  ce ce 07 e3          	: movw ip, #0x7ece
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x10
 >> Updated instruction            :  d6 ce 07 e3          	: movw ip, #0x7ed6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x20
 >> Updated instruction            :  e6 ce 07 e3          	: movw ip, #0x7ee6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x40
 >> Updated instruction            :  86 ce 07 e3          	: movw ip, #0x7e86
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x80
 >> Updated instruction            :  46 ce 07 e3          	: movw ip, #0x7e46
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x100
 >> Updated instruction            :  c6 cf 07 e3          	: movw ip, #0x7fc6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x200
 >> Updated instruction            :  c6 cc 07 e3          	: movw ip, #0x7cc6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x400
 >> Updated instruction            :  c6 ca 07 e3          	: movw ip, #0x7ac6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x800
 >> Updated instruction            :  c6 c6 07 e3          	: movw ip, #0x76c6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x1000
 >> Updated instruction            :  c6 de 07 e3          	: movw sp, #0x7ec6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x2000
 >> Updated instruction            :  c6 ee 07 e3          	: movw lr, #0x7ec6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x4000
 >> Updated instruction            :  c6 8e 07 e3          	: movw r8, #0x7ec6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf8. Hit: 1. Lifespan: 2. Instruction: 00000793. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c6 ce 07 e3          	: movw ip, #0x7ec6
 >> Mask                           :  0x8000
 >> Updated instruction            :  c6 4e 07 e3          	: movw r4, #0x7ec6
 >> Lifespan countdown: 2. (0x80000bfc)
 >> Lifespan countdown: 1. (0x80000c00)
 >> Reverting instruction          :  c6 ce 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 0. Instruction: 00000801. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c18
 >> Updated                     : 0x0000000080000c1c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 a0 8a e0          	: add sl, sl, sb
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a a0 8a e0          	: add sl, sl, sl
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c a0 8a e0          	: add sl, sl, ip
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 a0 8a e0          	: add sl, sl, r0
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 a0 8a e0          	: add sl, sl, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 a0 8a e0          	: add sl, sl, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 a0 8a e0          	: add sl, sl, r8, asr #32
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 a0 8a e0          	: add sl, sl, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 a1 8a e0          	: add sl, sl, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 a2 8a e0          	: add sl, sl, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 a4 8a e0          	: add sl, sl, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 a8 8a e0          	: add sl, sl, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 b0 8a e0          	: add fp, sl, r8
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d5373952, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 813.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 80 8a e0          	: add r8, sl, r8
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 e0 8a e0          	: add lr, sl, r8
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c18. Hit: 1. Lifespan: 2. Instruction: 00000801. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 a0 8a e0          	: add sl, sl, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 20 8a e0          	: add r2, sl, r8
 >> Lifespan countdown: 2. (0x80000c1c)
 >> Lifespan countdown: 1. (0x80000c20)
 >> Reverting instruction          :  08 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 0. Instruction: 00000808. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c34
 >> Updated                     : 0x0000000080000c38
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 80 88 e0          	: add r8, r8, fp
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 80 88 e0          	: add r8, r8, r8
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 80 88 e0          	: add r8, r8, lr
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 80 88 e0          	: add r8, r8, r2
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 80 88 e0          	: add r8, r8, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 80 88 e0          	: add r8, r8, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 80 88 e0          	: add r8, r8, sl, asr #32
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 80 88 e0          	: add r8, r8, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 81 88 e0          	: add r8, r8, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 82 88 e0          	: add r8, r8, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 84 88 e0          	: add r8, r8, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 88 88 e0          	: add r8, r8, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 90 88 e0          	: add sb, r8, sl
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a a0 88 e0          	: add sl, r8, sl
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a c0 88 e0          	: add ip, r8, sl
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c34. Hit: 1. Lifespan: 2. Instruction: 00000808. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 00 88 e0          	: add r0, r8, sl
 >> Lifespan countdown: 2. (0x80000c38)
 >> Lifespan countdown: 1. (0x80000c3c)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 0. Instruction: 00000818. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c5c
 >> Updated                     : 0x0000000080000c60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 00 80 e0          	: add r0, r0, r0
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 00 80 e0          	: add r0, r0, r3
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 00 80 e0          	: add r0, r0, r5
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 00 80 e0          	: add r0, r0, sb
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 00 80 e0          	: add r0, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 00 80 e0          	: add r0, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 00 80 e0          	: add r0, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 00 80 e0          	: add r0, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 01 80 e0          	: add r0, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 02 80 e0          	: add r0, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 04 80 e0          	: add r0, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 08 80 e0          	: add r0, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 10 80 e0          	: add r1, r0, r1
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 20 80 e0          	: add r2, r0, r1
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 40 80 e0          	: add r4, r0, r1
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c5c. Hit: 1. Lifespan: 2. Instruction: 00000818. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 00 80 e0          	: add r0, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 80 80 e0          	: add r8, r0, r1
 >> Lifespan countdown: 2. (0x80000c60)
 >> Lifespan countdown: 1. (0x80000c64)
 >> Reverting instruction          :  01 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 0. Instruction: 00000826. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c7c
 >> Updated                     : 0x0000000080000c80
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x1
 >> Updated instruction            :  38 a0 0d e3          	: movw sl, #0xd038
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x2
 >> Updated instruction            :  3b a0 0d e3          	: movw sl, #0xd03b
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x4
 >> Updated instruction            :  3d a0 0d e3          	: movw sl, #0xd03d
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x8
 >> Updated instruction            :  31 a0 0d e3          	: movw sl, #0xd031
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x10
 >> Updated instruction            :  29 a0 0d e3          	: movw sl, #0xd029
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x20
 >> Updated instruction            :  19 a0 0d e3          	: movw sl, #0xd019
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x40
 >> Updated instruction            :  79 a0 0d e3          	: movw sl, #0xd079
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x80
 >> Updated instruction            :  b9 a0 0d e3          	: movw sl, #0xd0b9
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x100
 >> Updated instruction            :  39 a1 0d e3          	: movw sl, #0xd139
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x200
 >> Updated instruction            :  39 a2 0d e3          	: movw sl, #0xd239
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x400
 >> Updated instruction            :  39 a4 0d e3          	: movw sl, #0xd439
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x800
 >> Updated instruction            :  39 a8 0d e3          	: movw sl, #0xd839
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x1000
 >> Updated instruction            :  39 b0 0d e3          	: movw fp, #0xd039
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000d005, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 828.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x2000
 >> Updated instruction            :  39 80 0d e3          	: movw r8, #0xd039
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x4000
 >> Updated instruction            :  39 e0 0d e3          	: movw lr, #0xd039
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c7c. Hit: 1. Lifespan: 2. Instruction: 00000826. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 a0 0d e3          	: movw sl, #0xd039
 >> Mask                           :  0x8000
 >> Updated instruction            :  39 20 0d e3          	: movw r2, #0xd039
 >> Lifespan countdown: 2. (0x80000c80)
 >> Lifespan countdown: 1. (0x80000c84)
 >> Reverting instruction          :  39 a0 0d e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 0. Instruction: 00000833. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c98
 >> Updated                     : 0x0000000080000c9c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x1
 >> Updated instruction            :  e4 c9 09 e3          	: movw ip, #0x99e4
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x2
 >> Updated instruction            :  e7 c9 09 e3          	: movw ip, #0x99e7
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x4
 >> Updated instruction            :  e1 c9 09 e3          	: movw ip, #0x99e1
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x8
 >> Updated instruction            :  ed c9 09 e3          	: movw ip, #0x99ed
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x10
 >> Updated instruction            :  f5 c9 09 e3          	: movw ip, #0x99f5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x20
 >> Updated instruction            :  c5 c9 09 e3          	: movw ip, #0x99c5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x40
 >> Updated instruction            :  a5 c9 09 e3          	: movw ip, #0x99a5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x80
 >> Updated instruction            :  65 c9 09 e3          	: movw ip, #0x9965
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x100
 >> Updated instruction            :  e5 c8 09 e3          	: movw ip, #0x98e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x200
 >> Updated instruction            :  e5 cb 09 e3          	: movw ip, #0x9be5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x400
 >> Updated instruction            :  e5 cd 09 e3          	: movw ip, #0x9de5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x800
 >> Updated instruction            :  e5 c1 09 e3          	: movw ip, #0x91e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x1000
 >> Updated instruction            :  e5 d9 09 e3          	: movw sp, #0x99e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x2000
 >> Updated instruction            :  e5 e9 09 e3          	: movw lr, #0x99e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x4000
 >> Updated instruction            :  e5 89 09 e3          	: movw r8, #0x99e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c98. Hit: 1. Lifespan: 2. Instruction: 00000833. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 c9 09 e3          	: movw ip, #0x99e5
 >> Mask                           :  0x8000
 >> Updated instruction            :  e5 49 09 e3          	: movw r4, #0x99e5
 >> Lifespan countdown: 2. (0x80000c9c)
 >> Lifespan countdown: 1. (0x80000ca0)
 >> Reverting instruction          :  e5 c9 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 0. Instruction: 00000841. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cb8
 >> Updated                     : 0x0000000080000cbc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 29 e0          	: eor ip, sb, r1
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 29 e0          	: eor ip, sb, r2
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 29 e0          	: eor ip, sb, r4
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 29 e0          	: eor ip, sb, r8
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 29 e0          	: eor ip, sb, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 29 e0          	: eor ip, sb, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 29 e0          	: eor ip, sb, r0, asr #32
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 29 e0          	: eor ip, sb, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 29 e0          	: eor ip, sb, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 29 e0          	: eor ip, sb, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 29 e0          	: eor ip, sb, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 29 e0          	: eor ip, sb, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 29 e0          	: eor sp, sb, r0
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 29 e0          	: eor lr, sb, r0
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 29 e0          	: eor r8, sb, r0
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cb8. Hit: 1. Lifespan: 2. Instruction: 00000841. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 29 e0          	: eor ip, sb, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 29 e0          	: eor r4, sb, r0
 >> Lifespan countdown: 2. (0x80000cbc)
 >> Lifespan countdown: 1. (0x80000cc0)
 >> Reverting instruction          :  00 c0 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 0. Instruction: 00000848. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cd4
 >> Updated                     : 0x0000000080000cd8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 90 29 e0          	: eor sb, sb, sp
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 90 29 e0          	: eor sb, sb, lr
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 90 29 e0          	: eor sb, sb, r8
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 90 29 e0          	: eor sb, sb, r4
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 90 29 e0          	: eor sb, sb, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 90 29 e0          	: eor sb, sb, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 90 29 e0          	: eor sb, sb, ip, asr #32
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 90 29 e0          	: eor sb, sb, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 91 29 e0          	: eor sb, sb, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 92 29 e0          	: eor sb, sb, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 94 29 e0          	: eor sb, sb, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 98 29 e0          	: eor sb, sb, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 80 29 e0          	: eor r8, sb, ip
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c b0 29 e0          	: eor fp, sb, ip
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000063bc0bd6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 860.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c d0 29 e0          	: eor sp, sb, ip
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd4. Hit: 1. Lifespan: 2. Instruction: 00000848. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 90 29 e0          	: eor sb, sb, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 10 29 e0          	: eor r1, sb, ip
 >> Lifespan countdown: 2. (0x80000cd8)
 >> Lifespan countdown: 1. (0x80000cdc)
 >> Reverting instruction          :  0c 90 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 0. Instruction: 00000856. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cf4
 >> Updated                     : 0x0000000080000cf8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 10 81 e0          	: add r1, r1, r8
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 10 81 e0          	: add r1, r1, fp
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 10 81 e0          	: add r1, r1, r1
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 10 81 e0          	: add r1, r1, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 10 81 e0          	: add r1, r1, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 10 81 e0          	: add r1, r1, sb, asr #32
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 10 81 e0          	: add r1, r1, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 11 81 e0          	: add r1, r1, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 12 81 e0          	: add r1, r1, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 14 81 e0          	: add r1, r1, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 18 81 e0          	: add r1, r1, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 00 81 e0          	: add r0, r1, sb
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 30 81 e0          	: add r3, r1, sb
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 50 81 e0          	: add r5, r1, sb
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cf4. Hit: 1. Lifespan: 2. Instruction: 00000856. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 10 81 e0          	: add r1, r1, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 90 81 e0          	: add sb, r1, sb
 >> Lifespan countdown: 2. (0x80000cf8)
 >> Lifespan countdown: 1. (0x80000cfc)
 >> Reverting instruction          :  09 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 0. Instruction: 00000865. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d18
 >> Updated                     : 0x0000000080000d1c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 e0 8e e0          	: add lr, lr, r4
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 e0 8e e0          	: add lr, lr, r7
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 e0 8e e0          	: add lr, lr, r1
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d e0 8e e0          	: add lr, lr, sp
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 e0 8e e0          	: add lr, lr, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 e0 8e e0          	: add lr, lr, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 e0 8e e0          	: add lr, lr, r5, asr #32
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 e0 8e e0          	: add lr, lr, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 e1 8e e0          	: add lr, lr, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 e2 8e e0          	: add lr, lr, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 e4 8e e0          	: add lr, lr, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 e8 8e e0          	: add lr, lr, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 f0 8e e0          	: add pc, lr, r5
 >!  Erm -  fetching from unmapped memory, address: 0x6f8a212e, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 865.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 c0 8e e0          	: add ip, lr, r5
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 a0 8e e0          	: add sl, lr, r5
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d18. Hit: 1. Lifespan: 2. Instruction: 00000865. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 e0 8e e0          	: add lr, lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 60 8e e0          	: add r6, lr, r5
 >> Lifespan countdown: 2. (0x80000d1c)
 >> Lifespan countdown: 1. (0x80000d20)
 >> Reverting instruction          :  05 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 0. Instruction: 00000873. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d38
 >> Updated                     : 0x0000000080000d3c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 88 e0          	: add r8, r8, sp
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 88 e0          	: add r8, r8, lr
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 88 e0          	: add r8, r8, r8
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 88 e0          	: add r8, r8, r4
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 88 e0          	: add r8, r8, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 88 e0          	: add r8, r8, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 88 e0          	: add r8, r8, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 88 e0          	: add r8, r8, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 88 e0          	: add r8, r8, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 88 e0          	: add r8, r8, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 88 e0          	: add r8, r8, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 88 e0          	: add r8, r8, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 88 e0          	: add sb, r8, ip
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 88 e0          	: add sl, r8, ip
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 88 e0          	: add ip, r8, ip
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d38. Hit: 1. Lifespan: 2. Instruction: 00000873. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 88 e0          	: add r8, r8, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 88 e0          	: add r0, r8, ip
 >> Lifespan countdown: 2. (0x80000d3c)
 >> Lifespan countdown: 1. (0x80000d40)
 >> Reverting instruction          :  0c 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 0. Instruction: 00000881. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d58
 >> Updated                     : 0x0000000080000d5c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x1
 >> Updated instruction            :  38 90 0a e3          	: movw sb, #0xa038
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x2
 >> Updated instruction            :  3b 90 0a e3          	: movw sb, #0xa03b
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x4
 >> Updated instruction            :  3d 90 0a e3          	: movw sb, #0xa03d
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x8
 >> Updated instruction            :  31 90 0a e3          	: movw sb, #0xa031
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x10
 >> Updated instruction            :  29 90 0a e3          	: movw sb, #0xa029
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x20
 >> Updated instruction            :  19 90 0a e3          	: movw sb, #0xa019
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x40
 >> Updated instruction            :  79 90 0a e3          	: movw sb, #0xa079
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x80
 >> Updated instruction            :  b9 90 0a e3          	: movw sb, #0xa0b9
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x100
 >> Updated instruction            :  39 91 0a e3          	: movw sb, #0xa139
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x200
 >> Updated instruction            :  39 92 0a e3          	: movw sb, #0xa239
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x400
 >> Updated instruction            :  39 94 0a e3          	: movw sb, #0xa439
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x800
 >> Updated instruction            :  39 98 0a e3          	: movw sb, #0xa839
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x1000
 >> Updated instruction            :  39 80 0a e3          	: movw r8, #0xa039
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x2000
 >> Updated instruction            :  39 b0 0a e3          	: movw fp, #0xa039
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000009fd9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 905.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x4000
 >> Updated instruction            :  39 d0 0a e3          	: movw sp, #0xa039
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d58. Hit: 1. Lifespan: 2. Instruction: 00000881. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  39 90 0a e3          	: movw sb, #0xa039
 >> Mask                           :  0x8000
 >> Updated instruction            :  39 10 0a e3          	: movw r1, #0xa039
 >> Lifespan countdown: 2. (0x80000d5c)
 >> Lifespan countdown: 1. (0x80000d60)
 >> Reverting instruction          :  39 90 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 0. Instruction: 00000889. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d78
 >> Updated                     : 0x0000000080000d7c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x1
 >> Updated instruction            :  c2 59 05 e3          	: movw r5, #0x59c2
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x2
 >> Updated instruction            :  c1 59 05 e3          	: movw r5, #0x59c1
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x4
 >> Updated instruction            :  c7 59 05 e3          	: movw r5, #0x59c7
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x8
 >> Updated instruction            :  cb 59 05 e3          	: movw r5, #0x59cb
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x10
 >> Updated instruction            :  d3 59 05 e3          	: movw r5, #0x59d3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x20
 >> Updated instruction            :  e3 59 05 e3          	: movw r5, #0x59e3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x40
 >> Updated instruction            :  83 59 05 e3          	: movw r5, #0x5983
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x80
 >> Updated instruction            :  43 59 05 e3          	: movw r5, #0x5943
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x100
 >> Updated instruction            :  c3 58 05 e3          	: movw r5, #0x58c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x200
 >> Updated instruction            :  c3 5b 05 e3          	: movw r5, #0x5bc3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x400
 >> Updated instruction            :  c3 5d 05 e3          	: movw r5, #0x5dc3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x800
 >> Updated instruction            :  c3 51 05 e3          	: movw r5, #0x51c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x1000
 >> Updated instruction            :  c3 49 05 e3          	: movw r4, #0x59c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x2000
 >> Updated instruction            :  c3 79 05 e3          	: movw r7, #0x59c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x4000
 >> Updated instruction            :  c3 19 05 e3          	: movw r1, #0x59c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d78. Hit: 1. Lifespan: 2. Instruction: 00000889. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c3 59 05 e3          	: movw r5, #0x59c3
 >> Mask                           :  0x8000
 >> Updated instruction            :  c3 d9 05 e3          	: movw sp, #0x59c3
 >> Lifespan countdown: 2. (0x80000d7c)
 >> Lifespan countdown: 1. (0x80000d80)
 >> Reverting instruction          :  c3 59 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 0. Instruction: 00000897. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d98
 >> Updated                     : 0x0000000080000d9c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x1
 >> Updated instruction            :  93 ec 0c e3          	: movw lr, #0xcc93
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x2
 >> Updated instruction            :  90 ec 0c e3          	: movw lr, #0xcc90
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x4
 >> Updated instruction            :  96 ec 0c e3          	: movw lr, #0xcc96
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x8
 >> Updated instruction            :  9a ec 0c e3          	: movw lr, #0xcc9a
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x10
 >> Updated instruction            :  82 ec 0c e3          	: movw lr, #0xcc82
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x20
 >> Updated instruction            :  b2 ec 0c e3          	: movw lr, #0xccb2
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x40
 >> Updated instruction            :  d2 ec 0c e3          	: movw lr, #0xccd2
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x80
 >> Updated instruction            :  12 ec 0c e3          	: movw lr, #0xcc12
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x100
 >> Updated instruction            :  92 ed 0c e3          	: movw lr, #0xcd92
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x200
 >> Updated instruction            :  92 ee 0c e3          	: movw lr, #0xce92
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x400
 >> Updated instruction            :  92 e8 0c e3          	: movw lr, #0xc892
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x800
 >> Updated instruction            :  92 e4 0c e3          	: movw lr, #0xc492
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x1000
 >> Updated instruction            :  92 fc 0c e3          	: movw pc, #0xcc92
 >!  Erm -  fetching from unmapped memory, address: 0xcc92, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 897.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x2000
 >> Updated instruction            :  92 cc 0c e3          	: movw ip, #0xcc92
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x4000
 >> Updated instruction            :  92 ac 0c e3          	: movw sl, #0xcc92
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d98. Hit: 1. Lifespan: 2. Instruction: 00000897. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  92 ec 0c e3          	: movw lr, #0xcc92
 >> Mask                           :  0x8000
 >> Updated instruction            :  92 6c 0c e3          	: movw r6, #0xcc92
 >> Lifespan countdown: 2. (0x80000d9c)
 >> Lifespan countdown: 1. (0x80000da0)
 >> Reverting instruction          :  92 ec 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 0. Instruction: 00000905. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000db8
 >> Updated                     : 0x0000000080000dbc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x1
 >> Updated instruction            :  61 80 1b e5          	: ldr r8, [fp, #-0x61]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x2
 >> Updated instruction            :  62 80 1b e5          	: ldr r8, [fp, #-0x62]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x4
 >> Updated instruction            :  64 80 1b e5          	: ldr r8, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x8
 >> Updated instruction            :  68 80 1b e5          	: ldr r8, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x10
 >> Updated instruction            :  70 80 1b e5          	: ldr r8, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x20
 >> Updated instruction            :  40 80 1b e5          	: ldr r8, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x40
 >> Updated instruction            :  20 80 1b e5          	: ldr r8, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 80 1b e5          	: ldr r8, [fp, #-0xe0]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x100
 >> Updated instruction            :  60 81 1b e5          	: ldr r8, [fp, #-0x160]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x200
 >> Updated instruction            :  60 82 1b e5          	: ldr r8, [fp, #-0x260]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x400
 >> Updated instruction            :  60 84 1b e5          	: ldr r8, [fp, #-0x460]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x800
 >> Updated instruction            :  60 88 1b e5          	: ldr r8, [fp, #-0x860]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 90 1b e5          	: ldr sb, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 a0 1b e5          	: ldr sl, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 c0 1b e5          	: ldr ip, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000db8. Hit: 1. Lifespan: 2. Instruction: 00000905. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 80 1b e5          	: ldr r8, [fp, #-0x60]
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000dbc)
 >> Lifespan countdown: 1. (0x80000dc0)
 >> Reverting instruction          :  60 80 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 0. Instruction: 00000914. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ddc
 >> Updated                     : 0x0000000080000de0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 70 87 e0          	: add r7, r7, fp
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 70 87 e0          	: add r7, r7, r8
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 70 87 e0          	: add r7, r7, lr
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 70 87 e0          	: add r7, r7, r2
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 70 87 e0          	: add r7, r7, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 70 87 e0          	: add r7, r7, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 70 87 e0          	: add r7, r7, sl, asr #32
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 70 87 e0          	: add r7, r7, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 71 87 e0          	: add r7, r7, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 72 87 e0          	: add r7, r7, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 74 87 e0          	: add r7, r7, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 78 87 e0          	: add r7, r7, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 60 87 e0          	: add r6, r7, sl
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 50 87 e0          	: add r5, r7, sl
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 30 87 e0          	: add r3, r7, sl
 >> Lifespan countdown: 2. (0x80000de0)
 >> Lifespan countdown: 1. (0x80000de4)
 >> Reverting instruction          :  0a 70 87 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ddc. Hit: 1. Lifespan: 2. Instruction: 00000914. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 70 87 e0          	: add r7, r7, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a f0 87 e0          	: add pc, r7, sl
 >!  Erm -  fetching from unmapped memory, address: 0xceb50948, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 914.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 0. Instruction: 00000922. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dfc
 >> Updated                     : 0x0000000080000e00
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 60 26 e0          	: eor r6, r6, r5
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 60 26 e0          	: eor r6, r6, r6
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 60 26 e0          	: eor r6, r6, r0
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 60 26 e0          	: eor r6, r6, ip
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 60 26 e0          	: eor r6, r6, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 60 26 e0          	: eor r6, r6, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 60 26 e0          	: eor r6, r6, r4, asr #32
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 60 26 e0          	: eor r6, r6, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 61 26 e0          	: eor r6, r6, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 62 26 e0          	: eor r6, r6, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 64 26 e0          	: eor r6, r6, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 68 26 e0          	: eor r6, r6, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 70 26 e0          	: eor r7, r6, r4
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 40 26 e0          	: eor r4, r6, r4
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 20 26 e0          	: eor r2, r6, r4
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dfc. Hit: 1. Lifespan: 2. Instruction: 00000922. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 26 e0          	: eor r6, r6, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 e0 26 e0          	: eor lr, r6, r4
 >> Lifespan countdown: 2. (0x80000e00)
 >> Lifespan countdown: 1. (0x80000e04)
 >> Reverting instruction          :  04 60 26 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 0. Instruction: 00000930. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e1c
 >> Updated                     : 0x0000000080000e20
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x1
 >> Updated instruction            :  07 80 88 e1          	: orr r8, r8, r7
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x2
 >> Updated instruction            :  04 80 88 e1          	: orr r8, r8, r4
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x4
 >> Updated instruction            :  02 80 88 e1          	: orr r8, r8, r2
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x8
 >> Updated instruction            :  0e 80 88 e1          	: orr r8, r8, lr
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x10
 >> Updated instruction            :  16 80 88 e1          	: orr r8, r8, r6, lsl r0
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x20
 >> Updated instruction            :  26 80 88 e1          	: orr r8, r8, r6, lsr #32
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x40
 >> Updated instruction            :  46 80 88 e1          	: orr r8, r8, r6, asr #32
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x80
 >> Updated instruction            :  86 80 88 e1          	: orr r8, r8, r6, lsl #1
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x100
 >> Updated instruction            :  06 81 88 e1          	: orr r8, r8, r6, lsl #2
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x200
 >> Updated instruction            :  06 82 88 e1          	: orr r8, r8, r6, lsl #4
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x400
 >> Updated instruction            :  06 84 88 e1          	: orr r8, r8, r6, lsl #8
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x800
 >> Updated instruction            :  06 88 88 e1          	: orr r8, r8, r6, lsl #16
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x1000
 >> Updated instruction            :  06 90 88 e1          	: orr sb, r8, r6
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x2000
 >> Updated instruction            :  06 a0 88 e1          	: orr sl, r8, r6
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x4000
 >> Updated instruction            :  06 c0 88 e1          	: orr ip, r8, r6
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e1c. Hit: 1. Lifespan: 2. Instruction: 00000930. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  06 80 88 e1          	: orr r8, r8, r6
 >> Mask                           :  0x8000
 >> Updated instruction            :  06 00 88 e1          	: orr r0, r8, r6
 >> Lifespan countdown: 2. (0x80000e20)
 >> Lifespan countdown: 1. (0x80000e24)
 >> Reverting instruction          :  06 80 88 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 0. Instruction: 00000938. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e3c
 >> Updated                     : 0x0000000080000e40
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x1
 >> Updated instruction            :  64 5d 86 e0          	: add r5, r6, r4, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x2
 >> Updated instruction            :  67 5d 86 e0          	: add r5, r6, r7, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x4
 >> Updated instruction            :  61 5d 86 e0          	: add r5, r6, r1, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x8
 >> Updated instruction            :  6d 5d 86 e0          	: add r5, r6, sp, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x10
 >> Updated instruction            :  75 5d 86 e0          	: add r5, r6, r5, ror sp
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x20
 >> Updated instruction            :  45 5d 86 e0          	: add r5, r6, r5, asr #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x40
 >> Updated instruction            :  25 5d 86 e0          	: add r5, r6, r5, lsr #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x80
 >> Updated instruction            :  e5 5d 86 e0          	: add r5, r6, r5, ror #27
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x100
 >> Updated instruction            :  65 5c 86 e0          	: add r5, r6, r5, ror #24
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x200
 >> Updated instruction            :  65 5f 86 e0          	: add r5, r6, r5, ror #30
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x400
 >> Updated instruction            :  65 59 86 e0          	: add r5, r6, r5, ror #18
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x800
 >> Updated instruction            :  65 55 86 e0          	: add r5, r6, r5, ror #10
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x1000
 >> Updated instruction            :  65 4d 86 e0          	: add r4, r6, r5, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x2000
 >> Updated instruction            :  65 7d 86 e0          	: add r7, r6, r5, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x4000
 >> Updated instruction            :  65 1d 86 e0          	: add r1, r6, r5, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e3c. Hit: 1. Lifespan: 2. Instruction: 00000938. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5d 86 e0          	: add r5, r6, r5, ror #26
 >> Mask                           :  0x8000
 >> Updated instruction            :  65 dd 86 e0          	: add sp, r6, r5, ror #26
 >> Lifespan countdown: 2. (0x80000e40)
 >> Lifespan countdown: 1. (0x80000e44)
 >> Reverting instruction          :  65 5d 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 0. Instruction: 00000946. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e5c
 >> Updated                     : 0x0000000080000e60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x1
 >> Updated instruction            :  4e ae 07 e3          	: movw sl, #0x7e4e
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x2
 >> Updated instruction            :  4d ae 07 e3          	: movw sl, #0x7e4d
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x4
 >> Updated instruction            :  4b ae 07 e3          	: movw sl, #0x7e4b
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x8
 >> Updated instruction            :  47 ae 07 e3          	: movw sl, #0x7e47
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x10
 >> Updated instruction            :  5f ae 07 e3          	: movw sl, #0x7e5f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x20
 >> Updated instruction            :  6f ae 07 e3          	: movw sl, #0x7e6f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x40
 >> Updated instruction            :  0f ae 07 e3          	: movw sl, #0x7e0f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x80
 >> Updated instruction            :  cf ae 07 e3          	: movw sl, #0x7ecf
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x100
 >> Updated instruction            :  4f af 07 e3          	: movw sl, #0x7f4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x200
 >> Updated instruction            :  4f ac 07 e3          	: movw sl, #0x7c4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x400
 >> Updated instruction            :  4f aa 07 e3          	: movw sl, #0x7a4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x800
 >> Updated instruction            :  4f a6 07 e3          	: movw sl, #0x764f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x1000
 >> Updated instruction            :  4f be 07 e3          	: movw fp, #0x7e4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000007dfb, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 959.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x2000
 >> Updated instruction            :  4f 8e 07 e3          	: movw r8, #0x7e4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x4000
 >> Updated instruction            :  4f ee 07 e3          	: movw lr, #0x7e4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e5c. Hit: 1. Lifespan: 2. Instruction: 00000946. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4f ae 07 e3          	: movw sl, #0x7e4f
 >> Mask                           :  0x8000
 >> Updated instruction            :  4f 2e 07 e3          	: movw r2, #0x7e4f
 >> Lifespan countdown: 2. (0x80000e60)
 >> Lifespan countdown: 1. (0x80000e64)
 >> Reverting instruction          :  4f ae 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 0. Instruction: 00000954. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e7c
 >> Updated                     : 0x0000000080000e80
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 20 82 e0          	: add r2, r2, r0
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 20 82 e0          	: add r2, r2, r3
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 20 82 e0          	: add r2, r2, r5
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 20 82 e0          	: add r2, r2, sb
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 20 82 e0          	: add r2, r2, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 20 82 e0          	: add r2, r2, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 20 82 e0          	: add r2, r2, r1, asr #32
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 20 82 e0          	: add r2, r2, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 21 82 e0          	: add r2, r2, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 22 82 e0          	: add r2, r2, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 24 82 e0          	: add r2, r2, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 28 82 e0          	: add r2, r2, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 30 82 e0          	: add r3, r2, r1
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 00 82 e0          	: add r0, r2, r1
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 60 82 e0          	: add r6, r2, r1
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e7c. Hit: 1. Lifespan: 2. Instruction: 00000954. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e0          	: add r2, r2, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 a0 82 e0          	: add sl, r2, r1
 >> Lifespan countdown: 2. (0x80000e80)
 >> Lifespan countdown: 1. (0x80000e84)
 >> Reverting instruction          :  01 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 0. Instruction: 00000960. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e94
 >> Updated                     : 0x0000000080000e98
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 c0 8c e1          	: orr ip, ip, r3
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 c0 8c e1          	: orr ip, ip, r0
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 c0 8c e1          	: orr ip, ip, r6
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a c0 8c e1          	: orr ip, ip, sl
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 c0 8c e1          	: orr ip, ip, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 c0 8c e1          	: orr ip, ip, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 c0 8c e1          	: orr ip, ip, r2, asr #32
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 c0 8c e1          	: orr ip, ip, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 c1 8c e1          	: orr ip, ip, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 c2 8c e1          	: orr ip, ip, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 c4 8c e1          	: orr ip, ip, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 c8 8c e1          	: orr ip, ip, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 d0 8c e1          	: orr sp, ip, r2
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 e0 8c e1          	: orr lr, ip, r2
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 80 8c e1          	: orr r8, ip, r2
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e94. Hit: 1. Lifespan: 2. Instruction: 00000960. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 8c e1          	: orr ip, ip, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 40 8c e1          	: orr r4, ip, r2
 >> Lifespan countdown: 2. (0x80000e98)
 >> Lifespan countdown: 1. (0x80000e9c)
 >> Reverting instruction          :  02 c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 0. Instruction: 00000968. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000eb4
 >> Updated                     : 0x0000000080000eb8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x1
 >> Updated instruction            :  ed c5 82 e0          	: add ip, r2, sp, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x2
 >> Updated instruction            :  ee c5 82 e0          	: add ip, r2, lr, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x4
 >> Updated instruction            :  e8 c5 82 e0          	: add ip, r2, r8, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x8
 >> Updated instruction            :  e4 c5 82 e0          	: add ip, r2, r4, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x10
 >> Updated instruction            :  fc c5 82 e0          	: strd ip, sp, [r2], ip
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9b13cc2e, value: 0x3697f3e9!! Count 969 Skipping to end.
 >> Run result: Fault errored program - last instruction: 968.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x20
 >> Updated instruction            :  cc c5 82 e0          	: add ip, r2, ip, asr #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x40
 >> Updated instruction            :  ac c5 82 e0          	: add ip, r2, ip, lsr #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x80
 >> Updated instruction            :  6c c5 82 e0          	: add ip, r2, ip, ror #10
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x100
 >> Updated instruction            :  ec c4 82 e0          	: add ip, r2, ip, ror #9
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x200
 >> Updated instruction            :  ec c7 82 e0          	: add ip, r2, ip, ror #15
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x400
 >> Updated instruction            :  ec c1 82 e0          	: add ip, r2, ip, ror #3
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x800
 >> Updated instruction            :  ec cd 82 e0          	: add ip, r2, ip, ror #27
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x1000
 >> Updated instruction            :  ec d5 82 e0          	: add sp, r2, ip, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x2000
 >> Updated instruction            :  ec e5 82 e0          	: add lr, r2, ip, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x4000
 >> Updated instruction            :  ec 85 82 e0          	: add r8, r2, ip, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb4. Hit: 1. Lifespan: 2. Instruction: 00000968. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ec c5 82 e0          	: add ip, r2, ip, ror #11
 >> Mask                           :  0x8000
 >> Updated instruction            :  ec 45 82 e0          	: add r4, r2, ip, ror #11
 >> Lifespan countdown: 2. (0x80000eb8)
 >> Lifespan countdown: 1. (0x80000ebc)
 >> Reverting instruction          :  ec c5 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 0. Instruction: 00000975. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ed0
 >> Updated                     : 0x0000000080000ed4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 90 89 e0          	: add sb, sb, pc
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 90 89 e0          	: add sb, sb, ip
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 90 89 e0          	: add sb, sb, sl
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 90 89 e0          	: add sb, sb, r6
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 90 89 e0          	: add sb, sb, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 90 89 e0          	: add sb, sb, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 90 89 e0          	: add sb, sb, lr, asr #32
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 90 89 e0          	: add sb, sb, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 91 89 e0          	: add sb, sb, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 92 89 e0          	: add sb, sb, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 94 89 e0          	: add sb, sb, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 98 89 e0          	: add sb, sb, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 80 89 e0          	: add r8, sb, lr
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e b0 89 e0          	: add fp, sb, lr
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c5386f17, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 985.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e d0 89 e0          	: add sp, sb, lr
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed0. Hit: 1. Lifespan: 2. Instruction: 00000975. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 90 89 e0          	: add sb, sb, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 10 89 e0          	: add r1, sb, lr
 >> Lifespan countdown: 2. (0x80000ed4)
 >> Lifespan countdown: 1. (0x80000ed8)
 >> Reverting instruction          :  0e 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 0. Instruction: 00000981. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ee8
 >> Updated                     : 0x0000000080000eec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 60 86 e0          	: add r6, r6, r1
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 60 86 e0          	: add r6, r6, r2
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 60 86 e0          	: add r6, r6, r4
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 60 86 e0          	: add r6, r6, r8
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 60 86 e0          	: add r6, r6, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 60 86 e0          	: add r6, r6, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 60 86 e0          	: add r6, r6, r0, asr #32
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 60 86 e0          	: add r6, r6, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 61 86 e0          	: add r6, r6, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 62 86 e0          	: add r6, r6, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 64 86 e0          	: add r6, r6, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 68 86 e0          	: add r6, r6, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 70 86 e0          	: add r7, r6, r0
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 40 86 e0          	: add r4, r6, r0
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 20 86 e0          	: add r2, r6, r0
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ee8. Hit: 1. Lifespan: 2. Instruction: 00000981. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 60 86 e0          	: add r6, r6, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 e0 86 e0          	: add lr, r6, r0
 >> Lifespan countdown: 2. (0x80000eec)
 >> Lifespan countdown: 1. (0x80000ef0)
 >> Reverting instruction          :  00 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 0. Instruction: 00000989. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f08
 >> Updated                     : 0x0000000080000f0c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 40 83 e0          	: add r4, r3, r5
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 40 83 e0          	: add r4, r3, r6
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 40 83 e0          	: add r4, r3, r0
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 40 83 e0          	: add r4, r3, ip
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 40 83 e0          	: add r4, r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 40 83 e0          	: add r4, r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 40 83 e0          	: add r4, r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 40 83 e0          	: add r4, r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 41 83 e0          	: add r4, r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 42 83 e0          	: add r4, r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 44 83 e0          	: add r4, r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 48 83 e0          	: add r4, r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 50 83 e0          	: add r5, r3, r4
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 60 83 e0          	: add r6, r3, r4
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 00 83 e0          	: add r0, r3, r4
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f08. Hit: 1. Lifespan: 2. Instruction: 00000989. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 40 83 e0          	: add r4, r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 c0 83 e0          	: add ip, r3, r4
 >> Lifespan countdown: 2. (0x80000f0c)
 >> Lifespan countdown: 1. (0x80000f10)
 >> Reverting instruction          :  04 40 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 0. Instruction: 00000998. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f2c
 >> Updated                     : 0x0000000080000f30
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x1
 >> Updated instruction            :  e1 08 81 e0          	: add r0, r1, r1, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x2
 >> Updated instruction            :  e2 08 81 e0          	: add r0, r1, r2, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x4
 >> Updated instruction            :  e4 08 81 e0          	: add r0, r1, r4, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x8
 >> Updated instruction            :  e8 08 81 e0          	: add r0, r1, r8, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x10
 >> Updated instruction            :  f0 08 81 e0          	: strd r0, r1, [r1], r0
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4c15fda7, value: 0xfd162059!! Count 999 Skipping to end.
 >> Run result: Fault errored program - last instruction: 998.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x20
 >> Updated instruction            :  c0 08 81 e0          	: add r0, r1, r0, asr #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x40
 >> Updated instruction            :  a0 08 81 e0          	: add r0, r1, r0, lsr #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x80
 >> Updated instruction            :  60 08 81 e0          	: add r0, r1, r0, ror #16
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x100
 >> Updated instruction            :  e0 09 81 e0          	: add r0, r1, r0, ror #19
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x200
 >> Updated instruction            :  e0 0a 81 e0          	: add r0, r1, r0, ror #21
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x400
 >> Updated instruction            :  e0 0c 81 e0          	: add r0, r1, r0, ror #25
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x800
 >> Updated instruction            :  e0 00 81 e0          	: add r0, r1, r0, ror #1
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x1000
 >> Updated instruction            :  e0 18 81 e0          	: add r1, r1, r0, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x2000
 >> Updated instruction            :  e0 28 81 e0          	: add r2, r1, r0, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x4000
 >> Updated instruction            :  e0 48 81 e0          	: add r4, r1, r0, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f2c. Hit: 1. Lifespan: 2. Instruction: 00000998. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 08 81 e0          	: add r0, r1, r0, ror #17
 >> Mask                           :  0x8000
 >> Updated instruction            :  e0 88 81 e0          	: add r8, r1, r0, ror #17
 >> Lifespan countdown: 2. (0x80000f30)
 >> Lifespan countdown: 1. (0x80000f34)
 >> Reverting instruction          :  e0 08 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 0. Instruction: 00001005. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f48
 >> Updated                     : 0x0000000080000f4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x1
 >> Updated instruction            :  69 10 1b e5          	: ldr r1, [fp, #-0x69]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x2
 >> Updated instruction            :  6a 10 1b e5          	: ldr r1, [fp, #-0x6a]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x4
 >> Updated instruction            :  6c 10 1b e5          	: ldr r1, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x8
 >> Updated instruction            :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x10
 >> Updated instruction            :  78 10 1b e5          	: ldr r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x20
 >> Updated instruction            :  48 10 1b e5          	: ldr r1, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x40
 >> Updated instruction            :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x80
 >> Updated instruction            :  e8 10 1b e5          	: ldr r1, [fp, #-0xe8]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x100
 >> Updated instruction            :  68 11 1b e5          	: ldr r1, [fp, #-0x168]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x200
 >> Updated instruction            :  68 12 1b e5          	: ldr r1, [fp, #-0x268]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x400
 >> Updated instruction            :  68 14 1b e5          	: ldr r1, [fp, #-0x468]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x800
 >> Updated instruction            :  68 18 1b e5          	: ldr r1, [fp, #-0x868]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x1000
 >> Updated instruction            :  68 00 1b e5          	: ldr r0, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x2000
 >> Updated instruction            :  68 30 1b e5          	: ldr r3, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x4000
 >> Updated instruction            :  68 50 1b e5          	: ldr r5, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f48. Hit: 1. Lifespan: 2. Instruction: 00001005. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Mask                           :  0x8000
 >> Updated instruction            :  68 90 1b e5          	: ldr sb, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000f4c)
 >> Lifespan countdown: 1. (0x80000f50)
 >> Reverting instruction          :  68 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 0. Instruction: 00001010. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f5c
 >> Updated                     : 0x0000000080000f60
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 2c e0          	: eor ip, ip, r1
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 2c e0          	: eor ip, ip, r2
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 2c e0          	: eor ip, ip, r4
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 2c e0          	: eor ip, ip, r8
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 2c e0          	: eor ip, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 2c e0          	: eor ip, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 2c e0          	: eor ip, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 2c e0          	: eor ip, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 2c e0          	: eor ip, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 2c e0          	: eor ip, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 2c e0          	: eor ip, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 2c e0          	: eor ip, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 2c e0          	: eor sp, ip, r0
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 2c e0          	: eor lr, ip, r0
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 2c e0          	: eor r8, ip, r0
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f5c. Hit: 1. Lifespan: 2. Instruction: 00001010. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 2c e0          	: eor ip, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 2c e0          	: eor r4, ip, r0
 >> Lifespan countdown: 2. (0x80000f60)
 >> Lifespan countdown: 1. (0x80000f64)
 >> Reverting instruction          :  00 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 0. Instruction: 00001018. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f7c
 >> Updated                     : 0x0000000080000f80
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 a0 8a e0          	: add sl, sl, r7
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 a0 8a e0          	: add sl, sl, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 a0 8a e0          	: add sl, sl, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 a0 8a e0          	: add sl, sl, r5, asr #32
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 a0 8a e0          	: add sl, sl, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 a1 8a e0          	: add sl, sl, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 a2 8a e0          	: add sl, sl, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 a4 8a e0          	: add sl, sl, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 a8 8a e0          	: add sl, sl, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 b0 8a e0          	: add fp, sl, r5
 >> Lifespan countdown: 2. (0x80000f80)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080aae323, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1019.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 80 8a e0          	: add r8, sl, r5
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 e0 8a e0          	: add lr, sl, r5
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f7c. Hit: 1. Lifespan: 2. Instruction: 00001018. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 a0 8a e0          	: add sl, sl, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 20 8a e0          	: add r2, sl, r5
 >> Lifespan countdown: 2. (0x80000f80)
 >> Lifespan countdown: 1. (0x80000f84)
 >> Reverting instruction          :  05 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 0. Instruction: 00001026. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f9c
 >> Updated                     : 0x0000000080000fa0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 90 89 e0          	: add sb, sb, r5
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 90 89 e0          	: add sb, sb, r6
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 90 89 e0          	: add sb, sb, r0
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 90 89 e0          	: add sb, sb, ip
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 90 89 e0          	: add sb, sb, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 90 89 e0          	: add sb, sb, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 90 89 e0          	: add sb, sb, r4, asr #32
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 90 89 e0          	: add sb, sb, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 91 89 e0          	: add sb, sb, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 92 89 e0          	: add sb, sb, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 94 89 e0          	: add sb, sb, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 98 89 e0          	: add sb, sb, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 80 89 e0          	: add r8, sb, r4
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 b0 89 e0          	: add fp, sb, r4
 >> Lifespan countdown: 2. (0x80000fa0)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000004904e6e5, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1027.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 d0 89 e0          	: add sp, sb, r4
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f9c. Hit: 1. Lifespan: 2. Instruction: 00001026. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 90 89 e0          	: add sb, sb, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 10 89 e0          	: add r1, sb, r4
 >> Lifespan countdown: 2. (0x80000fa0)
 >> Lifespan countdown: 1. (0x80000fa4)
 >> Reverting instruction          :  04 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 0. Instruction: 00001034. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fbc
 >> Updated                     : 0x0000000080000fc0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x1
 >> Updated instruction            :  e9 85 89 e0          	: add r8, sb, sb, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x2
 >> Updated instruction            :  ea 85 89 e0          	: add r8, sb, sl, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x4
 >> Updated instruction            :  ec 85 89 e0          	: add r8, sb, ip, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x8
 >> Updated instruction            :  e0 85 89 e0          	: add r8, sb, r0, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x10
 >> Updated instruction            :  f8 85 89 e0          	: strd r8, sb, [sb], r8
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xdd51fa07, value: 0x6889b7d3!! Count 1035 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1034.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x20
 >> Updated instruction            :  c8 85 89 e0          	: add r8, sb, r8, asr #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x40
 >> Updated instruction            :  a8 85 89 e0          	: add r8, sb, r8, lsr #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x80
 >> Updated instruction            :  68 85 89 e0          	: add r8, sb, r8, ror #10
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x100
 >> Updated instruction            :  e8 84 89 e0          	: add r8, sb, r8, ror #9
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x200
 >> Updated instruction            :  e8 87 89 e0          	: add r8, sb, r8, ror #15
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x400
 >> Updated instruction            :  e8 81 89 e0          	: add r8, sb, r8, ror #3
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x800
 >> Updated instruction            :  e8 8d 89 e0          	: add r8, sb, r8, ror #27
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x1000
 >> Updated instruction            :  e8 95 89 e0          	: add sb, sb, r8, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x2000
 >> Updated instruction            :  e8 a5 89 e0          	: add sl, sb, r8, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x4000
 >> Updated instruction            :  e8 c5 89 e0          	: add ip, sb, r8, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fbc. Hit: 1. Lifespan: 2. Instruction: 00001034. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e8 85 89 e0          	: add r8, sb, r8, ror #11
 >> Mask                           :  0x8000
 >> Updated instruction            :  e8 05 89 e0          	: add r0, sb, r8, ror #11
 >> Lifespan countdown: 2. (0x80000fc0)
 >> Lifespan countdown: 1. (0x80000fc4)
 >> Reverting instruction          :  e8 85 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 0. Instruction: 00001042. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fdc
 >> Updated                     : 0x0000000080000fe0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 30 82 e5          	: str r3, [r2, #0xd]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 30 82 e5          	: str r3, [r2, #0xe]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x4
 >> Updated instruction            :  08 30 82 e5          	: str r3, [r2, #8]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x8
 >> Updated instruction            :  04 30 82 e5          	: str r3, [r2, #4]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 30 82 e5          	: str r3, [r2, #0x1c]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 30 82 e5          	: str r3, [r2, #0x2c]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 30 82 e5          	: str r3, [r2, #0x4c]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 30 82 e5          	: str r3, [r2, #0x8c]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 31 82 e5          	: str r3, [r2, #0x10c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011006c, value: 0xc78cb6c6!! Count 1043 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1042.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 32 82 e5          	: str r3, [r2, #0x20c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011016c, value: 0xc78cb6c6!! Count 1043 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1042.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 34 82 e5          	: str r3, [r2, #0x40c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011036c, value: 0xc78cb6c6!! Count 1043 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1042.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 38 82 e5          	: str r3, [r2, #0x80c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011076c, value: 0xc78cb6c6!! Count 1043 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1042.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 20 82 e5          	: str r2, [r2, #0xc]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 10 82 e5          	: str r1, [r2, #0xc]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 70 82 e5          	: str r7, [r2, #0xc]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fdc. Hit: 1. Lifespan: 2. Instruction: 00001042. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 82 e5          	: str r3, [r2, #0xc]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c b0 82 e5          	: str fp, [r2, #0xc]
 >> Lifespan countdown: 2. (0x80000fe0)
 >> Lifespan countdown: 1. (0x80000fe4)
 >> Reverting instruction          :  0c 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 0. Instruction: 00001050. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010d0
 >> Updated                     : 0x00000000800010d4
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 a0 e1          	: mov r0, r5
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 a0 e1          	: mov r0, r0
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 a0 e1          	: mov r0, ip
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xbe33c783, value: 0x0!! Count 1108 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1107.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 a0 e1          	: lsl r0, r4, r0
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 a0 e1          	: lsr r0, r4, #0x20
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 a0 e1          	: asr r0, r4, #0x20
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffff, value: 0x0!! Count 1108 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1107.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 a0 e1          	: lsl r0, r4, #1
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fec0, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 a0 e1          	: lsl r0, r4, #2
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fd80, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 a0 e1          	: lsl r0, r4, #4
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff600, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 a0 e1          	: lsl r0, r4, #8
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6000, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 a0 e1          	: lsl r0, r4, #0x10
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600000, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 a0 e1          	: mov r1, r4
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 a0 e1          	: mov r2, r4
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 a0 e1          	: mov r4, r4
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010d0. Hit: 1. Lifespan: 2. Instruction: 00001050. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 a0 e1          	: mov r0, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 a0 e1          	: mov r8, r4
 >> Lifespan countdown: 2. (0x800010d4)
 >> Lifespan countdown: 1. (0x800010d8)
 >> Reverting instruction          :  04 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 0. Instruction: 00001057. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010ec
 >> Updated                     : 0x00000000800010f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x1
 >> Updated instruction            :  bb 30 d4 e1          	: ldrh r3, [r4, #0xb]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x2
 >> Updated instruction            :  b8 30 d4 e1          	: ldrh r3, [r4, #8]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x4
 >> Updated instruction            :  be 30 d4 e1          	: ldrh r3, [r4, #0xe]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x8
 >> Updated instruction            :  b2 30 d4 e1          	: ldrh r3, [r4, #2]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x10
 >> Updated instruction            :  aa 30 d4 e1          	: bics r3, r4, sl, lsr #1
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x20
 >> Updated instruction            :  9a 30 d4 e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1057.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x40
 >> Updated instruction            :  fa 30 d4 e1          	: ldrsh r3, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x80
 >> Updated instruction            :  3a 30 d4 e1          	: bics r3, r4, sl, lsr r0
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x100
 >> Updated instruction            :  ba 31 d4 e1          	: ldrh r3, [r4, #0x1a]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x200
 >> Updated instruction            :  ba 32 d4 e1          	: ldrh r3, [r4, #0x2a]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x400
 >> Updated instruction            :  ba 34 d4 e1          	: ldrh r3, [r4, #0x4a]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x800
 >> Updated instruction            :  ba 38 d4 e1          	: ldrh r3, [r4, #0x8a]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x1000
 >> Updated instruction            :  ba 20 d4 e1          	: ldrh r2, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x2000
 >> Updated instruction            :  ba 10 d4 e1          	: ldrh r1, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x4000
 >> Updated instruction            :  ba 70 d4 e1          	: ldrh r7, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010ec. Hit: 1. Lifespan: 2. Instruction: 00001057. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ba 30 d4 e1          	: ldrh r3, [r4, #0xa]
 >> Mask                           :  0x8000
 >> Updated instruction            :  ba b0 d4 e1          	: ldrh fp, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010f0)
 >> Lifespan countdown: 1. (0x800010f4)
 >> Reverting instruction          :  ba 30 d4 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000002564, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 0. Instruction: 00001065. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000110c
 >> Updated                     : 0x0000000080001110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x1
 >> Updated instruction            :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x2
 >> Updated instruction            :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x4
 >> Updated instruction            :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x10
 >> Updated instruction            :  15 30 c5 e5          	: strb r3, [r5, #0x15]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x20
 >> Updated instruction            :  25 30 c5 e5          	: strb r3, [r5, #0x25]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x40
 >> Updated instruction            :  45 30 c5 e5          	: strb r3, [r5, #0x45]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x80
 >> Updated instruction            :  85 30 c5 e5          	: strb r3, [r5, #0x85]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x100
 >> Updated instruction            :  05 31 c5 e5          	: strb r3, [r5, #0x105]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110055, value: 0xb6!! Count 1066 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1065.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x200
 >> Updated instruction            :  05 32 c5 e5          	: strb r3, [r5, #0x205]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110155, value: 0xb6!! Count 1066 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1065.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x400
 >> Updated instruction            :  05 34 c5 e5          	: strb r3, [r5, #0x405]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110355, value: 0xb6!! Count 1066 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1065.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x800
 >> Updated instruction            :  05 38 c5 e5          	: strb r3, [r5, #0x805]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110755, value: 0xb6!! Count 1066 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1065.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 20 c5 e5          	: strb r2, [r5, #5]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 10 c5 e5          	: strb r1, [r5, #5]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 70 c5 e5          	: strb r7, [r5, #5]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000110c. Hit: 1. Lifespan: 2. Instruction: 00001065. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 b0 c5 e5          	: strb fp, [r5, #5]
 >> Lifespan countdown: 2. (0x80001110)
 >> Lifespan countdown: 1. (0x80001114)
 >> Reverting instruction          :  05 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 0. Instruction: 00001073. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000112c
 >> Updated                     : 0x0000000080001130
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  22 34 a0 e1          	: lsr r3, r2, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  21 34 a0 e1          	: lsr r3, r1, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  27 34 a0 e1          	: lsr r3, r7, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  2b 34 a0 e1          	: lsr r3, fp, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  33 34 a0 e1          	: lsr r3, r3, r4
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  03 34 a0 e1          	: lsl r3, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  63 34 a0 e1          	: ror r3, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  a3 34 a0 e1          	: lsr r3, r3, #9
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  23 35 a0 e1          	: lsr r3, r3, #0xa
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  23 36 a0 e1          	: lsr r3, r3, #0xc
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  23 30 a0 e1          	: lsr r3, r3, #0x20
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  23 24 a0 e1          	: lsr r2, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  23 14 a0 e1          	: lsr r1, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  23 74 a0 e1          	: lsr r7, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000112c. Hit: 1. Lifespan: 2. Instruction: 00001073. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  23 b4 a0 e1          	: lsr fp, r3, #8
 >> Lifespan countdown: 2. (0x80001130)
 >> Lifespan countdown: 1. (0x80001134)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000760cc3, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 0. Instruction: 00001080. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001148
 >> Updated                     : 0x000000008000114c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x4
 >> Updated instruction            :  08 30 c5 e5          	: strb r3, [r5, #8]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x8
 >> Updated instruction            :  04 30 c5 e5          	: strb r3, [r5, #4]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 30 c5 e5          	: strb r3, [r5, #0x1c]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 30 c5 e5          	: strb r3, [r5, #0x2c]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 30 c5 e5          	: strb r3, [r5, #0x4c]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 30 c5 e5          	: strb r3, [r5, #0x8c]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 31 c5 e5          	: strb r3, [r5, #0x10c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005c, value: 0xfb!! Count 1081 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1080.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 32 c5 e5          	: strb r3, [r5, #0x20c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015c, value: 0xfb!! Count 1081 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1080.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 34 c5 e5          	: strb r3, [r5, #0x40c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035c, value: 0xfb!! Count 1081 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1080.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 38 c5 e5          	: strb r3, [r5, #0x80c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075c, value: 0xfb!! Count 1081 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1080.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 20 c5 e5          	: strb r2, [r5, #0xc]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 10 c5 e5          	: strb r1, [r5, #0xc]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 70 c5 e5          	: strb r7, [r5, #0xc]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001148. Hit: 1. Lifespan: 2. Instruction: 00001080. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c b0 c5 e5          	: strb fp, [r5, #0xc]
 >> Lifespan countdown: 2. (0x8000114c)
 >> Lifespan countdown: 1. (0x80001150)
 >> Reverting instruction          :  0c 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 0. Instruction: 00001088. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001168
 >> Updated                     : 0x000000008000116c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x1
 >> Updated instruction            :  15 d0 4b e2          	: sub sp, fp, #0x15
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x12dc80, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x2
 >> Updated instruction            :  16 d0 4b e2          	: sub sp, fp, #0x16
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x12dc8010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x4
 >> Updated instruction            :  10 d0 4b e2          	: sub sp, fp, #0x10
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x8
 >> Updated instruction            :  1c d0 4b e2          	: sub sp, fp, #0x1c
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x10
 >> Updated instruction            :  04 d0 4b e2          	: sub sp, fp, #4
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x20
 >> Updated instruction            :  34 d0 4b e2          	: sub sp, fp, #0x34
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x40
 >> Updated instruction            :  54 d0 4b e2          	: sub sp, fp, #0x54
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1289.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x80
 >> Updated instruction            :  94 d0 4b e2          	: sub sp, fp, #0x94
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x2578ea84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x100
 >> Updated instruction            :  14 d1 4b e2          	: sub sp, fp, #20, #2
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x200
 >> Updated instruction            :  14 d2 4b e2          	: sub sp, fp, #20, #4
 >> Lifespan countdown: 2. (0x8000116c)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000004010ff33, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x400
 >> Updated instruction            :  14 d4 4b e2          	: sub sp, fp, #20, #8
 >> Lifespan countdown: 2. (0x8000116c)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006c10ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x800
 >> Updated instruction            :  14 d8 4b e2          	: sub sp, fp, #20, #16
 >> Lifespan countdown: 2. (0x8000116c)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007ffcff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 c0 4b e2          	: sub ip, fp, #0x14
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 f0 4b e2          	: sub pc, fp, #0x14
 >> Lifespan countdown: 2. (0x8010ff20)
 >> Lifespan countdown: 1. (0x8010ff24)
 >> Reverting instruction          :  14 d0 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1101.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 90 4b e2          	: sub sb, fp, #0x14
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001168. Hit: 1. Lifespan: 2. Instruction: 00001088. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 d0 4b e2          	: sub sp, fp, #0x14
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 50 4b e2          	: sub r5, fp, #0x14
 >> Lifespan countdown: 2. (0x8000116c)
 >> Lifespan countdown: 1. (0x80001170)
 >> Reverting instruction          :  14 d0 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 0. Instruction: 00001097. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000094
 >> Updated                     : 0x0000000080000098
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  31 48 2d e9          	: push {r0, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  32 48 2d e9          	: push {r1, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  34 48 2d e9          	: push {r2, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  38 48 2d e9          	: push {r3, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  20 48 2d e9          	: push {r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  10 48 2d e9          	: push {r4, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 48 2d e9          	: push {r4, r5, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  30 49 2d e9          	: push {r4, r5, r8, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  30 4a 2d e9          	: push {r4, r5, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  30 4c 2d e9          	: push {r4, r5, sl, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  30 40 2d e9          	: push {r4, r5, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 58 2d e9          	: push {r4, r5, fp, ip, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x2, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 68 2d e9          	: push {r4, r5, fp, sp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 08 2d e9          	: push {r4, r5, fp}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 2. Lifespan: 2. Instruction: 00001097. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 c8 2d e9          	: push {r4, r5, fp, lr, pc}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 0. Instruction: 00001104. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000b0
 >> Updated                     : 0x00000000800000b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 50 a0 01          	: moveq r5, r1
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 50 a0 01          	: moveq r5, r2
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 50 a0 01          	: moveq r5, r4
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 50 a0 01          	: moveq r5, r8
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 50 a0 01          	: lsleq r5, r0, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 50 a0 01          	: lsreq r5, r0, #0x20
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 50 a0 01          	: asreq r5, r0, #0x20
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 50 a0 01          	: lsleq r5, r0, #1
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 51 a0 01          	: lsleq r5, r0, #2
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 52 a0 01          	: lsleq r5, r0, #4
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 54 a0 01          	: lsleq r5, r0, #8
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 58 a0 01          	: lsleq r5, r0, #0x10
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 40 a0 01          	: moveq r4, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 70 a0 01          	: moveq r7, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 10 a0 01          	: moveq r1, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 2. Lifespan: 2. Instruction: 00001104. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 d0 a0 01          	: moveq sp, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000e8)
 >> Reverting instruction          :  00 50 a0 01 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 0. Instruction: 00001113. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000104
 >> Updated                     : 0x0000000080000108
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  23 41 a0 e1          	: lsr r4, r3, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  20 41 a0 e1          	: lsr r4, r0, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  26 41 a0 e1          	: lsr r4, r6, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 41 a0 e1          	: lsr r4, sl, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  32 41 a0 e1          	: lsr r4, r2, r1
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  02 41 a0 e1          	: lsl r4, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  62 41 a0 e1          	: ror r4, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 41 a0 e1          	: lsr r4, r2, #3
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  22 40 a0 e1          	: lsr r4, r2, #0x20
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  22 43 a0 e1          	: lsr r4, r2, #6
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  22 45 a0 e1          	: lsr r4, r2, #0xa
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  22 49 a0 e1          	: lsr r4, r2, #0x12
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 51 a0 e1          	: lsr r5, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 61 a0 e1          	: lsr r6, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 01 a0 e1          	: lsr r0, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1117 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1116.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000104. Hit: 2. Lifespan: 2. Instruction: 00001113. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 c1 a0 e1          	: lsr ip, r2, #2
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x26!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 0. Instruction: 00001122. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1305 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1304.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x96, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1313.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1126 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1125.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 11. Lifespan: 2. Instruction: 00001122. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 0. Instruction: 00001129. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 13. Lifespan: 2. Instruction: 00001129. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 0. Instruction: 00001137. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 15. Lifespan: 2. Instruction: 00001137. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 0. Instruction: 00001147. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 18. Lifespan: 2. Instruction: 00001147. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 0. Instruction: 00001156. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011000c, value: 0x0!! Count 1161 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011008c, value: 0x0!! Count 1161 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011018c, value: 0x0!! Count 1161 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011038c, value: 0x0!! Count 1161 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011078c, value: 0x0!! Count 1161 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1160.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 20. Lifespan: 2. Instruction: 00001156. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 0. Instruction: 00001164. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110014, value: 0x0!! Count 1169 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1168.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110094, value: 0x0!! Count 1169 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1168.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110194, value: 0x0!! Count 1169 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1168.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110394, value: 0x0!! Count 1169 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1168.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110794, value: 0x0!! Count 1169 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1168.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 22. Lifespan: 2. Instruction: 00001164. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 0. Instruction: 00001174. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1178 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1177.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 24. Lifespan: 2. Instruction: 00001174. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1174.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 0. Instruction: 00001181. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 26. Lifespan: 2. Instruction: 00001181. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 0. Instruction: 00001189. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 28. Lifespan: 2. Instruction: 00001189. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 0. Instruction: 00001197. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 30. Lifespan: 2. Instruction: 00001197. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 0. Instruction: 00001206. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1269 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1268.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1210 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1209.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 32. Lifespan: 2. Instruction: 00001206. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1206.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 0. Instruction: 00001213. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 34. Lifespan: 2. Instruction: 00001213. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 0. Instruction: 00001222. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1226 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1225.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 36. Lifespan: 2. Instruction: 00001222. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1222.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 0. Instruction: 00001231. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 39. Lifespan: 2. Instruction: 00001231. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 0. Instruction: 00001239. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 41. Lifespan: 2. Instruction: 00001239. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 0. Instruction: 00001248. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110008, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110028, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110068, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100e8, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101e8, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103e8, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107e8, value: 0x0!! Count 1253 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1252.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 43. Lifespan: 2. Instruction: 00001248. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 0. Instruction: 00001257. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 45. Lifespan: 2. Instruction: 00001257. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 0. Instruction: 00001265. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 47. Lifespan: 2. Instruction: 00001265. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 0. Instruction: 00001273. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012e0
 >> Updated                     : 0x00000000800012e4
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012e8)
 >> Reverting instruction          :  00 00 53 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 53 e3          	: cmp r3, #2
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 53 e3          	: cmp r3, #4
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 53 e3          	: cmp r3, #8
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 53 e3          	: cmp r3, #0x10
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 53 e3          	: cmp r3, #0x20
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 53 e3          	: cmp r3, #0x40
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 53 e3          	: cmp r3, #0x80
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 53 e3          	: cmp r3, #0, #2
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 53 e3          	: cmp r3, #0, #4
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 53 e3          	: cmp r3, #0, #8
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 53 e3          	: cmp r3, #0, #16
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e0. Hit: 1. Lifespan: 2. Instruction: 00001273. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 53 e3          	: cmp r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 53 e3          	: cmp r3, #0
 >> Lifespan countdown: 2. (0x800012e4)
 >> Lifespan countdown: 1. (0x800012f8)
 >> Reverting instruction          :  00 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 0. Instruction: 00001281. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002e0
 >> Updated                     : 0x00000000800002e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 b0 8d e2          	: add fp, sp, #1
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 b0 8d e2          	: add fp, sp, #2
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 b0 8d e2          	: add fp, sp, #0x40
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 b0 8d e2          	: add fp, sp, #0x80
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 b1 8d e2          	: add fp, sp, #0, #2
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 b2 8d e2          	: add fp, sp, #0, #4
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 b4 8d e2          	: add fp, sp, #0, #8
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 b8 8d e2          	: add fp, sp, #0, #16
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 a0 8d e2          	: add sl, sp, #0
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 90 8d e2          	: add sb, sp, #0
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 f0 8d e2          	: add pc, sp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  Erm -  fetching from unmapped memory, address: 0xffffea84, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1282.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e0. Hit: 1. Lifespan: 2. Instruction: 00001281. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 30 8d e2          	: add r3, sp, #0
 >> Lifespan countdown: 2. (0x800002e4)
 >> Lifespan countdown: 1. (0x800002f8)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 0. Instruction: 00001289. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000310
 >> Updated                     : 0x0000000080000314
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 00 3a          	: blo #0x1010
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 00 3a          	: blo #0x100c
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 00 3a          	: blo #0x1024
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 00 3a          	: blo #0x1034
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 00 3a          	: blo #0x1054
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 00 3a          	: blo #0x1094
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 00 3a          	: blo #0x1114
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 00 3a          	: blo #0x1214
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 00 3a          	: blo #0x1414
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 00 3a          	: blo #0x1814
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 00 3a          	: blo #0x2014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 00 3a          	: blo #0x3014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 00 3a          	: blo #0x5014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 00 3a          	: blo #0x9014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 00 3a          	: blo #0x11014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000310. Hit: 1. Lifespan: 2. Instruction: 00001289. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 3a          	: blo #0x1014
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 00 3a          	: blo #0x21014
 >> Lifespan countdown: 2. (0x80000314)
 >> Lifespan countdown: 1. (0x80000318)
 >> Reverting instruction          :  03 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 0. Instruction: 00001294. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001308
 >> Updated                     : 0x000000008000130c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 50 e3          	: cmp r0, #1
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x800012e8)
 >> Reverting instruction          :  00 00 50 e3 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 50 e3          	: cmp r0, #2
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 50 e3          	: cmp r0, #4
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 50 e3          	: cmp r0, #8
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 50 e3          	: cmp r0, #0x10
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 50 e3          	: cmp r0, #0x20
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 50 e3          	: cmp r0, #0x40
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 50 e3          	: cmp r0, #0x80
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 50 e3          	: cmp r0, #0, #2
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 50 e3          	: cmp r0, #0, #4
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 50 e3          	: cmp r0, #0, #8
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 50 e3          	: cmp r0, #0, #16
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001308. Hit: 1. Lifespan: 2. Instruction: 00001294. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 50 e3          	: cmp r0, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 50 e3          	: cmp r0, #0
 >> Lifespan countdown: 2. (0x8000130c)
 >> Lifespan countdown: 1. (0x80001310)
 >> Reverting instruction          :  00 00 50 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 0. Instruction: 00001301. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001324
 >> Updated                     : 0x0000000080001328
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 50





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 20 a0 e3          	: mov r2, #3
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 03





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 20 a0 e3          	: mov r2, #0
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 20 a0 e3          	: mov r2, #6
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 06





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 20 a0 e3          	: mov r2, #0xa
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 0a





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 20 a0 e3          	: mov r2, #0x12
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 12





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 20 a0 e3          	: mov r2, #0x22
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 22





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 20 a0 e3          	: mov r2, #0x42
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 42





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 20 a0 e3          	: mov r2, #0x82
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 82





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 21 a0 e3          	: mov r2, #0x80000000
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 22 a0 e3          	: mov r2, #0x20000000
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 24 a0 e3          	: mov r2, #0x2000000
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 28 a0 e3          	: mov r2, #0x20000
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 30 a0 e3          	: mov r3, #2
 >> Lifespan countdown: 2. (0x80001328)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2, value: 0x8010ff50!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 00 a0 e3          	: mov r0, #2
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 50





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 60 a0 e3          	: mov r6, #2
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 50





########## Starting new run. Address: 0x80001324. Hit: 1. Lifespan: 2. Instruction: 00001301. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 a0 e3          	: mov r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 a0 a0 e3          	: mov sl, #2
 >> Lifespan countdown: 2. (0x80001328)
 >> Lifespan countdown: 1. (0x8000132c)
 >> Reverting instruction          :  02 20 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 50
