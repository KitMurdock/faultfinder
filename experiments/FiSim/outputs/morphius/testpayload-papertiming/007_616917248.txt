 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 0. Instruction: 00000004. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000000c
 >> Updated                     : 0x0000000080000010
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126087 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126086.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 00 0a          	: beq #0x101c
 >> Lifespan countdown: 2. (0x80000028)
 >> Lifespan countdown: 1. (0x80000028)
 >> Reverting instruction          :  04 00 00 0a 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 00 0a          	: beq #0x1020
 >> Lifespan countdown: 2. (0x8000002c)
 >> Lifespan countdown: 1. (0x80000030)
 >> Reverting instruction          :  04 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 13.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 00 0a          	: beq #0x1008
 >> Lifespan countdown: 2. (0x80000014)
 >> Lifespan countdown: 1. (0x80000018)
 >> Reverting instruction          :  04 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80020000, value: 0x0!! Count 126086 Skipping to end.
 >> Run result: Fault errored program - last instruction: 126085.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 00 0a          	: beq #0x1038
 >> Lifespan countdown: 2. (0x80000044)
 >> Lifespan countdown: 1. (0x80000048)
 >> Reverting instruction          :  04 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 6.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 00 0a          	: beq #0x1058
 >> Lifespan countdown: 2. (0x80000064)
 >> Lifespan countdown: 1. (0x80000068)
 >> Reverting instruction          :  04 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 14.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 00 0a          	: beq #0x1098
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  04 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x0!! Count 21 Skipping to end.
 >> Run result: Fault errored program - last instruction: 20.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 00 0a          	: beq #0x1118
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  04 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 7.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 00 0a          	: beq #0x1218
 >> Lifespan countdown: 2. (0x80000224)
 >> Lifespan countdown: 1. (0x80000228)
 >> Reverting instruction          :  04 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 8.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 00 0a          	: beq #0x1418
 >> Lifespan countdown: 2. (0x80000424)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffff8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 5.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 00 0a          	: beq #0x1818
 >> Lifespan countdown: 2. (0x80000824)
 >> Lifespan countdown: 1. (0x80000828)
 >> Reverting instruction          :  04 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffd8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 12.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 00 0a          	: beq #0x2018
 >> Lifespan countdown: 2. (0x80001024)
 >> Lifespan countdown: 1. (0x80001028)
 >> Reverting instruction          :  04 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x18, value: 0x0!! Count 9 Skipping to end.
 >> Run result: Fault errored program - last instruction: 8.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 00 0a          	: beq #0x3018
 >> Lifespan countdown: 2. (0x80002024)
 >!  Erm -  fetching from unmapped memory, address: 0x802c5838, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 5.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 00 0a          	: beq #0x5018
 >> Lifespan countdown: 2. (0x80004024)
 >> Lifespan countdown: 1. (0x80004028)
 >> Reverting instruction          :  04 00 00 0a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 00 0a          	: beq #0x9018
 >> Lifespan countdown: 2. (0x80008024)
 >> Lifespan countdown: 1. (0x80008028)
 >> Reverting instruction          :  04 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 24571.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 00 0a          	: beq #0x11018
 >> Lifespan countdown: 2. (0x80010024)
 >> Lifespan countdown: 1. (0x80010028)
 >> Reverting instruction          :  04 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 16379.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000000c. Hit: 1. Lifespan: 2. Instruction: 00000004. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 00 0a          	: beq #0x1018
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 00 0a          	: beq #0x21018
 >!  Erm -  fetching from unmapped memory, address: 0x80020024, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 4.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 0. Instruction: 00000025. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000044c
 >> Updated                     : 0x0000000080000450
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 d0 8b e2          	: add sp, fp, #1
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80103e, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 d0 8b e2          	: add sp, fp, #2
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f4f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 d0 8b e2          	: add sp, fp, #4
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 d0 8b e2          	: add sp, fp, #8
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 d0 8b e2          	: add sp, fp, #0x10
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 d0 8b e2          	: add sp, fp, #0x20
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 d0 8b e2          	: add sp, fp, #0x40
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 d0 8b e2          	: add sp, fp, #0x80
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 d1 8b e2          	: add sp, fp, #0, #2
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 d2 8b e2          	: add sp, fp, #0, #4
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 d4 8b e2          	: add sp, fp, #0, #8
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 d8 8b e2          	: add sp, fp, #0, #16
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 c0 8b e2          	: add ip, fp, #0
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 f0 8b e2          	: add pc, fp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 76.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 90 8b e2          	: add sb, fp, #0
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000044c. Hit: 1. Lifespan: 2. Instruction: 00000025. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 d0 8b e2          	: add sp, fp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 50 8b e2          	: add r5, fp, #0
 >> Lifespan countdown: 2. (0x80000450)
 >> Lifespan countdown: 1. (0x80000454)
 >> Reverting instruction          :  00 d0 8b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 0. Instruction: 00000029. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001280
 >> Updated                     : 0x0000000080001284
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x1
 >> Updated instruction            :  4b fc ff eb          	: bl #0x134
 >> Lifespan countdown: 2. (0x800003b4)
 >> Lifespan countdown: 1. (0x800003b8)
 >> Reverting instruction          :  4a fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 70.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x2
 >> Updated instruction            :  48 fc ff eb          	: bl #0x128
 >> Lifespan countdown: 2. (0x800003a8)
 >> Lifespan countdown: 1. (0x800003ac)
 >> Reverting instruction          :  4a fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff3f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 32.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x4
 >> Updated instruction            :  4e fc ff eb          	: bl #0x140
 >> Lifespan countdown: 2. (0x800003c0)
 >> Lifespan countdown: 1. (0x800003c4)
 >> Reverting instruction          :  4a fc ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x8
 >> Updated instruction            :  42 fc ff eb          	: bl #0x110
 >> Lifespan countdown: 2. (0x80000390)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x12000000!! Count 31 Skipping to end.
 >> Run result: Fault errored program - last instruction: 30.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x10
 >> Updated instruction            :  5a fc ff eb          	: bl #0x170
 >> Lifespan countdown: 2. (0x800003f0)
 >> Lifespan countdown: 1. (0x800003f4)
 >> Reverting instruction          :  4a fc ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 171.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x20
 >> Updated instruction            :  6a fc ff eb          	: bl #0x1b0
 >> Lifespan countdown: 2. (0x80000430)
 >> Lifespan countdown: 1. (0x80000434)
 >> Reverting instruction          :  4a fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 31.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x40
 >> Updated instruction            :  0a fc ff eb          	: bl #0x30
 >> Lifespan countdown: 2. (0x800002b0)
 >> Lifespan countdown: 1. (0x800002b4)
 >> Reverting instruction          :  4a fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9210ff3b, value: 0x2!! Count 42 Skipping to end.
 >> Run result: Fault errored program - last instruction: 41.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x80
 >> Updated instruction            :  ca fc ff eb          	: bl #0x330
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  4a fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x5c, value: 0x80001380!! Count 36 Skipping to end.
 >> Run result: Fault errored program - last instruction: 35.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x100
 >> Updated instruction            :  4a fd ff eb          	: bl #0x530
 >> Lifespan countdown: 2. (0x800007b0)
 >> Lifespan countdown: 1. (0x800007b4)
 >> Reverting instruction          :  4a fc ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000002c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 34.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x200
 >> Updated instruction            :  4a fe ff eb          	: bl #0x930
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  4a fc ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8, value: 0x692dd60b!! Count 297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x400
 >> Updated instruction            :  4a f8 ff eb          	: bl #0xfffff130
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff3b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x800
 >> Updated instruction            :  4a f4 ff eb          	: bl #0xffffe130
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe3b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x1000
 >> Updated instruction            :  4a ec ff eb          	: bl #0xffffc130
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc3b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x2000
 >> Updated instruction            :  4a dc ff eb          	: bl #0xffff8130
 >!  Erm -  fetching from unmapped memory, address: 0x7fff83b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x4000
 >> Updated instruction            :  4a bc ff eb          	: bl #0xffff0130
 >!  Erm -  fetching from unmapped memory, address: 0x7fff03b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001280. Hit: 1. Lifespan: 2. Instruction: 00000029. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4a fc ff eb          	: bl #0x130
 >> Mask                           :  0x8000
 >> Updated instruction            :  4a 7c ff eb          	: bl #0xfffe0130
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe03b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 0. Instruction: 00000055. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000374
 >> Updated                     : 0x0000000080000378
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 1b e5          	: ldr r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 1b e5          	: ldr r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 1b e5          	: ldr r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 1b e5          	: ldr r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000378)
 >> Lifespan countdown: 1. (0x8000037c)
 >> Reverting instruction          :  08 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 1b e5          	: ldr r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 1b e5          	: ldr r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 1b e5          	: ldr r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 1b e5          	: ldr r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 1b e5          	: ldr r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 1b e5          	: ldr r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 1b e5          	: ldr r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 1b e5          	: ldr r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 1b e5          	: ldr r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000374. Hit: 1. Lifespan: 2. Instruction: 00000055. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 1b e5          	: ldr r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 1b e5          	: ldr fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000002, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 56.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 0. Instruction: 00000056. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000378
 >> Updated                     : 0x000000008000037c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 93 e5          	: ldr r3, [r3, #1]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 93 e5          	: ldr r3, [r3, #2]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 93 e5          	: ldr r3, [r3, #8]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 93 e5          	: ldr r3, [r3, #0x10]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 93 e5          	: ldr r3, [r3, #0x20]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 93 e5          	: ldr r3, [r3, #0x40]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 93 e5          	: ldr r3, [r3, #0x80]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 93 e5          	: ldr r3, [r3, #0x100]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 93 e5          	: ldr r3, [r3, #0x200]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 93 e5          	: ldr r3, [r3, #0x400]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 93 e5          	: ldr r3, [r3, #0x800]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 93 e5          	: ldr r2, [r3]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 93 e5          	: ldr r1, [r3]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 93 e5          	: ldr r7, [r3]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000378. Hit: 1. Lifespan: 2. Instruction: 00000056. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 93 e5          	: ldr fp, [r3]
 >> Lifespan countdown: 2. (0x8000037c)
 >> Lifespan countdown: 1. (0x80000380)
 >> Reverting instruction          :  00 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffffa, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 59.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 0. Instruction: 00000062. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000390
 >> Updated                     : 0x0000000080000394
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 81 e5          	: str r3, [r1, #1]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 81 e5          	: str r3, [r1, #2]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 81 e5          	: str r3, [r1, #4]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 81 e5          	: str r3, [r1, #8]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 81 e5          	: str r3, [r1, #0x10]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
 >!  Erm -  fetching from unmapped memory, address: 0x20000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 81 e5          	: str r3, [r1, #0x20]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 81 e5          	: str r3, [r1, #0x40]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 81 e5          	: str r3, [r1, #0x80]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 81 e5          	: str r3, [r1, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110024, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 81 e5          	: str r3, [r1, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110124, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 81 e5          	: str r3, [r1, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110324, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 81 e5          	: str r3, [r1, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110724, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 81 e5          	: str r2, [r1]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 81 e5          	: str r1, [r1]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 81 e5          	: str r7, [r1]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000390. Hit: 1. Lifespan: 2. Instruction: 00000062. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 81 e5          	: str r3, [r1]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 81 e5          	: str fp, [r1]
 >> Lifespan countdown: 2. (0x80000394)
 >> Lifespan countdown: 1. (0x80000398)
 >> Reverting instruction          :  00 30 81 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 0. Instruction: 00000065. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000039c
 >> Updated                     : 0x00000000800003a0
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 75.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f e1          	: bx pc
 >> Lifespan countdown: 2. (0x800003a4)
 >> Lifespan countdown: 1. (0x800003a8)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 74.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f e1          	: bx ip
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 65.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f e1          	: bx sl
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 65.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f e1          	: bx r6
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 65.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003a0)
 >> Lifespan countdown: 1. (0x800003a4)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  Erm -  fetching from unmapped memory, address: 0xe55b30c0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 75.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f e1          	: blx lr
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f e1          	: qsub pc, lr, pc
 >!  Erm -  fetching from unmapped memory, address: 0x28, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 65.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  Erm -  fetching from unmapped memory, address: 0xe28bd000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 65.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000039c. Hit: 1. Lifespan: 2. Instruction: 00000065. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x800003cc)
 >> Lifespan countdown: 1. (0x800003d0)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 0. Instruction: 00000078. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000129c
 >> Updated                     : 0x00000000800012a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x1
 >> Updated instruction            :  ad 50 4b e2          	: sub r5, fp, #0xad
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x2
 >> Updated instruction            :  ae 50 4b e2          	: sub r5, fp, #0xae
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x4
 >> Updated instruction            :  a8 50 4b e2          	: sub r5, fp, #0xa8
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x8
 >> Updated instruction            :  a4 50 4b e2          	: sub r5, fp, #0xa4
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x10
 >> Updated instruction            :  bc 50 4b e2          	: sub r5, fp, #0xbc
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x20
 >> Updated instruction            :  8c 50 4b e2          	: sub r5, fp, #0x8c
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x40
 >> Updated instruction            :  ec 50 4b e2          	: sub r5, fp, #0xec
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x80
 >> Updated instruction            :  2c 50 4b e2          	: sub r5, fp, #0x2c
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x100
 >> Updated instruction            :  ac 51 4b e2          	: sub r5, fp, #172, #2
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x200
 >> Updated instruction            :  ac 52 4b e2          	: sub r5, fp, #172, #4
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010fff2, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x400
 >> Updated instruction            :  ac 54 4b e2          	: sub r5, fp, #172, #8
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xd410fffc, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x800
 >> Updated instruction            :  ac 58 4b e2          	: sub r5, fp, #172, #16
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f64fffc, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x1000
 >> Updated instruction            :  ac 40 4b e2          	: sub r4, fp, #0xac
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x2000
 >> Updated instruction            :  ac 70 4b e2          	: sub r7, fp, #0xac
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x4000
 >> Updated instruction            :  ac 10 4b e2          	: sub r1, fp, #0xac
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000129c. Hit: 1. Lifespan: 2. Instruction: 00000078. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 50 4b e2          	: sub r5, fp, #0xac
 >> Mask                           :  0x8000
 >> Updated instruction            :  ac d0 4b e2          	: sub sp, fp, #0xac
 >> Lifespan countdown: 2. (0x800012a0)
 >> Lifespan countdown: 1. (0x800012a4)
 >> Reverting instruction          :  ac 50 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 0. Instruction: 00000083. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012b0
 >> Updated                     : 0x00000000800012b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x1
 >> Updated instruction            :  c1 10 4b e2          	: sub r1, fp, #0xc1
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x2
 >> Updated instruction            :  c2 10 4b e2          	: sub r1, fp, #0xc2
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x4
 >> Updated instruction            :  c4 10 4b e2          	: sub r1, fp, #0xc4
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x8
 >> Updated instruction            :  c8 10 4b e2          	: sub r1, fp, #0xc8
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x10
 >> Updated instruction            :  d0 10 4b e2          	: sub r1, fp, #0xd0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x20
 >> Updated instruction            :  e0 10 4b e2          	: sub r1, fp, #0xe0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x40
 >> Updated instruction            :  80 10 4b e2          	: sub r1, fp, #0x80
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x80
 >> Updated instruction            :  40 10 4b e2          	: sub r1, fp, #0x40
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x100
 >> Updated instruction            :  c0 11 4b e2          	: sub r1, fp, #192, #2
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x200
 >> Updated instruction            :  c0 12 4b e2          	: sub r1, fp, #192, #4
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x400
 >> Updated instruction            :  c0 14 4b e2          	: sub r1, fp, #192, #8
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010fffc, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x800
 >> Updated instruction            :  c0 18 4b e2          	: sub r1, fp, #192, #16
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f50fffc, value: 0x10!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x1000
 >> Updated instruction            :  c0 00 4b e2          	: sub r0, fp, #0xc0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x2000
 >> Updated instruction            :  c0 30 4b e2          	: sub r3, fp, #0xc0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x4000
 >> Updated instruction            :  c0 50 4b e2          	: sub r5, fp, #0xc0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012b0. Hit: 1. Lifespan: 2. Instruction: 00000083. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 10 4b e2          	: sub r1, fp, #0xc0
 >> Mask                           :  0x8000
 >> Updated instruction            :  c0 90 4b e2          	: sub sb, fp, #0xc0
 >> Lifespan countdown: 2. (0x800012b4)
 >> Lifespan countdown: 1. (0x800012b8)
 >> Reverting instruction          :  c0 10 4b e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 0. Instruction: 00000087. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001254
 >> Updated                     : 0x0000000080001258
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x1
 >> Updated instruction            :  11 30 a0 e3          	: mov r3, #0x11
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x2
 >> Updated instruction            :  12 30 a0 e3          	: mov r3, #0x12
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x4
 >> Updated instruction            :  14 30 a0 e3          	: mov r3, #0x14
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x8
 >> Updated instruction            :  18 30 a0 e3          	: mov r3, #0x18
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x10
 >> Updated instruction            :  00 30 a0 e3          	: mov r3, #0
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x20
 >> Updated instruction            :  30 30 a0 e3          	: mov r3, #0x30
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x40
 >> Updated instruction            :  50 30 a0 e3          	: mov r3, #0x50
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x80
 >> Updated instruction            :  90 30 a0 e3          	: mov r3, #0x90
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x100
 >> Updated instruction            :  10 31 a0 e3          	: mov r3, #16, #2
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x200
 >> Updated instruction            :  10 32 a0 e3          	: mov r3, #16, #4
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x400
 >> Updated instruction            :  10 34 a0 e3          	: mov r3, #16, #8
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x800
 >> Updated instruction            :  10 38 a0 e3          	: mov r3, #16, #16
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 20 a0 e3          	: mov r2, #0x10
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 10 a0 e3          	: mov r1, #0x10
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10, value: 0x1!! Count 90 Skipping to end.
 >> Run result: Fault errored program - last instruction: 89.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 70 a0 e3          	: mov r7, #0x10
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001254. Hit: 1. Lifespan: 2. Instruction: 00000087. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 a0 e3          	: mov r3, #0x10
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 b0 a0 e3          	: mov fp, #0x10
 >> Lifespan countdown: 2. (0x80001258)
 >> Lifespan countdown: 1. (0x8000125c)
 >> Reverting instruction          :  10 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 0. Instruction: 00000097. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000460
 >> Updated                     : 0x0000000080000464
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 b0 8d e2          	: add fp, sp, #1
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000080103f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 b0 8d e2          	: add fp, sp, #2
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000007f50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 b0 8d e2          	: add fp, sp, #0x40
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 b0 8d e2          	: add fp, sp, #0x80
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 b1 8d e2          	: add fp, sp, #0, #2
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 b2 8d e2          	: add fp, sp, #0, #4
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 b4 8d e2          	: add fp, sp, #0, #8
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 b8 8d e2          	: add fp, sp, #0, #16
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 a0 8d e2          	: add sl, sp, #0
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 90 8d e2          	: add sb, sp, #0
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 f0 8d e2          	: add pc, sp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 98.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000460. Hit: 1. Lifespan: 2. Instruction: 00000097. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 30 8d e2          	: add r3, sp, #0
 >> Lifespan countdown: 2. (0x80000464)
 >> Lifespan countdown: 1. (0x80000468)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fffff68, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 0. Instruction: 00000100. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000046c
 >> Updated                     : 0x0000000080000470
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x1
 >> Updated instruction            :  cc 3f 4e e3          	: movt r3, #0xefcc
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x2
 >> Updated instruction            :  cf 3f 4e e3          	: movt r3, #0xefcf
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x4
 >> Updated instruction            :  c9 3f 4e e3          	: movt r3, #0xefc9
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x8
 >> Updated instruction            :  c5 3f 4e e3          	: movt r3, #0xefc5
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x10
 >> Updated instruction            :  dd 3f 4e e3          	: movt r3, #0xefdd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x20
 >> Updated instruction            :  ed 3f 4e e3          	: movt r3, #0xefed
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x40
 >> Updated instruction            :  8d 3f 4e e3          	: movt r3, #0xef8d
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x80
 >> Updated instruction            :  4d 3f 4e e3          	: movt r3, #0xef4d
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x100
 >> Updated instruction            :  cd 3e 4e e3          	: movt r3, #0xeecd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x200
 >> Updated instruction            :  cd 3d 4e e3          	: movt r3, #0xedcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x400
 >> Updated instruction            :  cd 3b 4e e3          	: movt r3, #0xebcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x800
 >> Updated instruction            :  cd 37 4e e3          	: movt r3, #0xe7cd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x1000
 >> Updated instruction            :  cd 2f 4e e3          	: movt r2, #0xefcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x2000
 >> Updated instruction            :  cd 1f 4e e3          	: movt r1, #0xefcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x4000
 >> Updated instruction            :  cd 7f 4e e3          	: movt r7, #0xefcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000046c. Hit: 1. Lifespan: 2. Instruction: 00000100. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  cd 3f 4e e3          	: movt r3, #0xefcd
 >> Mask                           :  0x8000
 >> Updated instruction            :  cd bf 4e e3          	: movt fp, #0xefcd
 >> Lifespan countdown: 2. (0x80000470)
 >> Lifespan countdown: 1. (0x80000474)
 >> Reverting instruction          :  cd 3f 4e e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000efcdff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 0. Instruction: 00000105. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000480
 >> Updated                     : 0x0000000080000484
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x1
 >> Updated instruction            :  33 30 41 e3          	: movt r3, #0x1033
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x2
 >> Updated instruction            :  30 30 41 e3          	: movt r3, #0x1030
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x4
 >> Updated instruction            :  36 30 41 e3          	: movt r3, #0x1036
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x8
 >> Updated instruction            :  3a 30 41 e3          	: movt r3, #0x103a
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x10
 >> Updated instruction            :  22 30 41 e3          	: movt r3, #0x1022
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x20
 >> Updated instruction            :  12 30 41 e3          	: movt r3, #0x1012
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x40
 >> Updated instruction            :  72 30 41 e3          	: movt r3, #0x1072
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x80
 >> Updated instruction            :  b2 30 41 e3          	: movt r3, #0x10b2
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x100
 >> Updated instruction            :  32 31 41 e3          	: movt r3, #0x1132
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x200
 >> Updated instruction            :  32 32 41 e3          	: movt r3, #0x1232
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x400
 >> Updated instruction            :  32 34 41 e3          	: movt r3, #0x1432
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x800
 >> Updated instruction            :  32 38 41 e3          	: movt r3, #0x1832
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x1000
 >> Updated instruction            :  32 20 41 e3          	: movt r2, #0x1032
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x2000
 >> Updated instruction            :  32 10 41 e3          	: movt r1, #0x1032
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x4000
 >> Updated instruction            :  32 70 41 e3          	: movt r7, #0x1032
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000480. Hit: 1. Lifespan: 2. Instruction: 00000105. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  32 30 41 e3          	: movt r3, #0x1032
 >> Mask                           :  0x8000
 >> Updated instruction            :  32 b0 41 e3          	: movt fp, #0x1032
 >> Lifespan countdown: 2. (0x80000484)
 >> Lifespan countdown: 1. (0x80000488)
 >> Reverting instruction          :  32 30 41 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000001032ff34, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 0. Instruction: 00000115. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012cc
 >> Updated                     : 0x00000000800012d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x1
 >> Updated instruction            :  a9 ff ff eb          	: bl #0xeac
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 196.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x2
 >> Updated instruction            :  aa ff ff eb          	: bl #0xeb0
 >> Lifespan countdown: 2. (0x8000117c)
 >> Lifespan countdown: 1. (0x80001180)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 195.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x4
 >> Updated instruction            :  ac ff ff eb          	: bl #0xeb8
 >> Lifespan countdown: 2. (0x80001184)
 >> Lifespan countdown: 1. (0x80001188)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43505.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x8
 >> Updated instruction            :  a0 ff ff eb          	: bl #0xe88
 >> Lifespan countdown: 2. (0x80001154)
 >> Lifespan countdown: 1. (0x80001158)
 >> Reverting instruction          :  a8 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x10
 >> Updated instruction            :  b8 ff ff eb          	: bl #0xee8
 >> Lifespan countdown: 2. (0x800011b4)
 >> Lifespan countdown: 1. (0x800011b8)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fed8, value: 0x0!! Count 163 Skipping to end.
 >> Run result: Fault errored program - last instruction: 162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x20
 >> Updated instruction            :  88 ff ff eb          	: bl #0xe28
 >> Lifespan countdown: 2. (0x800010f4)
 >> Lifespan countdown: 1. (0x800010f8)
 >> Reverting instruction          :  a8 ff ff eb 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x40
 >> Updated instruction            :  e8 ff ff eb          	: bl #0xfa8
 >> Lifespan countdown: 2. (0x80001274)
 >> Lifespan countdown: 1. (0x80001278)
 >> Reverting instruction          :  a8 ff ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x80
 >> Updated instruction            :  28 ff ff eb          	: bl #0xca8
 >> Lifespan countdown: 2. (0x80000f74)
 >> Lifespan countdown: 1. (0x80000f78)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 143.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x100
 >> Updated instruction            :  a8 fe ff eb          	: bl #0xaa8
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x200
 >> Updated instruction            :  a8 fd ff eb          	: bl #0x6a8
 >> Lifespan countdown: 2. (0x80000974)
 >> Lifespan countdown: 1. (0x80000978)
 >> Reverting instruction          :  a8 ff ff eb 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 527.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x400
 >> Updated instruction            :  a8 fb ff eb          	: bl #0xfffffea8
 >> Lifespan countdown: 2. (0x80000174)
 >> Lifespan countdown: 1. (0x80000178)
 >> Reverting instruction          :  a8 ff ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x800
 >> Updated instruction            :  a8 f7 ff eb          	: bl #0xffffeea8
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff174, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x1000
 >> Updated instruction            :  a8 ef ff eb          	: bl #0xffffcea8
 >!  Erm -  fetching from unmapped memory, address: 0x7fffd174, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x2000
 >> Updated instruction            :  a8 df ff eb          	: bl #0xffff8ea8
 >!  Erm -  fetching from unmapped memory, address: 0x7fff9174, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x4000
 >> Updated instruction            :  a8 bf ff eb          	: bl #0xffff0ea8
 >!  Erm -  fetching from unmapped memory, address: 0x7fff1174, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012cc. Hit: 1. Lifespan: 2. Instruction: 00000115. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a8 ff ff eb          	: bl #0xea8
 >> Mask                           :  0x8000
 >> Updated instruction            :  a8 7f ff eb          	: bl #0xfffe0ea8
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe1174, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 0. Instruction: 00000145. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000180
 >> Updated                     : 0x0000000080000184
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 50 e1          	: cmp r0, sp
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 50 e1          	: cmp r0, lr
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 50 e1          	: cmp r0, r8
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 50 e1          	: cmp r0, r4
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 50 e1          	: cmp r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 50 e1          	: cmp r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 50 e1          	: cmp r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 50 e1          	: cmp r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 50 e1          	: cmp r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 50 e1          	: cmp r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 50 e1          	: cmp r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 50 e1          	: cmp r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 50 e1          	: cmp r0, ip
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 50 e1          	: cmp r0, ip
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 50 e1          	: cmp r0, ip
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000180. Hit: 1. Lifespan: 2. Instruction: 00000145. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 50 e1          	: cmp r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 50 e1          	: cmp r0, ip
 >> Lifespan countdown: 2. (0x80000184)
 >> Lifespan countdown: 1. (0x80000188)
 >> Reverting instruction          :  0c 00 50 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 0. Instruction: 00000151. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000198
 >> Updated                     : 0x000000008000019c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 03 82          	: andhi r3, r3, #0
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 03 82          	: andhi r3, r3, #3
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 03 82          	: andhi r3, r3, #5
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 03 82          	: andhi r3, r3, #9
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 03 82          	: andhi r3, r3, #0x11
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 03 82          	: andhi r3, r3, #0x21
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 03 82          	: andhi r3, r3, #0x41
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 03 82          	: andhi r3, r3, #0x81
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 03 82          	: andhi r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 03 82          	: andhi r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 03 82          	: andhi r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 03 82          	: andhi r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 03 82          	: andhi r2, r3, #1
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 03 82          	: andhi r1, r3, #1
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 164.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 03 82          	: andhi r7, r3, #1
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000198. Hit: 1. Lifespan: 2. Instruction: 00000151. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 03 82          	: andhi r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 03 82          	: andhi fp, r3, #1
 >> Lifespan countdown: 2. (0x8000019c)
 >> Lifespan countdown: 1. (0x800001a0)
 >> Reverting instruction          :  01 30 03 82 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 0. Instruction: 00000158. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001b4
 >> Updated                     : 0x00000000800001b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 42 e2          	: sub lr, r2, #0
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 42 e2          	: sub lr, r2, #3
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 42 e2          	: sub lr, r2, #5
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 42 e2          	: sub lr, r2, #9
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 42 e2          	: sub lr, r2, #0x11
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 42 e2          	: sub lr, r2, #0x21
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 42 e2          	: sub lr, r2, #0x41
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 42 e2          	: sub lr, r2, #0x81
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 42 e2          	: sub lr, r2, #0x40000000
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 42 e2          	: sub lr, r2, #0x10000000
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 42 e2          	: sub lr, r2, #0x1000000
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 42 e2          	: sub lr, r2, #0x10000
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 42 e2          	: sub pc, r2, #1
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 158.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 42 e2          	: sub ip, r2, #1
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 42 e2          	: sub sl, r2, #1
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001b4. Hit: 1. Lifespan: 2. Instruction: 00000158. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 42 e2          	: sub r6, r2, #1
 >> Lifespan countdown: 2. (0x800001b8)
 >> Lifespan countdown: 1. (0x800001bc)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 0. Instruction: 00000164. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002b0
 >> Updated                     : 0x00000000800002b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 a0 e1          	: mov r5, r0
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 a0 e1          	: mov r5, r3
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 a0 e1          	: mov r5, r5
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 a0 e1          	: mov r5, sb
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 a0 e1          	: lsl r5, r1, r0
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 a0 e1          	: lsr r5, r1, #0x20
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 a0 e1          	: asr r5, r1, #0x20
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 a0 e1          	: lsl r5, r1, #1
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 a0 e1          	: lsl r5, r1, #2
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 a0 e1          	: lsl r5, r1, #4
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 a0 e1          	: lsl r5, r1, #8
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 a0 e1          	: lsl r5, r1, #0x10
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 a0 e1          	: mov r4, r1
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 a0 e1          	: mov r7, r1
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 a0 e1          	: mov r1, r1
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b0. Hit: 1. Lifespan: 2. Instruction: 00000164. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 a0 e1          	: mov r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 a0 e1          	: mov sp, r1
 >> Lifespan countdown: 2. (0x800002b4)
 >> Lifespan countdown: 1. (0x800002b8)
 >> Reverting instruction          :  01 50 a0 e1 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 0. Instruction: 00000171. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000228
 >> Updated                     : 0x000000008000022c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1
 >> Updated instruction            :  23 41 a0 e1          	: lsr r4, r3, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2
 >> Updated instruction            :  20 41 a0 e1          	: lsr r4, r0, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4
 >> Updated instruction            :  26 41 a0 e1          	: lsr r4, r6, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 41 a0 e1          	: lsr r4, sl, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x10
 >> Updated instruction            :  32 41 a0 e1          	: lsr r4, r2, r1
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x20
 >> Updated instruction            :  02 41 a0 e1          	: lsl r4, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x40
 >> Updated instruction            :  62 41 a0 e1          	: ror r4, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 41 a0 e1          	: lsr r4, r2, #3
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x100
 >> Updated instruction            :  22 40 a0 e1          	: lsr r4, r2, #0x20
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x200
 >> Updated instruction            :  22 43 a0 e1          	: lsr r4, r2, #6
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x400
 >> Updated instruction            :  22 45 a0 e1          	: lsr r4, r2, #0xa
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x800
 >> Updated instruction            :  22 49 a0 e1          	: lsr r4, r2, #0x12
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 51 a0 e1          	: lsr r5, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 61 a0 e1          	: lsr r6, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 01 a0 e1          	: lsr r0, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0xed8790aa!! Count 176 Skipping to end.
 >> Run result: Fault errored program - last instruction: 175.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000228. Hit: 1. Lifespan: 2. Instruction: 00000171. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 41 a0 e1          	: lsr r4, r2, #2
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 c1 a0 e1          	: lsr ip, r2, #2
 >> Lifespan countdown: 2. (0x8000022c)
 >> Lifespan countdown: 1. (0x80000230)
 >> Reverting instruction          :  22 41 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 0. Instruction: 00000178. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000230
 >> Updated                     : 0x0000000080000234
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 91 e4          	: ldr ip, [r1], #5
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 91 e4          	: ldr ip, [r1], #6
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 91 e4          	: ldr ip, [r1], #0
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 91 e4          	: ldr ip, [r1], #0xc
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 91 e4          	: ldr ip, [r1], #0x14
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 91 e4          	: ldr ip, [r1], #0x24
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 91 e4          	: ldr ip, [r1], #0x44
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 91 e4          	: ldr ip, [r1], #0x84
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 91 e4          	: ldr ip, [r1], #0x104
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 91 e4          	: ldr ip, [r1], #0x204
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 91 e4          	: ldr ip, [r1], #0x404
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 91 e4          	: ldr ip, [r1], #0x804
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 91 e4          	: ldr sp, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000aa49989b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 91 e4          	: ldr lr, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 91 e4          	: ldr r8, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 2. Lifespan: 2. Instruction: 00000178. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 91 e4          	: ldr r4, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 0. Instruction: 00000185. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000238
 >> Updated                     : 0x000000008000023c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110084, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110184, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110384, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110784, value: 0x0!! Count 191 Skipping to end.
 >> Run result: Fault errored program - last instruction: 190.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 3. Lifespan: 2. Instruction: 00000185. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 0. Instruction: 00000190. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000238
 >> Updated                     : 0x000000008000023c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 4. Lifespan: 2. Instruction: 00000190. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x80000240)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 0. Instruction: 00000194. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000248
 >> Updated                     : 0x000000008000024c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 86 e0          	: add r0, r6, r2
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 86 e0          	: add r0, r6, r1
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 86 e0          	: add r0, r6, r7
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 86 e0          	: add r0, r6, fp
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 86 e0          	: add r0, r6, r3, lsl r0
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 86 e0          	: add r0, r6, r3, lsr #32
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 86 e0          	: add r0, r6, r3, asr #32
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 86 e0          	: add r0, r6, r3, lsl #1
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 86 e0          	: add r0, r6, r3, lsl #2
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 86 e0          	: add r0, r6, r3, lsl #4
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 86 e0          	: add r0, r6, r3, lsl #8
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 86 e0          	: add r0, r6, r3, lsl #16
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 86 e0          	: add r1, r6, r3
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 86 e0          	: add r2, r6, r3
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 86 e0          	: add r4, r6, r3
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000248. Hit: 1. Lifespan: 2. Instruction: 00000194. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 86 e0          	: add r0, r6, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 86 e0          	: add r8, r6, r3
 >> Lifespan countdown: 2. (0x8000024c)
 >> Lifespan countdown: 1. (0x80000250)
 >> Reverting instruction          :  03 00 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 0. Instruction: 00000199. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012d4
 >> Updated                     : 0x00000000800012d8
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 a0 e1          	: mov r0, r4
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 a0 e1          	: mov r0, r7
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 a0 e1          	: mov r0, r1
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 a0 e1          	: mov r0, sp
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 a0 e1          	: lsl r0, r5, r0
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 a0 e1          	: lsr r0, r5, #0x20
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 a0 e1          	: asr r0, r5, #0x20
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffff, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 a0 e1          	: lsl r0, r5, #1
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fea0, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 a0 e1          	: lsl r0, r5, #2
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fd40, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 a0 e1          	: lsl r0, r5, #4
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff500, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 a0 e1          	: lsl r0, r5, #8
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff5000, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 a0 e1          	: lsl r0, r5, #0x10
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff500000, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 a0 e1          	: mov r1, r5
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 a0 e1          	: mov r2, r5
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 a0 e1          	: mov r4, r5
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d4. Hit: 1. Lifespan: 2. Instruction: 00000199. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 a0 e1          	: mov r8, r5
 >> Lifespan countdown: 2. (0x800012d8)
 >> Lifespan countdown: 1. (0x80000ff8)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 0. Instruction: 00000206. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000100c
 >> Updated                     : 0x0000000080001010
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x1
 >> Updated instruction            :  7e c0 e0 e3          	: mvn ip, #0x7e
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x2
 >> Updated instruction            :  7d c0 e0 e3          	: mvn ip, #0x7d
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x4
 >> Updated instruction            :  7b c0 e0 e3          	: mvn ip, #0x7b
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x8
 >> Updated instruction            :  77 c0 e0 e3          	: mvn ip, #0x77
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x10
 >> Updated instruction            :  6f c0 e0 e3          	: mvn ip, #0x6f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x20
 >> Updated instruction            :  5f c0 e0 e3          	: mvn ip, #0x5f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x40
 >> Updated instruction            :  3f c0 e0 e3          	: mvn ip, #0x3f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x80
 >> Updated instruction            :  ff c0 e0 e3          	: mvn ip, #0xff
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x100
 >> Updated instruction            :  7f c1 e0 e3          	: mvn ip, #0xc000001f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x200
 >> Updated instruction            :  7f c2 e0 e3          	: mvn ip, #0xf0000007
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x400
 >> Updated instruction            :  7f c4 e0 e3          	: mvn ip, #0x7f000000
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x800
 >> Updated instruction            :  7f c8 e0 e3          	: mvn ip, #0x7f0000
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x1000
 >> Updated instruction            :  7f d0 e0 e3          	: mvn sp, #0x7f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff70, value: 0x8010ff60!! Count 227 Skipping to end.
 >> Run result: Fault errored program - last instruction: 226.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x2000
 >> Updated instruction            :  7f e0 e0 e3          	: mvn lr, #0x7f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x4000
 >> Updated instruction            :  7f 80 e0 e3          	: mvn r8, #0x7f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000100c. Hit: 1. Lifespan: 2. Instruction: 00000206. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  7f c0 e0 e3          	: mvn ip, #0x7f
 >> Mask                           :  0x8000
 >> Updated instruction            :  7f 40 e0 e3          	: mvn r4, #0x7f
 >> Lifespan countdown: 2. (0x80001010)
 >> Lifespan countdown: 1. (0x80001014)
 >> Reverting instruction          :  7f c0 e0 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffa9, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 0. Instruction: 00000213. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001028
 >> Updated                     : 0x000000008000102c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 00 52 e3          	: cmp r2, #6
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 00 52 e3          	: cmp r2, #5
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 00 52 e3          	: cmp r2, #3
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 00 52 e3          	: cmp r2, #0xf
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 00 52 e3          	: cmp r2, #0x17
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 00 52 e3          	: cmp r2, #0x27
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 00 52 e3          	: cmp r2, #0x47
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 00 52 e3          	: cmp r2, #0x87
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 01 52 e3          	: cmp r2, #0xc0000001
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 02 52 e3          	: cmp r2, #0x70000000
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 04 52 e3          	: cmp r2, #0x7000000
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 08 52 e3          	: cmp r2, #0x70000
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 10 52 e3          	: cmp r2, #7
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 20 52 e3          	: cmp r2, #7
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 40 52 e3          	: cmp r2, #7
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001028. Hit: 1. Lifespan: 2. Instruction: 00000213. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 00 52 e3          	: cmp r2, #7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 80 52 e3          	: cmp r2, #7
 >> Lifespan countdown: 2. (0x8000102c)
 >> Lifespan countdown: 1. (0x80001030)
 >> Reverting instruction          :  07 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 0. Instruction: 00000221. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000080
 >> Updated                     : 0x0000000080000084
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f 01          	: bxeq pc
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f 01          	: bxeq ip
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f 01          	: bxeq sl
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f 01          	: bxeq r6
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f 01          	: blxeq lr
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f 01          	: qsubeq pc, lr, pc
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 1. Lifespan: 2. Instruction: 00000221. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 0. Instruction: 00000227. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000098
 >> Updated                     : 0x000000008000009c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 42 e2          	: sub lr, r2, #0
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 42 e2          	: sub lr, r2, #3
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 42 e2          	: sub lr, r2, #5
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 42 e2          	: sub lr, r2, #9
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 42 e2          	: sub lr, r2, #0x11
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 42 e2          	: sub lr, r2, #0x21
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 42 e2          	: sub lr, r2, #0x41
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 42 e2          	: sub lr, r2, #0x81
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 42 e2          	: sub lr, r2, #0x40000000
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 42 e2          	: sub lr, r2, #0x10000000
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 42 e2          	: sub lr, r2, #0x1000000
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 42 e2          	: sub lr, r2, #0x10000
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 42 e2          	: sub pc, r2, #1
 >!  Erm -  fetching from unmapped memory, address: 0x26, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 227.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 42 e2          	: sub ip, r2, #1
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 42 e2          	: sub sl, r2, #1
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000098. Hit: 1. Lifespan: 2. Instruction: 00000227. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 42 e2          	: sub lr, r2, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 42 e2          	: sub r6, r2, #1
 >> Lifespan countdown: 2. (0x8000009c)
 >> Lifespan countdown: 1. (0x800000a0)
 >> Reverting instruction          :  01 e0 42 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000026, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 0. Instruction: 00000236. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000bc
 >> Updated                     : 0x00000000800000c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 c0 e5          	: strb r1, [r0, #1]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 c0 e5          	: strb r1, [r0, #2]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 c0 e5          	: strb r1, [r0, #4]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 c0 e5          	: strb r1, [r0, #8]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 c0 e5          	: strb r1, [r0, #0x10]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 c0 e5          	: strb r1, [r0, #0x20]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 c0 e5          	: strb r1, [r0, #0x40]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 c0 e5          	: strb r1, [r0, #0x80]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110009, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 c0 e5          	: strb r1, [r0, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110089, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 c0 e5          	: strb r1, [r0, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110189, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 c0 e5          	: strb r1, [r0, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110389, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 c0 e5          	: strb r1, [r0, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110789, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 c0 e5          	: strb r0, [r0]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 c0 e5          	: strb r3, [r0]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 c0 e5          	: strb r5, [r0]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000bc. Hit: 1. Lifespan: 2. Instruction: 00000236. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 c0 e5          	: strb r1, [r0]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 c0 e5          	: strb sb, [r0]
 >> Lifespan countdown: 2. (0x800000c0)
 >> Lifespan countdown: 1. (0x800000c4)
 >> Reverting instruction          :  00 10 c0 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 0. Instruction: 00000240. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000cc
 >> Updated                     : 0x00000000800000d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 53 e3          	: cmp r3, #2
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 53 e3          	: cmp r3, #1
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 53 e3          	: cmp r3, #7
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 53 e3          	: cmp r3, #0xb
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 53 e3          	: cmp r3, #0x13
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 53 e3          	: cmp r3, #0x23
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 53 e3          	: cmp r3, #0x43
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 53 e3          	: cmp r3, #0x83
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 53 e3          	: cmp r3, #0xc0000000
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 53 e3          	: cmp r3, #0x30000000
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 53 e3          	: cmp r3, #0x3000000
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 53 e3          	: cmp r3, #0x30000
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 53 e3          	: cmp r3, #3
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 53 e3          	: cmp r3, #3
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 53 e3          	: cmp r3, #3
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000cc. Hit: 1. Lifespan: 2. Instruction: 00000240. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 53 e3          	: cmp r3, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 53 e3          	: cmp r3, #3
 >> Lifespan countdown: 2. (0x800000d0)
 >> Lifespan countdown: 1. (0x800000d4)
 >> Reverting instruction          :  03 00 53 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 0. Instruction: 00000251. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000f8
 >> Updated                     : 0x00000000800000fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 c8 d7 e7          	: bfi ip, r0, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 c8 d7 e7          	: bfi ip, r3, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 c8 d7 e7          	: bfi ip, r5, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 c8 d7 e7          	: bfi ip, sb, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 c8 d7 e7          	: ldrb ip, [r7, r1, lsl #16]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 251.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 251.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 251.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 c8 d7 e7          	: bfi ip, r1, #0x11, #7
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 c9 d7 e7          	: bfi ip, r1, #0x12, #6
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 ca d7 e7          	: bfi ip, r1, #0x14, #4
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 cc d7 e7          	: bfi ip, r1, #0x17, #1
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 c0 d7 e7          	: bfi ip, r1, #0, #0x18
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 d8 d7 e7          	: bfi sp, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 e8 d7 e7          	: bfi lr, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 88 d7 e7          	: bfi r8, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f8. Hit: 1. Lifespan: 2. Instruction: 00000251. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c8 d7 e7          	: bfi ip, r1, #0x10, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 48 d7 e7          	: bfi r4, r1, #0x10, #8
 >> Lifespan countdown: 2. (0x800000fc)
 >> Lifespan countdown: 1. (0x80000100)
 >> Reverting instruction          :  11 c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 0. Instruction: 00000257. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110010, value: 0x0!! Count 262 Skipping to end.
 >> Run result: Fault errored program - last instruction: 261.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110090, value: 0x0!! Count 262 Skipping to end.
 >> Run result: Fault errored program - last instruction: 261.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110190, value: 0x0!! Count 262 Skipping to end.
 >> Run result: Fault errored program - last instruction: 261.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110390, value: 0x0!! Count 262 Skipping to end.
 >> Run result: Fault errored program - last instruction: 261.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110790, value: 0x0!! Count 262 Skipping to end.
 >> Run result: Fault errored program - last instruction: 261.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 1. Lifespan: 2. Instruction: 00000257. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 0. Instruction: 00000266. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 3. Lifespan: 2. Instruction: 00000266. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 0. Instruction: 00000272. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 5. Lifespan: 2. Instruction: 00000272. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 0. Instruction: 00000280. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 7. Lifespan: 2. Instruction: 00000280. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 0. Instruction: 00000292. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000011c
 >> Updated                     : 0x0000000080000120
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 30 c2 e3          	: bic r3, r2, #2
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 30 c2 e3          	: bic r3, r2, #1
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 30 c2 e3          	: bic r3, r2, #7
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 30 c2 e3          	: bic r3, r2, #0xb
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 30 c2 e3          	: bic r3, r2, #0x13
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 30 c2 e3          	: bic r3, r2, #0x23
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 30 c2 e3          	: bic r3, r2, #0x43
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 30 c2 e3          	: bic r3, r2, #0x83
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 31 c2 e3          	: bic r3, r2, #0xc0000000
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 32 c2 e3          	: bic r3, r2, #0x30000000
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 34 c2 e3          	: bic r3, r2, #0x3000000
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 38 c2 e3          	: bic r3, r2, #0x30000
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 20 c2 e3          	: bic r2, r2, #3
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 10 c2 e3          	: bic r1, r2, #3
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 70 c2 e3          	: bic r7, r2, #3
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000011c. Hit: 1. Lifespan: 2. Instruction: 00000292. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c2 e3          	: bic r3, r2, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 b0 c2 e3          	: bic fp, r2, #3
 >> Lifespan countdown: 2. (0x80000120)
 >> Lifespan countdown: 1. (0x80000124)
 >> Reverting instruction          :  03 30 c2 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 0. Instruction: 00000302. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001078
 >> Updated                     : 0x000000008000107c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  82 31 a0 e1          	: lsl r3, r2, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  81 31 a0 e1          	: lsl r3, r1, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  87 31 a0 e1          	: lsl r3, r7, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  8b 31 a0 e1          	: lsl r3, fp, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  93 31 a0 e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  a3 31 a0 e1          	: lsr r3, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  c3 31 a0 e1          	: asr r3, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  03 31 a0 e1          	: lsl r3, r3, #2
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  83 30 a0 e1          	: lsl r3, r3, #1
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  83 33 a0 e1          	: lsl r3, r3, #7
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  83 35 a0 e1          	: lsl r3, r3, #0xb
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  83 39 a0 e1          	: lsl r3, r3, #0x13
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  83 21 a0 e1          	: lsl r2, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  83 11 a0 e1          	: lsl r1, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000080, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  83 71 a0 e1          	: lsl r7, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001078. Hit: 1. Lifespan: 2. Instruction: 00000302. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  83 31 a0 e1          	: lsl r3, r3, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  83 b1 a0 e1          	: lsl fp, r3, #3
 >> Lifespan countdown: 2. (0x8000107c)
 >> Lifespan countdown: 1. (0x80001080)
 >> Reverting instruction          :  83 31 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000006c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 0. Instruction: 00000310. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001098
 >> Updated                     : 0x000000008000109c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x1
 >> Updated instruction            :  22 3c a0 e1          	: lsr r3, r2, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x2
 >> Updated instruction            :  21 3c a0 e1          	: lsr r3, r1, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x4
 >> Updated instruction            :  27 3c a0 e1          	: lsr r3, r7, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x8
 >> Updated instruction            :  2b 3c a0 e1          	: lsr r3, fp, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x10
 >> Updated instruction            :  33 3c a0 e1          	: lsr r3, r3, ip
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x20
 >> Updated instruction            :  03 3c a0 e1          	: lsl r3, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x40
 >> Updated instruction            :  63 3c a0 e1          	: ror r3, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x80
 >> Updated instruction            :  a3 3c a0 e1          	: lsr r3, r3, #0x19
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x100
 >> Updated instruction            :  23 3d a0 e1          	: lsr r3, r3, #0x1a
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x200
 >> Updated instruction            :  23 3e a0 e1          	: lsr r3, r3, #0x1c
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x400
 >> Updated instruction            :  23 38 a0 e1          	: lsr r3, r3, #0x10
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x800
 >> Updated instruction            :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x1000
 >> Updated instruction            :  23 2c a0 e1          	: lsr r2, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x2000
 >> Updated instruction            :  23 1c a0 e1          	: lsr r1, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x4000
 >> Updated instruction            :  23 7c a0 e1          	: lsr r7, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001098. Hit: 1. Lifespan: 2. Instruction: 00000310. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Mask                           :  0x8000
 >> Updated instruction            :  23 bc a0 e1          	: lsr fp, r3, #0x18
 >> Lifespan countdown: 2. (0x8000109c)
 >> Lifespan countdown: 1. (0x800010a0)
 >> Reverting instruction          :  23 3c a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffec, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 0. Instruction: 00000319. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010bc
 >> Updated                     : 0x00000000800010c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x1
 >> Updated instruction            :  55 00 84 e5          	: str r0, [r4, #0x55]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x2
 >> Updated instruction            :  56 00 84 e5          	: str r0, [r4, #0x56]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x4
 >> Updated instruction            :  50 00 84 e5          	: str r0, [r4, #0x50]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x8
 >> Updated instruction            :  5c 00 84 e5          	: str r0, [r4, #0x5c]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x10
 >> Updated instruction            :  44 00 84 e5          	: str r0, [r4, #0x44]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x20
 >> Updated instruction            :  74 00 84 e5          	: str r0, [r4, #0x74]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x40
 >> Updated instruction            :  14 00 84 e5          	: str r0, [r4, #0x14]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x80
 >> Updated instruction            :  d4 00 84 e5          	: str r0, [r4, #0xd4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110034, value: 0x0!! Count 320 Skipping to end.
 >> Run result: Fault errored program - last instruction: 319.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x100
 >> Updated instruction            :  54 01 84 e5          	: str r0, [r4, #0x154]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100b4, value: 0x0!! Count 320 Skipping to end.
 >> Run result: Fault errored program - last instruction: 319.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x200
 >> Updated instruction            :  54 02 84 e5          	: str r0, [r4, #0x254]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101b4, value: 0x0!! Count 320 Skipping to end.
 >> Run result: Fault errored program - last instruction: 319.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x400
 >> Updated instruction            :  54 04 84 e5          	: str r0, [r4, #0x454]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103b4, value: 0x0!! Count 320 Skipping to end.
 >> Run result: Fault errored program - last instruction: 319.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x800
 >> Updated instruction            :  54 08 84 e5          	: str r0, [r4, #0x854]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107b4, value: 0x0!! Count 320 Skipping to end.
 >> Run result: Fault errored program - last instruction: 319.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x1000
 >> Updated instruction            :  54 10 84 e5          	: str r1, [r4, #0x54]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x2000
 >> Updated instruction            :  54 20 84 e5          	: str r2, [r4, #0x54]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x4000
 >> Updated instruction            :  54 40 84 e5          	: str r4, [r4, #0x54]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010bc. Hit: 1. Lifespan: 2. Instruction: 00000319. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 00 84 e5          	: str r0, [r4, #0x54]
 >> Mask                           :  0x8000
 >> Updated instruction            :  54 80 84 e5          	: str r8, [r4, #0x54]
 >> Lifespan countdown: 2. (0x800010c0)
 >> Lifespan countdown: 1. (0x800010c4)
 >> Reverting instruction          :  54 00 84 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 0. Instruction: 00000328. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004b4
 >> Updated                     : 0x00000000800004b8
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 00 0b e5          	: str r0, [fp, #-0x2d]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801157, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 00 0b e5          	: str r0, [fp, #-0x2e]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8068, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x4
 >> Updated instruction            :  28 00 0b e5          	: str r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x8
 >> Updated instruction            :  24 00 0b e5          	: str r0, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 00 0b e5          	: str r0, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 00 0b e5          	: str r0, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 00 0b e5          	: str r0, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 00 0b e5          	: str r0, [fp, #-0xac]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 01 0b e5          	: str r0, [fp, #-0x12c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 02 0b e5          	: str r0, [fp, #-0x22c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 04 0b e5          	: str r0, [fp, #-0x42c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 08 0b e5          	: str r0, [fp, #-0x82c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 10 0b e5          	: str r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c 20 0b e5          	: str r2, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x98, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c 40 0b e5          	: str r4, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004b4. Hit: 1. Lifespan: 2. Instruction: 00000328. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 00 0b e5          	: str r0, [fp, #-0x2c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 80 0b e5          	: str r8, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800004b8)
 >> Lifespan countdown: 1. (0x800004bc)
 >> Reverting instruction          :  2c 00 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0xed8790aa!! Count 387 Skipping to end.
 >> Run result: Fault errored program - last instruction: 386.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 0. Instruction: 00000333. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004c8
 >> Updated                     : 0x00000000800004cc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 93 e5          	: ldr r0, [r3, #0xd]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 93 e5          	: ldr r0, [r3, #0xe]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 93 e5          	: ldr r0, [r3, #8]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 93 e5          	: ldr r0, [r3, #4]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 93 e5          	: ldr r0, [r3, #0x1c]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 93 e5          	: ldr r0, [r3, #0x2c]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 93 e5          	: ldr r0, [r3, #0x4c]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 93 e5          	: ldr r0, [r3, #0x8c]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 93 e5          	: ldr r0, [r3, #0x10c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011006c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 333.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 93 e5          	: ldr r0, [r3, #0x20c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011016c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 333.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 93 e5          	: ldr r0, [r3, #0x40c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011036c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 333.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 93 e5          	: ldr r0, [r3, #0x80c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011076c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 333.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 93 e5          	: ldr r1, [r3, #0xc]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000efcdab89, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 93 e5          	: ldr r2, [r3, #0xc]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 93 e5          	: ldr r4, [r3, #0xc]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004c8. Hit: 1. Lifespan: 2. Instruction: 00000333. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 93 e5          	: ldr r0, [r3, #0xc]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 93 e5          	: ldr r8, [r3, #0xc]
 >> Lifespan countdown: 2. (0x800004cc)
 >> Lifespan countdown: 1. (0x800004d0)
 >> Reverting instruction          :  0c 00 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 0. Instruction: 00000343. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004f0
 >> Updated                     : 0x00000000800004f4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x1
 >> Updated instruction            :  21 34 42 e3          	: movt r3, #0x2421
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x2
 >> Updated instruction            :  22 34 42 e3          	: movt r3, #0x2422
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x4
 >> Updated instruction            :  24 34 42 e3          	: movt r3, #0x2424
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x8
 >> Updated instruction            :  28 34 42 e3          	: movt r3, #0x2428
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x10
 >> Updated instruction            :  30 34 42 e3          	: movt r3, #0x2430
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x20
 >> Updated instruction            :  00 34 42 e3          	: movt r3, #0x2400
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x40
 >> Updated instruction            :  60 34 42 e3          	: movt r3, #0x2460
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 34 42 e3          	: movt r3, #0x24a0
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x100
 >> Updated instruction            :  20 35 42 e3          	: movt r3, #0x2520
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x200
 >> Updated instruction            :  20 36 42 e3          	: movt r3, #0x2620
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x400
 >> Updated instruction            :  20 30 42 e3          	: movt r3, #0x2020
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x800
 >> Updated instruction            :  20 3c 42 e3          	: movt r3, #0x2c20
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 24 42 e3          	: movt r2, #0x2420
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 14 42 e3          	: movt r1, #0x2420
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002420ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 74 42 e3          	: movt r7, #0x2420
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004f0. Hit: 1. Lifespan: 2. Instruction: 00000343. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 34 42 e3          	: movt r3, #0x2420
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 b4 42 e3          	: movt fp, #0x2420
 >> Lifespan countdown: 2. (0x800004f4)
 >> Lifespan countdown: 1. (0x800004f8)
 >> Reverting instruction          :  20 34 42 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2420fea4, value: 0x70db!! Count 346 Skipping to end.
 >> Run result: Fault errored program - last instruction: 345.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 0. Instruction: 00000350. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000050c
 >> Updated                     : 0x0000000080000510
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x1
 >> Updated instruction            :  12 06 04 e3          	: movw r0, #0x4612
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x2
 >> Updated instruction            :  11 06 04 e3          	: movw r0, #0x4611
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x4
 >> Updated instruction            :  17 06 04 e3          	: movw r0, #0x4617
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x8
 >> Updated instruction            :  1b 06 04 e3          	: movw r0, #0x461b
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x10
 >> Updated instruction            :  03 06 04 e3          	: movw r0, #0x4603
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x20
 >> Updated instruction            :  33 06 04 e3          	: movw r0, #0x4633
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x40
 >> Updated instruction            :  53 06 04 e3          	: movw r0, #0x4653
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x80
 >> Updated instruction            :  93 06 04 e3          	: movw r0, #0x4693
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x100
 >> Updated instruction            :  13 07 04 e3          	: movw r0, #0x4713
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x200
 >> Updated instruction            :  13 04 04 e3          	: movw r0, #0x4413
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x400
 >> Updated instruction            :  13 02 04 e3          	: movw r0, #0x4213
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x800
 >> Updated instruction            :  13 0e 04 e3          	: movw r0, #0x4e13
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x1000
 >> Updated instruction            :  13 16 04 e3          	: movw r1, #0x4613
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000004613, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x2000
 >> Updated instruction            :  13 26 04 e3          	: movw r2, #0x4613
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x4000
 >> Updated instruction            :  13 46 04 e3          	: movw r4, #0x4613
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000050c. Hit: 1. Lifespan: 2. Instruction: 00000350. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 06 04 e3          	: movw r0, #0x4613
 >> Mask                           :  0x8000
 >> Updated instruction            :  13 86 04 e3          	: movw r8, #0x4613
 >> Lifespan countdown: 2. (0x80000510)
 >> Lifespan countdown: 1. (0x80000514)
 >> Reverting instruction          :  13 06 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 0. Instruction: 00000358. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000052c
 >> Updated                     : 0x0000000080000530
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x1
 >> Updated instruction            :  81 09 46 e3          	: movt r0, #0x6981
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x2
 >> Updated instruction            :  82 09 46 e3          	: movt r0, #0x6982
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x4
 >> Updated instruction            :  84 09 46 e3          	: movt r0, #0x6984
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x8
 >> Updated instruction            :  88 09 46 e3          	: movt r0, #0x6988
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x10
 >> Updated instruction            :  90 09 46 e3          	: movt r0, #0x6990
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x20
 >> Updated instruction            :  a0 09 46 e3          	: movt r0, #0x69a0
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x40
 >> Updated instruction            :  c0 09 46 e3          	: movt r0, #0x69c0
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x80
 >> Updated instruction            :  00 09 46 e3          	: movt r0, #0x6900
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x100
 >> Updated instruction            :  80 08 46 e3          	: movt r0, #0x6880
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x200
 >> Updated instruction            :  80 0b 46 e3          	: movt r0, #0x6b80
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x400
 >> Updated instruction            :  80 0d 46 e3          	: movt r0, #0x6d80
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x800
 >> Updated instruction            :  80 01 46 e3          	: movt r0, #0x6180
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x1000
 >> Updated instruction            :  80 19 46 e3          	: movt r1, #0x6980
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006980ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x2000
 >> Updated instruction            :  80 29 46 e3          	: movt r2, #0x6980
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x4000
 >> Updated instruction            :  80 49 46 e3          	: movt r4, #0x6980
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000052c. Hit: 1. Lifespan: 2. Instruction: 00000358. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 09 46 e3          	: movt r0, #0x6980
 >> Mask                           :  0x8000
 >> Updated instruction            :  80 89 46 e3          	: movt r8, #0x6980
 >> Lifespan countdown: 2. (0x80000530)
 >> Lifespan countdown: 1. (0x80000534)
 >> Reverting instruction          :  80 09 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 0. Instruction: 00000366. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000054c
 >> Updated                     : 0x0000000080000550
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x1
 >> Updated instruction            :  ae a7 0f e3          	: movw sl, #0xf7ae
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x2
 >> Updated instruction            :  ad a7 0f e3          	: movw sl, #0xf7ad
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x4
 >> Updated instruction            :  ab a7 0f e3          	: movw sl, #0xf7ab
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x8
 >> Updated instruction            :  a7 a7 0f e3          	: movw sl, #0xf7a7
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x10
 >> Updated instruction            :  bf a7 0f e3          	: movw sl, #0xf7bf
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x20
 >> Updated instruction            :  8f a7 0f e3          	: movw sl, #0xf78f
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x40
 >> Updated instruction            :  ef a7 0f e3          	: movw sl, #0xf7ef
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x80
 >> Updated instruction            :  2f a7 0f e3          	: movw sl, #0xf72f
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x100
 >> Updated instruction            :  af a6 0f e3          	: movw sl, #0xf6af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x200
 >> Updated instruction            :  af a5 0f e3          	: movw sl, #0xf5af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x400
 >> Updated instruction            :  af a3 0f e3          	: movw sl, #0xf3af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x800
 >> Updated instruction            :  af af 0f e3          	: movw sl, #0xffaf
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x1000
 >> Updated instruction            :  af b7 0f e3          	: movw fp, #0xf7af
 >> Lifespan countdown: 2. (0x80000550)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000f76b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 367.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x2000
 >> Updated instruction            :  af 87 0f e3          	: movw r8, #0xf7af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x4000
 >> Updated instruction            :  af e7 0f e3          	: movw lr, #0xf7af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000054c. Hit: 1. Lifespan: 2. Instruction: 00000366. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  af a7 0f e3          	: movw sl, #0xf7af
 >> Mask                           :  0x8000
 >> Updated instruction            :  af 27 0f e3          	: movw r2, #0xf7af
 >> Lifespan countdown: 2. (0x80000550)
 >> Lifespan countdown: 1. (0x80000554)
 >> Reverting instruction          :  af a7 0f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 0. Instruction: 00000376. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000574
 >> Updated                     : 0x0000000080000578
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 c0 2c e0          	: eor ip, ip, r2
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 c0 2c e0          	: eor ip, ip, r1
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 c0 2c e0          	: eor ip, ip, r7
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b c0 2c e0          	: eor ip, ip, fp
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 c0 2c e0          	: eor ip, ip, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 c0 2c e0          	: eor ip, ip, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 c0 2c e0          	: eor ip, ip, r3, asr #32
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 c0 2c e0          	: eor ip, ip, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 c1 2c e0          	: eor ip, ip, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 c2 2c e0          	: eor ip, ip, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 c4 2c e0          	: eor ip, ip, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 c8 2c e0          	: eor ip, ip, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 d0 2c e0          	: eor sp, ip, r3
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 e0 2c e0          	: eor lr, ip, r3
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 80 2c e0          	: eor r8, ip, r3
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000574. Hit: 1. Lifespan: 2. Instruction: 00000376. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 c0 2c e0          	: eor ip, ip, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 40 2c e0          	: eor r4, ip, r3
 >> Lifespan countdown: 2. (0x80000578)
 >> Lifespan countdown: 1. (0x8000057c)
 >> Reverting instruction          :  03 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 0. Instruction: 00000382. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000058c
 >> Updated                     : 0x0000000080000590
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 8c e0          	: add ip, ip, sb
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 8c e0          	: add ip, ip, sl
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 8c e0          	: add ip, ip, ip
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 8c e0          	: add ip, ip, r0
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 8c e0          	: add ip, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 8c e0          	: add ip, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 8c e0          	: add ip, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 8c e0          	: add ip, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 8c e0          	: add ip, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 8c e0          	: add ip, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 8c e0          	: add ip, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 8c e0          	: add ip, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 8c e0          	: add sp, ip, r8
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 8c e0          	: add lr, ip, r8
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 8c e0          	: add r8, ip, r8
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000058c. Hit: 1. Lifespan: 2. Instruction: 00000382. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 8c e0          	: add r4, ip, r8
 >> Lifespan countdown: 2. (0x80000590)
 >> Lifespan countdown: 1. (0x80000594)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 0. Instruction: 00000390. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005ac
 >> Updated                     : 0x00000000800005b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 22 e0          	: eor r0, r2, r1
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 22 e0          	: eor r0, r2, r2
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 22 e0          	: eor r0, r2, r4
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 22 e0          	: eor r0, r2, r8
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 22 e0          	: eor r0, r2, r0, lsl r0
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 22 e0          	: eor r0, r2, r0, lsr #32
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 22 e0          	: eor r0, r2, r0, asr #32
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 22 e0          	: eor r0, r2, r0, lsl #1
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 22 e0          	: eor r0, r2, r0, lsl #2
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 22 e0          	: eor r0, r2, r0, lsl #4
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 22 e0          	: eor r0, r2, r0, lsl #8
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 22 e0          	: eor r0, r2, r0, lsl #16
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 22 e0          	: eor r1, r2, r0
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x777777d3, value: 0xaa49989b!! Count 397 Skipping to end.
 >> Run result: Fault errored program - last instruction: 396.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 22 e0          	: eor r2, r2, r0
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 22 e0          	: eor r4, r2, r0
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ac. Hit: 1. Lifespan: 2. Instruction: 00000390. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 22 e0          	: eor r0, r2, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 22 e0          	: eor r8, r2, r0
 >> Lifespan countdown: 2. (0x800005b0)
 >> Lifespan countdown: 1. (0x800005b4)
 >> Reverting instruction          :  00 00 22 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000077777783, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 0. Instruction: 00000398. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005cc
 >> Updated                     : 0x00000000800005d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 40 a0 e1          	: mov r4, pc
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 40 a0 e1          	: mov r4, ip
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 40 a0 e1          	: mov r4, sl
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 40 a0 e1          	: mov r4, r6
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 40 a0 e1          	: lsl r4, lr, r0
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 40 a0 e1          	: lsr r4, lr, #0x20
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 40 a0 e1          	: asr r4, lr, #0x20
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 40 a0 e1          	: lsl r4, lr, #1
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 41 a0 e1          	: lsl r4, lr, #2
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 42 a0 e1          	: lsl r4, lr, #4
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 44 a0 e1          	: lsl r4, lr, #8
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 48 a0 e1          	: lsl r4, lr, #0x10
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 50 a0 e1          	: mov r5, lr
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 60 a0 e1          	: mov r6, lr
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 00 a0 e1          	: mov r0, lr
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005cc. Hit: 1. Lifespan: 2. Instruction: 00000398. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e c0 a0 e1          	: mov ip, lr
 >> Lifespan countdown: 2. (0x800005d0)
 >> Lifespan countdown: 1. (0x800005d4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 0. Instruction: 00000406. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005ec
 >> Updated                     : 0x00000000800005f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 40 a0 e1          	: mov r4, pc
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 40 a0 e1          	: mov r4, ip
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 40 a0 e1          	: mov r4, sl
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 40 a0 e1          	: mov r4, r6
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 40 a0 e1          	: lsl r4, lr, r0
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 40 a0 e1          	: lsr r4, lr, #0x20
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 40 a0 e1          	: asr r4, lr, #0x20
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 40 a0 e1          	: lsl r4, lr, #1
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 41 a0 e1          	: lsl r4, lr, #2
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 42 a0 e1          	: lsl r4, lr, #4
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 44 a0 e1          	: lsl r4, lr, #8
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 48 a0 e1          	: lsl r4, lr, #0x10
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 50 a0 e1          	: mov r5, lr
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 60 a0 e1          	: mov r6, lr
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 00 a0 e1          	: mov r0, lr
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005ec. Hit: 1. Lifespan: 2. Instruction: 00000406. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 40 a0 e1          	: mov r4, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e c0 a0 e1          	: mov ip, lr
 >> Lifespan countdown: 2. (0x800005f0)
 >> Lifespan countdown: 1. (0x800005f4)
 >> Reverting instruction          :  0e 40 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 0. Instruction: 00000415. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000610
 >> Updated                     : 0x0000000080000614
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x1
 >> Updated instruction            :  51 60 0b e5          	: str r6, [fp, #-0x51]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x2
 >> Updated instruction            :  52 60 0b e5          	: str r6, [fp, #-0x52]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x4
 >> Updated instruction            :  54 60 0b e5          	: str r6, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x8
 >> Updated instruction            :  58 60 0b e5          	: str r6, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x10
 >> Updated instruction            :  40 60 0b e5          	: str r6, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x20
 >> Updated instruction            :  70 60 0b e5          	: str r6, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x40
 >> Updated instruction            :  10 60 0b e5          	: str r6, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x80
 >> Updated instruction            :  d0 60 0b e5          	: str r6, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x100
 >> Updated instruction            :  50 61 0b e5          	: str r6, [fp, #-0x150]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x200
 >> Updated instruction            :  50 62 0b e5          	: str r6, [fp, #-0x250]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x400
 >> Updated instruction            :  50 64 0b e5          	: str r6, [fp, #-0x450]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x800
 >> Updated instruction            :  50 68 0b e5          	: str r6, [fp, #-0x850]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x1000
 >> Updated instruction            :  50 70 0b e5          	: str r7, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x2000
 >> Updated instruction            :  50 40 0b e5          	: str r4, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x4000
 >> Updated instruction            :  50 20 0b e5          	: str r2, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000610. Hit: 1. Lifespan: 2. Instruction: 00000415. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 60 0b e5          	: str r6, [fp, #-0x50]
 >> Mask                           :  0x8000
 >> Updated instruction            :  50 e0 0b e5          	: str lr, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000614)
 >> Lifespan countdown: 1. (0x80000618)
 >> Reverting instruction          :  50 60 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 0. Instruction: 00000423. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000630
 >> Updated                     : 0x0000000080000634
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 10 81 e0          	: add r1, r1, pc
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 10 81 e0          	: add r1, r1, ip
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 10 81 e0          	: add r1, r1, sl
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 10 81 e0          	: add r1, r1, r6
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 10 81 e0          	: add r1, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 10 81 e0          	: add r1, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 10 81 e0          	: add r1, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 10 81 e0          	: add r1, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 11 81 e0          	: add r1, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 12 81 e0          	: add r1, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 14 81 e0          	: add r1, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 18 81 e0          	: add r1, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 00 81 e0          	: add r0, r1, lr
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 30 81 e0          	: add r3, r1, lr
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 50 81 e0          	: add r5, r1, lr
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000630. Hit: 1. Lifespan: 2. Instruction: 00000423. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 81 e0          	: add r1, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 90 81 e0          	: add sb, r1, lr
 >> Lifespan countdown: 2. (0x80000634)
 >> Lifespan countdown: 1. (0x80000638)
 >> Reverting instruction          :  0e 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 0. Instruction: 00000431. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000650
 >> Updated                     : 0x0000000080000654
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000008109818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 60 a0 e1          	: mov r6, sb
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 60 a0 e1          	: mov r6, sl
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008b44f7c3, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 60 a0 e1          	: mov r6, ip
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000068e83c7f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 60 a0 e1          	: mov r6, r0
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000051b88640, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 60 a0 e1          	: lsl r6, r8, r0
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 60 a0 e1          	: lsr r6, r8, #0x20
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 60 a0 e1          	: asr r6, r8, #0x20
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000013, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 60 a0 e1          	: lsl r6, r8, #1
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021ff04, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 61 a0 e1          	: lsl r6, r8, #2
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fdf4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 62 a0 e1          	: lsl r6, r8, #4
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff794, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 64 a0 e1          	: lsl r6, r8, #8
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff7814, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 68 a0 e1          	: lsl r6, r8, #0x10
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff780014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 70 a0 e1          	: mov r7, r8
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000008109818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 40 a0 e1          	: mov r4, r8
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000008109818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 20 a0 e1          	: mov r2, r8
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000008109818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000650. Hit: 1. Lifespan: 2. Instruction: 00000431. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 60 a0 e1          	: mov r6, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 e0 a0 e1          	: mov lr, r8
 >> Lifespan countdown: 2. (0x80000654)
 >> Lifespan countdown: 1. (0x80000658)
 >> Reverting instruction          :  08 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000008109818, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 436.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 0. Instruction: 00000438. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000066c
 >> Updated                     : 0x0000000080000670
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x1
 >> Updated instruction            :  81 50 1b e5          	: ldr r5, [fp, #-0x81]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x2
 >> Updated instruction            :  82 50 1b e5          	: ldr r5, [fp, #-0x82]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x4
 >> Updated instruction            :  84 50 1b e5          	: ldr r5, [fp, #-0x84]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x8
 >> Updated instruction            :  88 50 1b e5          	: ldr r5, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x10
 >> Updated instruction            :  90 50 1b e5          	: ldr r5, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x20
 >> Updated instruction            :  a0 50 1b e5          	: ldr r5, [fp, #-0xa0]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x40
 >> Updated instruction            :  c0 50 1b e5          	: ldr r5, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x80
 >> Updated instruction            :  00 50 1b e5          	: ldr r5, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x100
 >> Updated instruction            :  80 51 1b e5          	: ldr r5, [fp, #-0x180]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x200
 >> Updated instruction            :  80 52 1b e5          	: ldr r5, [fp, #-0x280]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x400
 >> Updated instruction            :  80 54 1b e5          	: ldr r5, [fp, #-0x480]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x800
 >> Updated instruction            :  80 58 1b e5          	: ldr r5, [fp, #-0x880]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x1000
 >> Updated instruction            :  80 40 1b e5          	: ldr r4, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x2000
 >> Updated instruction            :  80 70 1b e5          	: ldr r7, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x4000
 >> Updated instruction            :  80 10 1b e5          	: ldr r1, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000066c. Hit: 1. Lifespan: 2. Instruction: 00000438. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 50 1b e5          	: ldr r5, [fp, #-0x80]
 >> Mask                           :  0x8000
 >> Updated instruction            :  80 d0 1b e5          	: ldr sp, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x80000670)
 >> Lifespan countdown: 1. (0x80000674)
 >> Reverting instruction          :  80 50 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 0. Instruction: 00000446. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000068c
 >> Updated                     : 0x0000000080000690
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x1
 >> Updated instruction            :  6d 90 8e e5          	: str sb, [lr, #0x6d]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x2
 >> Updated instruction            :  6e 90 8e e5          	: str sb, [lr, #0x6e]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x4
 >> Updated instruction            :  68 90 8e e5          	: str sb, [lr, #0x68]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x8
 >> Updated instruction            :  64 90 8e e5          	: str sb, [lr, #0x64]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x10
 >> Updated instruction            :  7c 90 8e e5          	: str sb, [lr, #0x7c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x20
 >> Updated instruction            :  4c 90 8e e5          	: str sb, [lr, #0x4c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x40
 >> Updated instruction            :  2c 90 8e e5          	: str sb, [lr, #0x2c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ec 90 8e e5          	: str sb, [lr, #0xec]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011004c, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x100
 >> Updated instruction            :  6c 91 8e e5          	: str sb, [lr, #0x16c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100cc, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x200
 >> Updated instruction            :  6c 92 8e e5          	: str sb, [lr, #0x26c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101cc, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x400
 >> Updated instruction            :  6c 94 8e e5          	: str sb, [lr, #0x46c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103cc, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x800
 >> Updated instruction            :  6c 98 8e e5          	: str sb, [lr, #0x86c]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107cc, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c 80 8e e5          	: str r8, [lr, #0x6c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c b0 8e e5          	: str fp, [lr, #0x6c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c d0 8e e5          	: str sp, [lr, #0x6c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000068c. Hit: 1. Lifespan: 2. Instruction: 00000446. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c 90 8e e5          	: str sb, [lr, #0x6c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c 10 8e e5          	: str r1, [lr, #0x6c]
 >> Lifespan countdown: 2. (0x80000690)
 >> Lifespan countdown: 1. (0x80000694)
 >> Reverting instruction          :  6c 90 8e e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 0. Instruction: 00000452. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006a4
 >> Updated                     : 0x00000000800006a8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x1
 >> Updated instruction            :  55 70 0b e5          	: str r7, [fp, #-0x55]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x2
 >> Updated instruction            :  56 70 0b e5          	: str r7, [fp, #-0x56]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x4
 >> Updated instruction            :  50 70 0b e5          	: str r7, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x8
 >> Updated instruction            :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x10
 >> Updated instruction            :  44 70 0b e5          	: str r7, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x20
 >> Updated instruction            :  74 70 0b e5          	: str r7, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x40
 >> Updated instruction            :  14 70 0b e5          	: str r7, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x80
 >> Updated instruction            :  d4 70 0b e5          	: str r7, [fp, #-0xd4]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x100
 >> Updated instruction            :  54 71 0b e5          	: str r7, [fp, #-0x154]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x200
 >> Updated instruction            :  54 72 0b e5          	: str r7, [fp, #-0x254]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x400
 >> Updated instruction            :  54 74 0b e5          	: str r7, [fp, #-0x454]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x800
 >> Updated instruction            :  54 78 0b e5          	: str r7, [fp, #-0x854]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x1000
 >> Updated instruction            :  54 60 0b e5          	: str r6, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x2000
 >> Updated instruction            :  54 50 0b e5          	: str r5, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x4000
 >> Updated instruction            :  54 30 0b e5          	: str r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006a4. Hit: 1. Lifespan: 2. Instruction: 00000452. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Mask                           :  0x8000
 >> Updated instruction            :  54 f0 0b e5          	: str pc, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800006a8)
 >> Lifespan countdown: 1. (0x800006ac)
 >> Reverting instruction          :  54 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 0. Instruction: 00000463. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006d0
 >> Updated                     : 0x00000000800006d4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x1
 >> Updated instruction            :  5d 70 0b e5          	: str r7, [fp, #-0x5d]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x2
 >> Updated instruction            :  5e 70 0b e5          	: str r7, [fp, #-0x5e]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x4
 >> Updated instruction            :  58 70 0b e5          	: str r7, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x8
 >> Updated instruction            :  54 70 0b e5          	: str r7, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x10
 >> Updated instruction            :  4c 70 0b e5          	: str r7, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x20
 >> Updated instruction            :  7c 70 0b e5          	: str r7, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x40
 >> Updated instruction            :  1c 70 0b e5          	: str r7, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x84!! Count 1054 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1053.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x80
 >> Updated instruction            :  dc 70 0b e5          	: str r7, [fp, #-0xdc]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x100
 >> Updated instruction            :  5c 71 0b e5          	: str r7, [fp, #-0x15c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x200
 >> Updated instruction            :  5c 72 0b e5          	: str r7, [fp, #-0x25c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x400
 >> Updated instruction            :  5c 74 0b e5          	: str r7, [fp, #-0x45c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x800
 >> Updated instruction            :  5c 78 0b e5          	: str r7, [fp, #-0x85c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  5c 60 0b e5          	: str r6, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  5c 50 0b e5          	: str r5, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  5c 30 0b e5          	: str r3, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d0. Hit: 1. Lifespan: 2. Instruction: 00000463. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5c 70 0b e5          	: str r7, [fp, #-0x5c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  5c f0 0b e5          	: str pc, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x800006d4)
 >> Lifespan countdown: 1. (0x800006d8)
 >> Reverting instruction          :  5c 70 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 0. Instruction: 00000470. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006ec
 >> Updated                     : 0x00000000800006f0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x1
 >> Updated instruction            :  23 91 01 e3          	: movw sb, #0x1123
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x2
 >> Updated instruction            :  20 91 01 e3          	: movw sb, #0x1120
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x4
 >> Updated instruction            :  26 91 01 e3          	: movw sb, #0x1126
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 91 01 e3          	: movw sb, #0x112a
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x10
 >> Updated instruction            :  32 91 01 e3          	: movw sb, #0x1132
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x20
 >> Updated instruction            :  02 91 01 e3          	: movw sb, #0x1102
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x40
 >> Updated instruction            :  62 91 01 e3          	: movw sb, #0x1162
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 91 01 e3          	: movw sb, #0x11a2
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x100
 >> Updated instruction            :  22 90 01 e3          	: movw sb, #0x1022
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x200
 >> Updated instruction            :  22 93 01 e3          	: movw sb, #0x1322
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x400
 >> Updated instruction            :  22 95 01 e3          	: movw sb, #0x1522
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x800
 >> Updated instruction            :  22 99 01 e3          	: movw sb, #0x1922
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 81 01 e3          	: movw r8, #0x1122
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 b1 01 e3          	: movw fp, #0x1122
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000001096, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 476.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 d1 01 e3          	: movw sp, #0x1122
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006ec. Hit: 1. Lifespan: 2. Instruction: 00000470. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 91 01 e3          	: movw sb, #0x1122
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 11 01 e3          	: movw r1, #0x1122
 >> Lifespan countdown: 2. (0x800006f0)
 >> Lifespan countdown: 1. (0x800006f4)
 >> Reverting instruction          :  22 91 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 0. Instruction: 00000478. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000070c
 >> Updated                     : 0x0000000080000710
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x1
 >> Updated instruction            :  91 9b 46 e3          	: movt sb, #0x6b91
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x2
 >> Updated instruction            :  92 9b 46 e3          	: movt sb, #0x6b92
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x4
 >> Updated instruction            :  94 9b 46 e3          	: movt sb, #0x6b94
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x8
 >> Updated instruction            :  98 9b 46 e3          	: movt sb, #0x6b98
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x10
 >> Updated instruction            :  80 9b 46 e3          	: movt sb, #0x6b80
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x20
 >> Updated instruction            :  b0 9b 46 e3          	: movt sb, #0x6bb0
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x40
 >> Updated instruction            :  d0 9b 46 e3          	: movt sb, #0x6bd0
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x80
 >> Updated instruction            :  10 9b 46 e3          	: movt sb, #0x6b10
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x100
 >> Updated instruction            :  90 9a 46 e3          	: movt sb, #0x6a90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x200
 >> Updated instruction            :  90 99 46 e3          	: movt sb, #0x6990
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x400
 >> Updated instruction            :  90 9f 46 e3          	: movt sb, #0x6f90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x800
 >> Updated instruction            :  90 93 46 e3          	: movt sb, #0x6390
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x1000
 >> Updated instruction            :  90 8b 46 e3          	: movt r8, #0x6b90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x2000
 >> Updated instruction            :  90 bb 46 e3          	: movt fp, #0x6b90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b90feec, value: 0x0!! Count 481 Skipping to end.
 >> Run result: Fault errored program - last instruction: 480.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x4000
 >> Updated instruction            :  90 db 46 e3          	: movt sp, #0x6b90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000070c. Hit: 1. Lifespan: 2. Instruction: 00000478. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 9b 46 e3          	: movt sb, #0x6b90
 >> Mask                           :  0x8000
 >> Updated instruction            :  90 1b 46 e3          	: movt r1, #0x6b90
 >> Lifespan countdown: 2. (0x80000710)
 >> Lifespan countdown: 1. (0x80000714)
 >> Reverting instruction          :  90 9b 46 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 0. Instruction: 00000486. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000072c
 >> Updated                     : 0x0000000080000730
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000200e7e8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 20 1b e5          	: ldr r2, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78a4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 20 1b e5          	: ldr r2, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff788034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 20 1b e5          	: ldr r2, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 20 1b e5          	: ldr r2, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 20 1b e5          	: ldr r2, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 20 1b e5          	: ldr r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 20 1b e5          	: ldr r2, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452325, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 20 1b e5          	: ldr r2, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 21 1b e5          	: ldr r2, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 22 1b e5          	: ldr r2, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 24 1b e5          	: ldr r2, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 28 1b e5          	: ldr r2, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 30 1b e5          	: ldr r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000200e7e8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 00 1b e5          	: ldr r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000200e7e8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 60 1b e5          	: ldr r6, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000200e7e8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000072c. Hit: 1. Lifespan: 2. Instruction: 00000486. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 1b e5          	: ldr r2, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 a0 1b e5          	: ldr sl, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000730)
 >> Lifespan countdown: 1. (0x80000734)
 >> Reverting instruction          :  28 20 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000200e7e8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 0. Instruction: 00000493. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000748
 >> Updated                     : 0x000000008000074c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x1
 >> Updated instruction            :  25 80 92 e5          	: ldr r8, [r2, #0x25]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x2
 >> Updated instruction            :  26 80 92 e5          	: ldr r8, [r2, #0x26]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x4
 >> Updated instruction            :  20 80 92 e5          	: ldr r8, [r2, #0x20]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x8
 >> Updated instruction            :  2c 80 92 e5          	: ldr r8, [r2, #0x2c]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x10
 >> Updated instruction            :  34 80 92 e5          	: ldr r8, [r2, #0x34]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x20
 >> Updated instruction            :  04 80 92 e5          	: ldr r8, [r2, #4]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x40
 >> Updated instruction            :  64 80 92 e5          	: ldr r8, [r2, #0x64]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x80
 >> Updated instruction            :  a4 80 92 e5          	: ldr r8, [r2, #0xa4]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011001c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x100
 >> Updated instruction            :  24 81 92 e5          	: ldr r8, [r2, #0x124]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011009c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x200
 >> Updated instruction            :  24 82 92 e5          	: ldr r8, [r2, #0x224]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011019c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x400
 >> Updated instruction            :  24 84 92 e5          	: ldr r8, [r2, #0x424]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011039c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x800
 >> Updated instruction            :  24 88 92 e5          	: ldr r8, [r2, #0x824]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011079c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 493.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x1000
 >> Updated instruction            :  24 90 92 e5          	: ldr sb, [r2, #0x24]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x2000
 >> Updated instruction            :  24 a0 92 e5          	: ldr sl, [r2, #0x24]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x4000
 >> Updated instruction            :  24 c0 92 e5          	: ldr ip, [r2, #0x24]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000748. Hit: 1. Lifespan: 2. Instruction: 00000493. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 80 92 e5          	: ldr r8, [r2, #0x24]
 >> Mask                           :  0x8000
 >> Updated instruction            :  24 00 92 e5          	: ldr r0, [r2, #0x24]
 >> Lifespan countdown: 2. (0x8000074c)
 >> Lifespan countdown: 1. (0x80000750)
 >> Reverting instruction          :  24 80 92 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 0. Instruction: 00000501. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000768
 >> Updated                     : 0x000000008000076c
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 a0 e1          	: mov r8, r0
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2ace844, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 a0 e1          	: mov r8, r3
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 a0 e1          	: mov r8, r5
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xadce840, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 a0 e1          	: mov r8, sb
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011a2, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 a0 e1          	: lsl r8, r1, r0
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 a0 e1          	: lsr r8, r1, #0x20
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 a0 e1          	: asr r8, r1, #0x20
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 a0 e1          	: lsl r8, r1, #1
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21ff40, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 a0 e1          	: lsl r8, r1, #2
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fe00, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 a0 e1          	: lsl r8, r1, #4
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff680, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 a0 e1          	: lsl r8, r1, #8
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6080, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 a0 e1          	: lsl r8, r1, #0x10
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600080, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 a0 e1          	: mov sb, r1
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 a0 e1          	: mov sl, r1
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 a0 e1          	: mov ip, r1
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000768. Hit: 1. Lifespan: 2. Instruction: 00000501. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 a0 e1          	: mov r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 a0 e1          	: mov r0, r1
 >> Lifespan countdown: 2. (0x8000076c)
 >> Lifespan countdown: 1. (0x80000770)
 >> Reverting instruction          :  01 80 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 0. Instruction: 00000508. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000784
 >> Updated                     : 0x0000000080000788
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 20 91 e5          	: ldr r2, [r1, #0x29]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 20 91 e5          	: ldr r2, [r1, #0x2a]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 20 91 e5          	: ldr r2, [r1, #0x2c]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 20 91 e5          	: ldr r2, [r1, #0x20]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 20 91 e5          	: ldr r2, [r1, #0x38]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 20 91 e5          	: ldr r2, [r1, #8]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 20 91 e5          	: ldr r2, [r1, #0x68]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 20 91 e5          	: ldr r2, [r1, #0xa8]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 21 91 e5          	: ldr r2, [r1, #0x128]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801100a0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 22 91 e5          	: ldr r2, [r1, #0x228]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801101a0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 24 91 e5          	: ldr r2, [r1, #0x428]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801103a0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 28 91 e5          	: ldr r2, [r1, #0x828]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000801107a0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 30 91 e5          	: ldr r3, [r1, #0x28]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 00 91 e5          	: ldr r0, [r1, #0x28]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 60 91 e5          	: ldr r6, [r1, #0x28]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000784. Hit: 1. Lifespan: 2. Instruction: 00000508. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 20 91 e5          	: ldr r2, [r1, #0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 a0 91 e5          	: ldr sl, [r1, #0x28]
 >> Lifespan countdown: 2. (0x80000788)
 >> Lifespan countdown: 1. (0x8000078c)
 >> Reverting instruction          :  28 20 91 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 0. Instruction: 00000515. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007a0
 >> Updated                     : 0x00000000800007a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 82 e0          	: add r5, r2, r4
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 82 e0          	: add r5, r2, r7
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 82 e0          	: add r5, r2, r1
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 82 e0          	: add r5, r2, sp
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 82 e0          	: add r5, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 82 e0          	: add r5, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 82 e0          	: add r5, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 82 e0          	: add r5, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 82 e0          	: add r5, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 82 e0          	: add r5, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 82 e0          	: add r5, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 82 e0          	: add r5, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 82 e0          	: add r4, r2, r5
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 82 e0          	: add r7, r2, r5
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 82 e0          	: add r1, r2, r5
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007a0. Hit: 1. Lifespan: 2. Instruction: 00000515. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 82 e0          	: add r5, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 82 e0          	: add sp, r2, r5
 >> Lifespan countdown: 2. (0x800007a4)
 >> Lifespan countdown: 1. (0x800007a8)
 >> Reverting instruction          :  05 50 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 0. Instruction: 00000521. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007b8
 >> Updated                     : 0x00000000800007bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x1
 >> Updated instruction            :  91 60 1b e5          	: ldr r6, [fp, #-0x91]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x2
 >> Updated instruction            :  92 60 1b e5          	: ldr r6, [fp, #-0x92]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x4
 >> Updated instruction            :  94 60 1b e5          	: ldr r6, [fp, #-0x94]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x8
 >> Updated instruction            :  98 60 1b e5          	: ldr r6, [fp, #-0x98]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x10
 >> Updated instruction            :  80 60 1b e5          	: ldr r6, [fp, #-0x80]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x20
 >> Updated instruction            :  b0 60 1b e5          	: ldr r6, [fp, #-0xb0]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x40
 >> Updated instruction            :  d0 60 1b e5          	: ldr r6, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x80
 >> Updated instruction            :  10 60 1b e5          	: ldr r6, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x100
 >> Updated instruction            :  90 61 1b e5          	: ldr r6, [fp, #-0x190]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x200
 >> Updated instruction            :  90 62 1b e5          	: ldr r6, [fp, #-0x290]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x400
 >> Updated instruction            :  90 64 1b e5          	: ldr r6, [fp, #-0x490]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x800
 >> Updated instruction            :  90 68 1b e5          	: ldr r6, [fp, #-0x890]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x1000
 >> Updated instruction            :  90 70 1b e5          	: ldr r7, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x2000
 >> Updated instruction            :  90 40 1b e5          	: ldr r4, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x4000
 >> Updated instruction            :  90 20 1b e5          	: ldr r2, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007b8. Hit: 1. Lifespan: 2. Instruction: 00000521. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  90 60 1b e5          	: ldr r6, [fp, #-0x90]
 >> Mask                           :  0x8000
 >> Updated instruction            :  90 e0 1b e5          	: ldr lr, [fp, #-0x90]
 >> Lifespan countdown: 2. (0x800007bc)
 >> Lifespan countdown: 1. (0x800007c0)
 >> Reverting instruction          :  90 60 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 0. Instruction: 00000532. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007e4
 >> Updated                     : 0x00000000800007e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x1
 >> Updated instruction            :  60 15 82 e0          	: add r1, r2, r0, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x2
 >> Updated instruction            :  63 15 82 e0          	: add r1, r2, r3, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x4
 >> Updated instruction            :  65 15 82 e0          	: add r1, r2, r5, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x8
 >> Updated instruction            :  69 15 82 e0          	: add r1, r2, sb, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x10
 >> Updated instruction            :  71 15 82 e0          	: add r1, r2, r1, ror r5
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x20
 >> Updated instruction            :  41 15 82 e0          	: add r1, r2, r1, asr #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x40
 >> Updated instruction            :  21 15 82 e0          	: add r1, r2, r1, lsr #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x80
 >> Updated instruction            :  e1 15 82 e0          	: add r1, r2, r1, ror #11
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x100
 >> Updated instruction            :  61 14 82 e0          	: add r1, r2, r1, ror #8
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x200
 >> Updated instruction            :  61 17 82 e0          	: add r1, r2, r1, ror #14
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x400
 >> Updated instruction            :  61 11 82 e0          	: add r1, r2, r1, ror #2
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x800
 >> Updated instruction            :  61 1d 82 e0          	: add r1, r2, r1, ror #26
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x1000
 >> Updated instruction            :  61 05 82 e0          	: add r0, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x2000
 >> Updated instruction            :  61 35 82 e0          	: add r3, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x4000
 >> Updated instruction            :  61 55 82 e0          	: add r5, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007e4. Hit: 1. Lifespan: 2. Instruction: 00000532. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 15 82 e0          	: add r1, r2, r1, ror #10
 >> Mask                           :  0x8000
 >> Updated instruction            :  61 95 82 e0          	: add sb, r2, r1, ror #10
 >> Lifespan countdown: 2. (0x800007e8)
 >> Lifespan countdown: 1. (0x800007ec)
 >> Reverting instruction          :  61 15 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 0. Instruction: 00000537. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007f8
 >> Updated                     : 0x00000000800007fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x1
 >> Updated instruction            :  b5 89 44 e3          	: movt r8, #0x49b5
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x2
 >> Updated instruction            :  b6 89 44 e3          	: movt r8, #0x49b6
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x4
 >> Updated instruction            :  b0 89 44 e3          	: movt r8, #0x49b0
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x8
 >> Updated instruction            :  bc 89 44 e3          	: movt r8, #0x49bc
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x10
 >> Updated instruction            :  a4 89 44 e3          	: movt r8, #0x49a4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x20
 >> Updated instruction            :  94 89 44 e3          	: movt r8, #0x4994
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x40
 >> Updated instruction            :  f4 89 44 e3          	: movt r8, #0x49f4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x80
 >> Updated instruction            :  34 89 44 e3          	: movt r8, #0x4934
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x100
 >> Updated instruction            :  b4 88 44 e3          	: movt r8, #0x48b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x200
 >> Updated instruction            :  b4 8b 44 e3          	: movt r8, #0x4bb4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x400
 >> Updated instruction            :  b4 8d 44 e3          	: movt r8, #0x4db4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x800
 >> Updated instruction            :  b4 81 44 e3          	: movt r8, #0x41b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x1000
 >> Updated instruction            :  b4 99 44 e3          	: movt sb, #0x49b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x2000
 >> Updated instruction            :  b4 a9 44 e3          	: movt sl, #0x49b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x4000
 >> Updated instruction            :  b4 c9 44 e3          	: movt ip, #0x49b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f8. Hit: 1. Lifespan: 2. Instruction: 00000537. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b4 89 44 e3          	: movt r8, #0x49b4
 >> Mask                           :  0x8000
 >> Updated instruction            :  b4 09 44 e3          	: movt r0, #0x49b4
 >> Lifespan countdown: 2. (0x800007fc)
 >> Lifespan countdown: 1. (0x80000800)
 >> Reverting instruction          :  b4 89 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 0. Instruction: 00000544. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000814
 >> Updated                     : 0x0000000080000818
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006602733a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 c0 1b e5          	: ldr ip, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78b4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a c0 1b e5          	: ldr ip, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff788044, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c c0 1b e5          	: ldr ip, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 c0 1b e5          	: ldr ip, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 c0 1b e5          	: ldr ip, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 c0 1b e5          	: ldr ip, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 c0 1b e5          	: ldr ip, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452335, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 c0 1b e5          	: ldr ip, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 c1 1b e5          	: ldr ip, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 c2 1b e5          	: ldr ip, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 c4 1b e5          	: ldr ip, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 c8 1b e5          	: ldr ip, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000034, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 d0 1b e5          	: ldr sp, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006602733a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006602733a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 80 1b e5          	: ldr r8, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006602733a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000814. Hit: 1. Lifespan: 2. Instruction: 00000544. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 40 1b e5          	: ldr r4, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000818)
 >> Lifespan countdown: 1. (0x8000081c)
 >> Reverting instruction          :  28 c0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000006602733a, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 547.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 0. Instruction: 00000552. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000834
 >> Updated                     : 0x0000000080000838
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 c0 2c e0          	: eor ip, ip, r3
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 c0 2c e0          	: eor ip, ip, r0
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 c0 2c e0          	: eor ip, ip, r6
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a c0 2c e0          	: eor ip, ip, sl
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 c0 2c e0          	: eor ip, ip, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 c0 2c e0          	: eor ip, ip, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 c0 2c e0          	: eor ip, ip, r2, asr #32
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 c0 2c e0          	: eor ip, ip, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 c1 2c e0          	: eor ip, ip, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 c2 2c e0          	: eor ip, ip, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 c4 2c e0          	: eor ip, ip, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 c8 2c e0          	: eor ip, ip, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 d0 2c e0          	: eor sp, ip, r2
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 e0 2c e0          	: eor lr, ip, r2
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 80 2c e0          	: eor r8, ip, r2
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000834. Hit: 1. Lifespan: 2. Instruction: 00000552. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 c0 2c e0          	: eor ip, ip, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 40 2c e0          	: eor r4, ip, r2
 >> Lifespan countdown: 2. (0x80000838)
 >> Lifespan countdown: 1. (0x8000083c)
 >> Reverting instruction          :  02 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 0. Instruction: 00000560. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000854
 >> Updated                     : 0x0000000080000858
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f c0 21 e0          	: eor ip, r1, pc
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c c0 21 e0          	: eor ip, r1, ip
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a c0 21 e0          	: eor ip, r1, sl
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 c0 21 e0          	: eor ip, r1, r6
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e c0 21 e0          	: eor ip, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e c0 21 e0          	: eor ip, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e c0 21 e0          	: eor ip, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e c0 21 e0          	: eor ip, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e c1 21 e0          	: eor ip, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e c2 21 e0          	: eor ip, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e c4 21 e0          	: eor ip, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e c8 21 e0          	: eor ip, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e d0 21 e0          	: eor sp, r1, lr
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e e0 21 e0          	: eor lr, r1, lr
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 80 21 e0          	: eor r8, r1, lr
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000854. Hit: 1. Lifespan: 2. Instruction: 00000560. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e c0 21 e0          	: eor ip, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 40 21 e0          	: eor r4, r1, lr
 >> Lifespan countdown: 2. (0x80000858)
 >> Lifespan countdown: 1. (0x8000085c)
 >> Reverting instruction          :  0e c0 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 0. Instruction: 00000570. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000087c
 >> Updated                     : 0x0000000080000880
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 50 85 e0          	: add r5, r5, r0
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 50 85 e0          	: add r5, r5, r6
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 50 85 e0          	: add r5, r5, sl
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 50 85 e0          	: add r5, r5, r2, lsl r0
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 50 85 e0          	: add r5, r5, r2, lsr #32
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 50 85 e0          	: add r5, r5, r2, asr #32
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 50 85 e0          	: add r5, r5, r2, lsl #1
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 51 85 e0          	: add r5, r5, r2, lsl #2
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 52 85 e0          	: add r5, r5, r2, lsl #4
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 54 85 e0          	: add r5, r5, r2, lsl #8
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 58 85 e0          	: add r5, r5, r2, lsl #16
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 40 85 e0          	: add r4, r5, r2
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 70 85 e0          	: add r7, r5, r2
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 10 85 e0          	: add r1, r5, r2
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000087c. Hit: 1. Lifespan: 2. Instruction: 00000570. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 85 e0          	: add r5, r5, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 d0 85 e0          	: add sp, r5, r2
 >> Lifespan countdown: 2. (0x80000880)
 >> Lifespan countdown: 1. (0x80000884)
 >> Reverting instruction          :  02 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 0. Instruction: 00000582. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008ac
 >> Updated                     : 0x00000000800008b0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x1
 >> Updated instruction            :  63 95 02 e3          	: movw sb, #0x2563
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x2
 >> Updated instruction            :  60 95 02 e3          	: movw sb, #0x2560
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x4
 >> Updated instruction            :  66 95 02 e3          	: movw sb, #0x2566
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x8
 >> Updated instruction            :  6a 95 02 e3          	: movw sb, #0x256a
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x10
 >> Updated instruction            :  72 95 02 e3          	: movw sb, #0x2572
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x20
 >> Updated instruction            :  42 95 02 e3          	: movw sb, #0x2542
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x40
 >> Updated instruction            :  22 95 02 e3          	: movw sb, #0x2522
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x80
 >> Updated instruction            :  e2 95 02 e3          	: movw sb, #0x25e2
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x100
 >> Updated instruction            :  62 94 02 e3          	: movw sb, #0x2462
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x200
 >> Updated instruction            :  62 97 02 e3          	: movw sb, #0x2762
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x400
 >> Updated instruction            :  62 91 02 e3          	: movw sb, #0x2162
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x800
 >> Updated instruction            :  62 9d 02 e3          	: movw sb, #0x2d62
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x1000
 >> Updated instruction            :  62 85 02 e3          	: movw r8, #0x2562
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x2000
 >> Updated instruction            :  62 b5 02 e3          	: movw fp, #0x2562
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000002506, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 589.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x4000
 >> Updated instruction            :  62 d5 02 e3          	: movw sp, #0x2562
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008ac. Hit: 1. Lifespan: 2. Instruction: 00000582. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  62 95 02 e3          	: movw sb, #0x2562
 >> Mask                           :  0x8000
 >> Updated instruction            :  62 15 02 e3          	: movw r1, #0x2562
 >> Lifespan countdown: 2. (0x800008b0)
 >> Lifespan countdown: 1. (0x800008b4)
 >> Reverting instruction          :  62 95 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 0. Instruction: 00000586. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008bc
 >> Updated                     : 0x00000000800008c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 25 e0          	: eor r8, r5, r0
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 25 e0          	: eor r8, r5, r3
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 25 e0          	: eor r8, r5, r5
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 25 e0          	: eor r8, r5, sb
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 25 e0          	: eor r8, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 25 e0          	: eor r8, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 25 e0          	: eor r8, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 25 e0          	: eor r8, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 25 e0          	: eor r8, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 25 e0          	: eor r8, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 25 e0          	: eor r8, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 25 e0          	: eor r8, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 25 e0          	: eor sb, r5, r1
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 25 e0          	: eor sl, r5, r1
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 25 e0          	: eor ip, r5, r1
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008bc. Hit: 1. Lifespan: 2. Instruction: 00000586. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 25 e0          	: eor r8, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 25 e0          	: eor r0, r5, r1
 >> Lifespan countdown: 2. (0x800008c0)
 >> Lifespan countdown: 1. (0x800008c4)
 >> Reverting instruction          :  01 80 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 0. Instruction: 00000595. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008e0
 >> Updated                     : 0x00000000800008e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x1
 >> Updated instruction            :  50 aa 05 e3          	: movw sl, #0x5a50
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x2
 >> Updated instruction            :  53 aa 05 e3          	: movw sl, #0x5a53
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x4
 >> Updated instruction            :  55 aa 05 e3          	: movw sl, #0x5a55
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x8
 >> Updated instruction            :  59 aa 05 e3          	: movw sl, #0x5a59
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x10
 >> Updated instruction            :  41 aa 05 e3          	: movw sl, #0x5a41
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x20
 >> Updated instruction            :  71 aa 05 e3          	: movw sl, #0x5a71
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x40
 >> Updated instruction            :  11 aa 05 e3          	: movw sl, #0x5a11
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x80
 >> Updated instruction            :  d1 aa 05 e3          	: movw sl, #0x5ad1
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x100
 >> Updated instruction            :  51 ab 05 e3          	: movw sl, #0x5b51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x200
 >> Updated instruction            :  51 a8 05 e3          	: movw sl, #0x5851
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x400
 >> Updated instruction            :  51 ae 05 e3          	: movw sl, #0x5e51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x800
 >> Updated instruction            :  51 a2 05 e3          	: movw sl, #0x5251
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x1000
 >> Updated instruction            :  51 ba 05 e3          	: movw fp, #0x5a51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000005a19, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 598.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x2000
 >> Updated instruction            :  51 8a 05 e3          	: movw r8, #0x5a51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x4000
 >> Updated instruction            :  51 ea 05 e3          	: movw lr, #0x5a51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008e0. Hit: 1. Lifespan: 2. Instruction: 00000595. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  51 aa 05 e3          	: movw sl, #0x5a51
 >> Mask                           :  0x8000
 >> Updated instruction            :  51 2a 05 e3          	: movw r2, #0x5a51
 >> Lifespan countdown: 2. (0x800008e4)
 >> Lifespan countdown: 1. (0x800008e8)
 >> Reverting instruction          :  51 aa 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 0. Instruction: 00000603. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000900
 >> Updated                     : 0x0000000080000904
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 c0 2c e0          	: eor ip, ip, r0
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 c0 2c e0          	: eor ip, ip, r3
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 c0 2c e0          	: eor ip, ip, r5
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 c0 2c e0          	: eor ip, ip, sb
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 c0 2c e0          	: eor ip, ip, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 c0 2c e0          	: eor ip, ip, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 c0 2c e0          	: eor ip, ip, r1, asr #32
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 c0 2c e0          	: eor ip, ip, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 c1 2c e0          	: eor ip, ip, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 c2 2c e0          	: eor ip, ip, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 c4 2c e0          	: eor ip, ip, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 c8 2c e0          	: eor ip, ip, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 d0 2c e0          	: eor sp, ip, r1
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 e0 2c e0          	: eor lr, ip, r1
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 80 2c e0          	: eor r8, ip, r1
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000900. Hit: 1. Lifespan: 2. Instruction: 00000603. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 2c e0          	: eor ip, ip, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 40 2c e0          	: eor r4, ip, r1
 >> Lifespan countdown: 2. (0x80000904)
 >> Lifespan countdown: 1. (0x80000908)
 >> Reverting instruction          :  01 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 0. Instruction: 00000612. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000924
 >> Updated                     : 0x0000000080000928
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x1
 >> Updated instruction            :  95 20 80 e5          	: str r2, [r0, #0x95]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x2
 >> Updated instruction            :  96 20 80 e5          	: str r2, [r0, #0x96]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x4
 >> Updated instruction            :  90 20 80 e5          	: str r2, [r0, #0x90]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x8
 >> Updated instruction            :  9c 20 80 e5          	: str r2, [r0, #0x9c]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x10
 >> Updated instruction            :  84 20 80 e5          	: str r2, [r0, #0x84]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x20
 >> Updated instruction            :  b4 20 80 e5          	: str r2, [r0, #0xb4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110014, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x40
 >> Updated instruction            :  d4 20 80 e5          	: str r2, [r0, #0xd4]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110034, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x80
 >> Updated instruction            :  14 20 80 e5          	: str r2, [r0, #0x14]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x100
 >> Updated instruction            :  94 21 80 e5          	: str r2, [r0, #0x194]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100f4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x200
 >> Updated instruction            :  94 22 80 e5          	: str r2, [r0, #0x294]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101f4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x400
 >> Updated instruction            :  94 24 80 e5          	: str r2, [r0, #0x494]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103f4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x800
 >> Updated instruction            :  94 28 80 e5          	: str r2, [r0, #0x894]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107f4, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x1000
 >> Updated instruction            :  94 30 80 e5          	: str r3, [r0, #0x94]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x2000
 >> Updated instruction            :  94 00 80 e5          	: str r0, [r0, #0x94]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x4000
 >> Updated instruction            :  94 60 80 e5          	: str r6, [r0, #0x94]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000924. Hit: 1. Lifespan: 2. Instruction: 00000612. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  94 20 80 e5          	: str r2, [r0, #0x94]
 >> Mask                           :  0x8000
 >> Updated instruction            :  94 a0 80 e5          	: str sl, [r0, #0x94]
 >> Lifespan countdown: 2. (0x80000928)
 >> Lifespan countdown: 1. (0x8000092c)
 >> Reverting instruction          :  94 20 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 0. Instruction: 00000620. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000944
 >> Updated                     : 0x0000000080000948
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x1
 >> Updated instruction            :  61 10 1b e5          	: ldr r1, [fp, #-0x61]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x2
 >> Updated instruction            :  62 10 1b e5          	: ldr r1, [fp, #-0x62]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x4
 >> Updated instruction            :  64 10 1b e5          	: ldr r1, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x8
 >> Updated instruction            :  68 10 1b e5          	: ldr r1, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x10
 >> Updated instruction            :  70 10 1b e5          	: ldr r1, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x20
 >> Updated instruction            :  40 10 1b e5          	: ldr r1, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x40
 >> Updated instruction            :  20 10 1b e5          	: ldr r1, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x80
 >> Updated instruction            :  e0 10 1b e5          	: ldr r1, [fp, #-0xe0]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x100
 >> Updated instruction            :  60 11 1b e5          	: ldr r1, [fp, #-0x160]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x200
 >> Updated instruction            :  60 12 1b e5          	: ldr r1, [fp, #-0x260]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x400
 >> Updated instruction            :  60 14 1b e5          	: ldr r1, [fp, #-0x460]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x800
 >> Updated instruction            :  60 18 1b e5          	: ldr r1, [fp, #-0x860]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x1000
 >> Updated instruction            :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x2000
 >> Updated instruction            :  60 30 1b e5          	: ldr r3, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x4000
 >> Updated instruction            :  60 50 1b e5          	: ldr r5, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000944. Hit: 1. Lifespan: 2. Instruction: 00000620. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  60 10 1b e5          	: ldr r1, [fp, #-0x60]
 >> Mask                           :  0x8000
 >> Updated instruction            :  60 90 1b e5          	: ldr sb, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000948)
 >> Lifespan countdown: 1. (0x8000094c)
 >> Reverting instruction          :  60 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 0. Instruction: 00000629. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000968
 >> Updated                     : 0x000000008000096c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 90 09 e0          	: and sb, sb, r0
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 90 09 e0          	: and sb, sb, r3
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 90 09 e0          	: and sb, sb, r5
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 90 09 e0          	: and sb, sb, sb
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 90 09 e0          	: and sb, sb, r1, lsl r0
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 90 09 e0          	: and sb, sb, r1, lsr #32
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 90 09 e0          	: and sb, sb, r1, asr #32
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 90 09 e0          	: and sb, sb, r1, lsl #1
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 91 09 e0          	: and sb, sb, r1, lsl #2
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 92 09 e0          	: and sb, sb, r1, lsl #4
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 94 09 e0          	: and sb, sb, r1, lsl #8
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 98 09 e0          	: and sb, sb, r1, lsl #16
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 80 09 e0          	: and r8, sb, r1
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 b0 09 e0          	: and fp, sb, r1
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000036240234, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 d0 09 e0          	: and sp, sb, r1
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000968. Hit: 1. Lifespan: 2. Instruction: 00000629. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 90 09 e0          	: and sb, sb, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 10 09 e0          	: and r1, sb, r1
 >> Lifespan countdown: 2. (0x8000096c)
 >> Lifespan countdown: 1. (0x80000970)
 >> Reverting instruction          :  01 90 09 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 0. Instruction: 00000636. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000984
 >> Updated                     : 0x0000000080000988
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x1
 >> Updated instruction            :  e7 9d 0c e3          	: movw sb, #0xcde7
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x2
 >> Updated instruction            :  e4 9d 0c e3          	: movw sb, #0xcde4
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x4
 >> Updated instruction            :  e2 9d 0c e3          	: movw sb, #0xcde2
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x8
 >> Updated instruction            :  ee 9d 0c e3          	: movw sb, #0xcdee
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x10
 >> Updated instruction            :  f6 9d 0c e3          	: movw sb, #0xcdf6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x20
 >> Updated instruction            :  c6 9d 0c e3          	: movw sb, #0xcdc6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x40
 >> Updated instruction            :  a6 9d 0c e3          	: movw sb, #0xcda6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x80
 >> Updated instruction            :  66 9d 0c e3          	: movw sb, #0xcd66
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x100
 >> Updated instruction            :  e6 9c 0c e3          	: movw sb, #0xcce6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x200
 >> Updated instruction            :  e6 9f 0c e3          	: movw sb, #0xcfe6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x400
 >> Updated instruction            :  e6 99 0c e3          	: movw sb, #0xc9e6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x800
 >> Updated instruction            :  e6 95 0c e3          	: movw sb, #0xc5e6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x1000
 >> Updated instruction            :  e6 8d 0c e3          	: movw r8, #0xcde6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x2000
 >> Updated instruction            :  e6 bd 0c e3          	: movw fp, #0xcde6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000cd92, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x4000
 >> Updated instruction            :  e6 dd 0c e3          	: movw sp, #0xcde6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000984. Hit: 1. Lifespan: 2. Instruction: 00000636. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e6 9d 0c e3          	: movw sb, #0xcde6
 >> Mask                           :  0x8000
 >> Updated instruction            :  e6 1d 0c e3          	: movw r1, #0xcde6
 >> Lifespan countdown: 2. (0x80000988)
 >> Lifespan countdown: 1. (0x8000098c)
 >> Reverting instruction          :  e6 9d 0c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 0. Instruction: 00000643. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009a0
 >> Updated                     : 0x00000000800009a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 10 21 e0          	: eor r1, r1, sb
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 10 21 e0          	: eor r1, r1, sl
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 10 21 e0          	: eor r1, r1, ip
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 10 21 e0          	: eor r1, r1, r0
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 10 21 e0          	: eor r1, r1, r8, lsl r0
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 10 21 e0          	: eor r1, r1, r8, lsr #32
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 10 21 e0          	: eor r1, r1, r8, asr #32
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 10 21 e0          	: eor r1, r1, r8, lsl #1
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 11 21 e0          	: eor r1, r1, r8, lsl #2
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 12 21 e0          	: eor r1, r1, r8, lsl #4
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 14 21 e0          	: eor r1, r1, r8, lsl #8
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 18 21 e0          	: eor r1, r1, r8, lsl #16
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 00 21 e0          	: eor r0, r1, r8
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 30 21 e0          	: eor r3, r1, r8
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 50 21 e0          	: eor r5, r1, r8
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009a0. Hit: 1. Lifespan: 2. Instruction: 00000643. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 10 21 e0          	: eor r1, r1, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 90 21 e0          	: eor sb, r1, r8
 >> Lifespan countdown: 2. (0x800009a4)
 >> Lifespan countdown: 1. (0x800009a8)
 >> Reverting instruction          :  08 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 0. Instruction: 00000649. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009b8
 >> Updated                     : 0x00000000800009bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 10 2e e0          	: eor r1, lr, r4
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 10 2e e0          	: eor r1, lr, r7
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 10 2e e0          	: eor r1, lr, r1
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 10 2e e0          	: eor r1, lr, sp
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 10 2e e0          	: eor r1, lr, r5, lsl r0
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 10 2e e0          	: eor r1, lr, r5, lsr #32
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 10 2e e0          	: eor r1, lr, r5, asr #32
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 10 2e e0          	: eor r1, lr, r5, lsl #1
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 11 2e e0          	: eor r1, lr, r5, lsl #2
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 12 2e e0          	: eor r1, lr, r5, lsl #4
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 14 2e e0          	: eor r1, lr, r5, lsl #8
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 18 2e e0          	: eor r1, lr, r5, lsl #16
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 00 2e e0          	: eor r0, lr, r5
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 30 2e e0          	: eor r3, lr, r5
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 50 2e e0          	: eor r5, lr, r5
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009b8. Hit: 1. Lifespan: 2. Instruction: 00000649. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 2e e0          	: eor r1, lr, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 90 2e e0          	: eor sb, lr, r5
 >> Lifespan countdown: 2. (0x800009bc)
 >> Lifespan countdown: 1. (0x800009c0)
 >> Reverting instruction          :  05 10 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 0. Instruction: 00000659. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009e0
 >> Updated                     : 0x00000000800009e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 10 01 e0          	: and r1, r1, pc
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 10 01 e0          	: and r1, r1, ip
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 10 01 e0          	: and r1, r1, sl
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 10 01 e0          	: and r1, r1, r6
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 10 01 e0          	: and r1, r1, lr, lsl r0
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 10 01 e0          	: and r1, r1, lr, lsr #32
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 10 01 e0          	: and r1, r1, lr, asr #32
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 10 01 e0          	: and r1, r1, lr, lsl #1
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 11 01 e0          	: and r1, r1, lr, lsl #2
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 12 01 e0          	: and r1, r1, lr, lsl #4
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 14 01 e0          	: and r1, r1, lr, lsl #8
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 18 01 e0          	: and r1, r1, lr, lsl #16
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 00 01 e0          	: and r0, r1, lr
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 30 01 e0          	: and r3, r1, lr
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 50 01 e0          	: and r5, r1, lr
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009e0. Hit: 1. Lifespan: 2. Instruction: 00000659. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 10 01 e0          	: and r1, r1, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 90 01 e0          	: and sb, r1, lr
 >> Lifespan countdown: 2. (0x800009e4)
 >> Lifespan countdown: 1. (0x800009e8)
 >> Reverting instruction          :  0e 10 01 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 0. Instruction: 00000665. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009f8
 >> Updated                     : 0x00000000800009fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 8e e0          	: add lr, lr, r1
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 8e e0          	: add lr, lr, r2
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 8e e0          	: add lr, lr, r4
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 8e e0          	: add lr, lr, r8
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 8e e0          	: add lr, lr, r0, lsl r0
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 8e e0          	: add lr, lr, r0, lsr #32
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 8e e0          	: add lr, lr, r0, asr #32
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 8e e0          	: add lr, lr, r0, lsl #1
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 8e e0          	: add lr, lr, r0, lsl #2
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 8e e0          	: add lr, lr, r0, lsl #4
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 8e e0          	: add lr, lr, r0, lsl #8
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 8e e0          	: add lr, lr, r0, lsl #16
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 8e e0          	: add pc, lr, r0
 >!  Erm -  fetching from unmapped memory, address: 0x64ce82d6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 665.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 8e e0          	: add ip, lr, r0
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 8e e0          	: add sl, lr, r0
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009f8. Hit: 1. Lifespan: 2. Instruction: 00000665. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 8e e0          	: add lr, lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 8e e0          	: add r6, lr, r0
 >> Lifespan countdown: 2. (0x800009fc)
 >> Lifespan countdown: 1. (0x80000a00)
 >> Reverting instruction          :  00 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 0. Instruction: 00000671. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a10
 >> Updated                     : 0x0000000080000a14
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 50 05 e0          	: and r5, r5, sb
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 50 05 e0          	: and r5, r5, sl
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 50 05 e0          	: and r5, r5, ip
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 50 05 e0          	: and r5, r5, r0
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 50 05 e0          	: and r5, r5, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 50 05 e0          	: and r5, r5, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 50 05 e0          	: and r5, r5, r8, asr #32
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 50 05 e0          	: and r5, r5, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 51 05 e0          	: and r5, r5, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 52 05 e0          	: and r5, r5, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 54 05 e0          	: and r5, r5, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 58 05 e0          	: and r5, r5, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 40 05 e0          	: and r4, r5, r8
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 70 05 e0          	: and r7, r5, r8
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 10 05 e0          	: and r1, r5, r8
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a10. Hit: 1. Lifespan: 2. Instruction: 00000671. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 05 e0          	: and r5, r5, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 d0 05 e0          	: and sp, r5, r8
 >> Lifespan countdown: 2. (0x80000a14)
 >> Lifespan countdown: 1. (0x80000a18)
 >> Reverting instruction          :  08 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 0. Instruction: 00000678. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a2c
 >> Updated                     : 0x0000000080000a30
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 50 05 e0          	: and r5, r5, r1
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 50 05 e0          	: and r5, r5, r2
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 50 05 e0          	: and r5, r5, r4
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 50 05 e0          	: and r5, r5, r8
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 50 05 e0          	: and r5, r5, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 50 05 e0          	: and r5, r5, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 50 05 e0          	: and r5, r5, r0, asr #32
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 50 05 e0          	: and r5, r5, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 51 05 e0          	: and r5, r5, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 52 05 e0          	: and r5, r5, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 54 05 e0          	: and r5, r5, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 58 05 e0          	: and r5, r5, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 40 05 e0          	: and r4, r5, r0
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 70 05 e0          	: and r7, r5, r0
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 10 05 e0          	: and r1, r5, r0
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a2c. Hit: 1. Lifespan: 2. Instruction: 00000678. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 05 e0          	: and r5, r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 d0 05 e0          	: and sp, r5, r0
 >> Lifespan countdown: 2. (0x80000a30)
 >> Lifespan countdown: 1. (0x80000a34)
 >> Reverting instruction          :  00 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 0. Instruction: 00000688. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a54
 >> Updated                     : 0x0000000080000a58
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 08 e0          	: and r8, r8, r0
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 08 e0          	: and r8, r8, r3
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 08 e0          	: and r8, r8, r5
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 08 e0          	: and r8, r8, sb
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 08 e0          	: and r8, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 08 e0          	: and r8, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 08 e0          	: and r8, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 08 e0          	: and r8, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 08 e0          	: and r8, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 08 e0          	: and r8, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 08 e0          	: and r8, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 08 e0          	: and r8, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 08 e0          	: and sb, r8, r1
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 08 e0          	: and sl, r8, r1
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 08 e0          	: and ip, r8, r1
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a54. Hit: 1. Lifespan: 2. Instruction: 00000688. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 08 e0          	: and r0, r8, r1
 >> Lifespan countdown: 2. (0x80000a58)
 >> Lifespan countdown: 1. (0x80000a5c)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 0. Instruction: 00000696. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a74
 >> Updated                     : 0x0000000080000a78
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 50 29 e0          	: eor r5, sb, sb
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 50 29 e0          	: eor r5, sb, sl
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 50 29 e0          	: eor r5, sb, ip
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 50 29 e0          	: eor r5, sb, r0
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 50 29 e0          	: eor r5, sb, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 50 29 e0          	: eor r5, sb, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 50 29 e0          	: eor r5, sb, r8, asr #32
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 50 29 e0          	: eor r5, sb, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 51 29 e0          	: eor r5, sb, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 52 29 e0          	: eor r5, sb, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 54 29 e0          	: eor r5, sb, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 58 29 e0          	: eor r5, sb, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 40 29 e0          	: eor r4, sb, r8
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 70 29 e0          	: eor r7, sb, r8
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 10 29 e0          	: eor r1, sb, r8
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a74. Hit: 1. Lifespan: 2. Instruction: 00000696. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 50 29 e0          	: eor r5, sb, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 d0 29 e0          	: eor sp, sb, r8
 >> Lifespan countdown: 2. (0x80000a78)
 >> Lifespan countdown: 1. (0x80000a7c)
 >> Reverting instruction          :  08 50 29 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 0. Instruction: 00000703. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a90
 >> Updated                     : 0x0000000080000a94
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x1
 >> Updated instruction            :  64 59 88 e0          	: add r5, r8, r4, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x2
 >> Updated instruction            :  67 59 88 e0          	: add r5, r8, r7, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x4
 >> Updated instruction            :  61 59 88 e0          	: add r5, r8, r1, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x8
 >> Updated instruction            :  6d 59 88 e0          	: add r5, r8, sp, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x10
 >> Updated instruction            :  75 59 88 e0          	: add r5, r8, r5, ror sb
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x20
 >> Updated instruction            :  45 59 88 e0          	: add r5, r8, r5, asr #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x40
 >> Updated instruction            :  25 59 88 e0          	: add r5, r8, r5, lsr #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x80
 >> Updated instruction            :  e5 59 88 e0          	: add r5, r8, r5, ror #19
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x100
 >> Updated instruction            :  65 58 88 e0          	: add r5, r8, r5, ror #16
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x200
 >> Updated instruction            :  65 5b 88 e0          	: add r5, r8, r5, ror #22
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x400
 >> Updated instruction            :  65 5d 88 e0          	: add r5, r8, r5, ror #26
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x800
 >> Updated instruction            :  65 51 88 e0          	: add r5, r8, r5, ror #2
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x1000
 >> Updated instruction            :  65 49 88 e0          	: add r4, r8, r5, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x2000
 >> Updated instruction            :  65 79 88 e0          	: add r7, r8, r5, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x4000
 >> Updated instruction            :  65 19 88 e0          	: add r1, r8, r5, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a90. Hit: 1. Lifespan: 2. Instruction: 00000703. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 59 88 e0          	: add r5, r8, r5, ror #18
 >> Mask                           :  0x8000
 >> Updated instruction            :  65 d9 88 e0          	: add sp, r8, r5, ror #18
 >> Lifespan countdown: 2. (0x80000a94)
 >> Lifespan countdown: 1. (0x80000a98)
 >> Reverting instruction          :  65 59 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 0. Instruction: 00000712. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ab4
 >> Updated                     : 0x0000000080000ab8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 84 e0          	: add sl, r4, fp
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 84 e0          	: add sl, r4, r8
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 84 e0          	: add sl, r4, lr
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 84 e0          	: add sl, r4, r2
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 84 e0          	: add sl, r4, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 84 e0          	: add sl, r4, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 84 e0          	: add sl, r4, sl, asr #32
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 84 e0          	: add sl, r4, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 84 e0          	: add sl, r4, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 84 e0          	: add sl, r4, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 84 e0          	: add sl, r4, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 84 e0          	: add sl, r4, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 84 e0          	: add fp, r4, sl
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000676f0281, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 84 e0          	: add r8, r4, sl
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 84 e0          	: add lr, r4, sl
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab4. Hit: 1. Lifespan: 2. Instruction: 00000712. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 84 e0          	: add sl, r4, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 84 e0          	: add r2, r4, sl
 >> Lifespan countdown: 2. (0x80000ab8)
 >> Lifespan countdown: 1. (0x80000abc)
 >> Reverting instruction          :  0a a0 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 0. Instruction: 00000721. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ad8
 >> Updated                     : 0x0000000080000adc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 80 28 e0          	: eor r8, r8, r4
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 80 28 e0          	: eor r8, r8, r7
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 80 28 e0          	: eor r8, r8, r1
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 80 28 e0          	: eor r8, r8, sp
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 80 28 e0          	: eor r8, r8, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 80 28 e0          	: eor r8, r8, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 80 28 e0          	: eor r8, r8, r5, asr #32
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 80 28 e0          	: eor r8, r8, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 81 28 e0          	: eor r8, r8, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 82 28 e0          	: eor r8, r8, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 84 28 e0          	: eor r8, r8, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 88 28 e0          	: eor r8, r8, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 90 28 e0          	: eor sb, r8, r5
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 a0 28 e0          	: eor sl, r8, r5
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 c0 28 e0          	: eor ip, r8, r5
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad8. Hit: 1. Lifespan: 2. Instruction: 00000721. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 80 28 e0          	: eor r8, r8, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 00 28 e0          	: eor r0, r8, r5
 >> Lifespan countdown: 2. (0x80000adc)
 >> Lifespan countdown: 1. (0x80000ae0)
 >> Reverting instruction          :  05 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 0. Instruction: 00000729. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000af8
 >> Updated                     : 0x0000000080000afc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 2e e0          	: eor lr, lr, r1
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 2e e0          	: eor lr, lr, r2
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 2e e0          	: eor lr, lr, r4
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 2e e0          	: eor lr, lr, r8
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 2e e0          	: eor lr, lr, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 2e e0          	: eor lr, lr, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 2e e0          	: eor lr, lr, r0, asr #32
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 2e e0          	: eor lr, lr, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 2e e0          	: eor lr, lr, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 2e e0          	: eor lr, lr, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 2e e0          	: eor lr, lr, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 2e e0          	: eor lr, lr, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 2e e0          	: eor pc, lr, r0
 >!  Erm -  fetching from unmapped memory, address: 0xd1af3bb4, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 729.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 2e e0          	: eor ip, lr, r0
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 2e e0          	: eor sl, lr, r0
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000af8. Hit: 1. Lifespan: 2. Instruction: 00000729. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 2e e0          	: eor r6, lr, r0
 >> Lifespan countdown: 2. (0x80000afc)
 >> Lifespan countdown: 1. (0x80000b00)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 0. Instruction: 00000737. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b18
 >> Updated                     : 0x0000000080000b1c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 0c e0          	: and ip, ip, r1
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 0c e0          	: and ip, ip, r2
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 0c e0          	: and ip, ip, r4
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 0c e0          	: and ip, ip, r8
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 0c e0          	: and ip, ip, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 0c e0          	: and ip, ip, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 0c e0          	: and ip, ip, r0, asr #32
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 0c e0          	: and ip, ip, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 0c e0          	: and ip, ip, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 0c e0          	: and ip, ip, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 0c e0          	: and ip, ip, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 0c e0          	: and ip, ip, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 0c e0          	: and sp, ip, r0
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 0c e0          	: and lr, ip, r0
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 0c e0          	: and r8, ip, r0
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b18. Hit: 1. Lifespan: 2. Instruction: 00000737. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 0c e0          	: and ip, ip, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 0c e0          	: and r4, ip, r0
 >> Lifespan countdown: 2. (0x80000b1c)
 >> Lifespan countdown: 1. (0x80000b20)
 >> Reverting instruction          :  00 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 0. Instruction: 00000747. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b40
 >> Updated                     : 0x0000000080000b44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x1
 >> Updated instruction            :  23 01 06 e3          	: movw r0, #0x6123
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x2
 >> Updated instruction            :  20 01 06 e3          	: movw r0, #0x6120
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x4
 >> Updated instruction            :  26 01 06 e3          	: movw r0, #0x6126
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x8
 >> Updated instruction            :  2a 01 06 e3          	: movw r0, #0x612a
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x10
 >> Updated instruction            :  32 01 06 e3          	: movw r0, #0x6132
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x20
 >> Updated instruction            :  02 01 06 e3          	: movw r0, #0x6102
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x40
 >> Updated instruction            :  62 01 06 e3          	: movw r0, #0x6162
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x80
 >> Updated instruction            :  a2 01 06 e3          	: movw r0, #0x61a2
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x100
 >> Updated instruction            :  22 00 06 e3          	: movw r0, #0x6022
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x200
 >> Updated instruction            :  22 03 06 e3          	: movw r0, #0x6322
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x400
 >> Updated instruction            :  22 05 06 e3          	: movw r0, #0x6522
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x800
 >> Updated instruction            :  22 09 06 e3          	: movw r0, #0x6922
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x1000
 >> Updated instruction            :  22 11 06 e3          	: movw r1, #0x6122
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x2000
 >> Updated instruction            :  22 21 06 e3          	: movw r2, #0x6122
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x4000
 >> Updated instruction            :  22 41 06 e3          	: movw r4, #0x6122
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b40. Hit: 1. Lifespan: 2. Instruction: 00000747. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  22 01 06 e3          	: movw r0, #0x6122
 >> Mask                           :  0x8000
 >> Updated instruction            :  22 81 06 e3          	: movw r8, #0x6122
 >> Lifespan countdown: 2. (0x80000b44)
 >> Lifespan countdown: 1. (0x80000b48)
 >> Reverting instruction          :  22 01 06 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 0. Instruction: 00000755. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b60
 >> Updated                     : 0x0000000080000b64
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 c0 2c e0          	: eor ip, ip, r8
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b c0 2c e0          	: eor ip, ip, fp
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d c0 2c e0          	: eor ip, ip, sp
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 c0 2c e0          	: eor ip, ip, r1
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 c0 2c e0          	: eor ip, ip, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 c0 2c e0          	: eor ip, ip, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 c0 2c e0          	: eor ip, ip, sb, asr #32
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 c0 2c e0          	: eor ip, ip, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 c1 2c e0          	: eor ip, ip, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 c2 2c e0          	: eor ip, ip, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 c4 2c e0          	: eor ip, ip, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 c8 2c e0          	: eor ip, ip, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 d0 2c e0          	: eor sp, ip, sb
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 e0 2c e0          	: eor lr, ip, sb
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 80 2c e0          	: eor r8, ip, sb
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b60. Hit: 1. Lifespan: 2. Instruction: 00000755. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 c0 2c e0          	: eor ip, ip, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 40 2c e0          	: eor r4, ip, sb
 >> Lifespan countdown: 2. (0x80000b64)
 >> Lifespan countdown: 1. (0x80000b68)
 >> Reverting instruction          :  09 c0 2c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 0. Instruction: 00000761. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b78
 >> Updated                     : 0x0000000080000b7c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x1
 >> Updated instruction            :  e4 1d 4f e3          	: movt r1, #0xfde4
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x2
 >> Updated instruction            :  e7 1d 4f e3          	: movt r1, #0xfde7
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x4
 >> Updated instruction            :  e1 1d 4f e3          	: movt r1, #0xfde1
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x8
 >> Updated instruction            :  ed 1d 4f e3          	: movt r1, #0xfded
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x10
 >> Updated instruction            :  f5 1d 4f e3          	: movt r1, #0xfdf5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x20
 >> Updated instruction            :  c5 1d 4f e3          	: movt r1, #0xfdc5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x40
 >> Updated instruction            :  a5 1d 4f e3          	: movt r1, #0xfda5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x80
 >> Updated instruction            :  65 1d 4f e3          	: movt r1, #0xfd65
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x100
 >> Updated instruction            :  e5 1c 4f e3          	: movt r1, #0xfce5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x200
 >> Updated instruction            :  e5 1f 4f e3          	: movt r1, #0xffe5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x400
 >> Updated instruction            :  e5 19 4f e3          	: movt r1, #0xf9e5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x800
 >> Updated instruction            :  e5 15 4f e3          	: movt r1, #0xf5e5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x1000
 >> Updated instruction            :  e5 0d 4f e3          	: movt r0, #0xfde5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x2000
 >> Updated instruction            :  e5 3d 4f e3          	: movt r3, #0xfde5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x4000
 >> Updated instruction            :  e5 5d 4f e3          	: movt r5, #0xfde5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b78. Hit: 1. Lifespan: 2. Instruction: 00000761. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e5 1d 4f e3          	: movt r1, #0xfde5
 >> Mask                           :  0x8000
 >> Updated instruction            :  e5 9d 4f e3          	: movt sb, #0xfde5
 >> Lifespan countdown: 2. (0x80000b7c)
 >> Lifespan countdown: 1. (0x80000b80)
 >> Reverting instruction          :  e5 1d 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 0. Instruction: 00000769. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b98
 >> Updated                     : 0x0000000080000b9c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x1
 >> Updated instruction            :  df 8b 44 e3          	: movt r8, #0x4bdf
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x2
 >> Updated instruction            :  dc 8b 44 e3          	: movt r8, #0x4bdc
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x4
 >> Updated instruction            :  da 8b 44 e3          	: movt r8, #0x4bda
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x8
 >> Updated instruction            :  d6 8b 44 e3          	: movt r8, #0x4bd6
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x10
 >> Updated instruction            :  ce 8b 44 e3          	: movt r8, #0x4bce
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x20
 >> Updated instruction            :  fe 8b 44 e3          	: movt r8, #0x4bfe
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x40
 >> Updated instruction            :  9e 8b 44 e3          	: movt r8, #0x4b9e
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x80
 >> Updated instruction            :  5e 8b 44 e3          	: movt r8, #0x4b5e
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x100
 >> Updated instruction            :  de 8a 44 e3          	: movt r8, #0x4ade
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x200
 >> Updated instruction            :  de 89 44 e3          	: movt r8, #0x49de
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x400
 >> Updated instruction            :  de 8f 44 e3          	: movt r8, #0x4fde
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x800
 >> Updated instruction            :  de 83 44 e3          	: movt r8, #0x43de
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x1000
 >> Updated instruction            :  de 9b 44 e3          	: movt sb, #0x4bde
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x2000
 >> Updated instruction            :  de ab 44 e3          	: movt sl, #0x4bde
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x4000
 >> Updated instruction            :  de cb 44 e3          	: movt ip, #0x4bde
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b98. Hit: 1. Lifespan: 2. Instruction: 00000769. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  de 8b 44 e3          	: movt r8, #0x4bde
 >> Mask                           :  0x8000
 >> Updated instruction            :  de 0b 44 e3          	: movt r0, #0x4bde
 >> Lifespan countdown: 2. (0x80000b9c)
 >> Lifespan countdown: 1. (0x80000ba0)
 >> Reverting instruction          :  de 8b 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 0. Instruction: 00000776. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bb4
 >> Updated                     : 0x0000000080000bb8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 a0 8a e0          	: add sl, sl, r1
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 a0 8a e0          	: add sl, sl, r2
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 a0 8a e0          	: add sl, sl, r8
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 a0 8a e0          	: add sl, sl, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 a0 8a e0          	: add sl, sl, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 a0 8a e0          	: add sl, sl, r0, asr #32
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 a0 8a e0          	: add sl, sl, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 a1 8a e0          	: add sl, sl, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 a2 8a e0          	: add sl, sl, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 a4 8a e0          	: add sl, sl, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 a8 8a e0          	: add sl, sl, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 b0 8a e0          	: add fp, sl, r0
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f656b09f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 779.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 80 8a e0          	: add r8, sl, r0
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 e0 8a e0          	: add lr, sl, r0
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bb4. Hit: 1. Lifespan: 2. Instruction: 00000776. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 a0 8a e0          	: add sl, sl, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 20 8a e0          	: add r2, sl, r0
 >> Lifespan countdown: 2. (0x80000bb8)
 >> Lifespan countdown: 1. (0x80000bbc)
 >> Reverting instruction          :  00 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 0. Instruction: 00000784. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bd4
 >> Updated                     : 0x0000000080000bd8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 50 85 e0          	: add r5, r5, r0
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 50 85 e0          	: add r5, r5, r3
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 50 85 e0          	: add r5, r5, r5
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 50 85 e0          	: add r5, r5, sb
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 50 85 e0          	: add r5, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 50 85 e0          	: add r5, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 50 85 e0          	: add r5, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 50 85 e0          	: add r5, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 51 85 e0          	: add r5, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 52 85 e0          	: add r5, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 54 85 e0          	: add r5, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 58 85 e0          	: add r5, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 40 85 e0          	: add r4, r5, r1
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 70 85 e0          	: add r7, r5, r1
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 10 85 e0          	: add r1, r5, r1
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bd4. Hit: 1. Lifespan: 2. Instruction: 00000784. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 50 85 e0          	: add r5, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 d0 85 e0          	: add sp, r5, r1
 >> Lifespan countdown: 2. (0x80000bd8)
 >> Lifespan countdown: 1. (0x80000bdc)
 >> Reverting instruction          :  01 50 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 0. Instruction: 00000791. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bf0
 >> Updated                     : 0x0000000080000bf4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 10 81 e0          	: add r1, r1, r4
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 10 81 e0          	: add r1, r1, r7
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 10 81 e0          	: add r1, r1, r1
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 10 81 e0          	: add r1, r1, sp
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 10 81 e0          	: add r1, r1, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 10 81 e0          	: add r1, r1, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 10 81 e0          	: add r1, r1, r5, asr #32
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 10 81 e0          	: add r1, r1, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 11 81 e0          	: add r1, r1, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 12 81 e0          	: add r1, r1, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 14 81 e0          	: add r1, r1, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 18 81 e0          	: add r1, r1, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 00 81 e0          	: add r0, r1, r5
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 30 81 e0          	: add r3, r1, r5
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 50 81 e0          	: add r5, r1, r5
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bf0. Hit: 1. Lifespan: 2. Instruction: 00000791. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 10 81 e0          	: add r1, r1, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 90 81 e0          	: add sb, r1, r5
 >> Lifespan countdown: 2. (0x80000bf4)
 >> Lifespan countdown: 1. (0x80000bf8)
 >> Reverting instruction          :  05 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 0. Instruction: 00000798. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c0c
 >> Updated                     : 0x0000000080000c10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 8e e0          	: add ip, lr, sp
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 8e e0          	: add ip, lr, lr
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 8e e0          	: add ip, lr, r8
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 8e e0          	: add ip, lr, r4
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 8e e0          	: add ip, lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 8e e0          	: add ip, lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 8e e0          	: add ip, lr, ip, asr #32
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 8e e0          	: add ip, lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 8e e0          	: add ip, lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 8e e0          	: add ip, lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 8e e0          	: add ip, lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 8e e0          	: add ip, lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 8e e0          	: add sp, lr, ip
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 8e e0          	: add lr, lr, ip
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 8e e0          	: add r8, lr, ip
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c0c. Hit: 1. Lifespan: 2. Instruction: 00000798. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8e e0          	: add ip, lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 8e e0          	: add r4, lr, ip
 >> Lifespan countdown: 2. (0x80000c10)
 >> Lifespan countdown: 1. (0x80000c14)
 >> Reverting instruction          :  0c c0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 0. Instruction: 00000806. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c2c
 >> Updated                     : 0x0000000080000c30
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 80 8e e0          	: add r8, lr, sb
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 80 8e e0          	: add r8, lr, sl
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 80 8e e0          	: add r8, lr, ip
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 80 8e e0          	: add r8, lr, r0
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 80 8e e0          	: add r8, lr, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 80 8e e0          	: add r8, lr, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 80 8e e0          	: add r8, lr, r8, asr #32
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 80 8e e0          	: add r8, lr, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 81 8e e0          	: add r8, lr, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 82 8e e0          	: add r8, lr, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 84 8e e0          	: add r8, lr, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 88 8e e0          	: add r8, lr, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 90 8e e0          	: add sb, lr, r8
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 a0 8e e0          	: add sl, lr, r8
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 c0 8e e0          	: add ip, lr, r8
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c2c. Hit: 1. Lifespan: 2. Instruction: 00000806. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8e e0          	: add r8, lr, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 00 8e e0          	: add r0, lr, r8
 >> Lifespan countdown: 2. (0x80000c30)
 >> Lifespan countdown: 1. (0x80000c34)
 >> Reverting instruction          :  08 80 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 0. Instruction: 00000815. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c50
 >> Updated                     : 0x0000000080000c54
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x1
 >> Updated instruction            :  6f e8 8a e0          	: add lr, sl, pc, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x2
 >> Updated instruction            :  6c e8 8a e0          	: add lr, sl, ip, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x4
 >> Updated instruction            :  6a e8 8a e0          	: add lr, sl, sl, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x8
 >> Updated instruction            :  66 e8 8a e0          	: add lr, sl, r6, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x10
 >> Updated instruction            :  7e e8 8a e0          	: add lr, sl, lr, ror r8
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x20
 >> Updated instruction            :  4e e8 8a e0          	: add lr, sl, lr, asr #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x40
 >> Updated instruction            :  2e e8 8a e0          	: add lr, sl, lr, lsr #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x80
 >> Updated instruction            :  ee e8 8a e0          	: add lr, sl, lr, ror #17
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x100
 >> Updated instruction            :  6e e9 8a e0          	: add lr, sl, lr, ror #18
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x200
 >> Updated instruction            :  6e ea 8a e0          	: add lr, sl, lr, ror #20
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x400
 >> Updated instruction            :  6e ec 8a e0          	: add lr, sl, lr, ror #24
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x800
 >> Updated instruction            :  6e e0 8a e0          	: add lr, sl, lr, rrx
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x1000
 >> Updated instruction            :  6e f8 8a e0          	: add pc, sl, lr, ror #16
 >!  Erm -  fetching from unmapped memory, address: 0x3f0cfc74, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 815.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x2000
 >> Updated instruction            :  6e c8 8a e0          	: add ip, sl, lr, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x4000
 >> Updated instruction            :  6e a8 8a e0          	: add sl, sl, lr, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c50. Hit: 1. Lifespan: 2. Instruction: 00000815. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6e e8 8a e0          	: add lr, sl, lr, ror #16
 >> Mask                           :  0x8000
 >> Updated instruction            :  6e 68 8a e0          	: add r6, sl, lr, ror #16
 >> Lifespan countdown: 2. (0x80000c54)
 >> Lifespan countdown: 1. (0x80000c58)
 >> Reverting instruction          :  6e e8 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 0. Instruction: 00000823. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c70
 >> Updated                     : 0x0000000080000c74
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 e0 2e e0          	: eor lr, lr, r1
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 e0 2e e0          	: eor lr, lr, r2
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 e0 2e e0          	: eor lr, lr, r4
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 e0 2e e0          	: eor lr, lr, r8
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 e0 2e e0          	: eor lr, lr, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 e0 2e e0          	: eor lr, lr, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 e0 2e e0          	: eor lr, lr, r0, asr #32
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 e0 2e e0          	: eor lr, lr, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 e1 2e e0          	: eor lr, lr, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 e2 2e e0          	: eor lr, lr, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 e4 2e e0          	: eor lr, lr, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 e8 2e e0          	: eor lr, lr, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 f0 2e e0          	: eor pc, lr, r0
 >!  Erm -  fetching from unmapped memory, address: 0xded3e3a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 823.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 c0 2e e0          	: eor ip, lr, r0
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 a0 2e e0          	: eor sl, lr, r0
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c70. Hit: 1. Lifespan: 2. Instruction: 00000823. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 e0 2e e0          	: eor lr, lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 60 2e e0          	: eor r6, lr, r0
 >> Lifespan countdown: 2. (0x80000c74)
 >> Lifespan countdown: 1. (0x80000c78)
 >> Reverting instruction          :  00 e0 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 0. Instruction: 00000831. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c90
 >> Updated                     : 0x0000000080000c94
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 8c e0          	: add sl, ip, fp
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 8c e0          	: add sl, ip, r8
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 8c e0          	: add sl, ip, lr
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 8c e0          	: add sl, ip, r2
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 8c e0          	: add sl, ip, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 8c e0          	: add sl, ip, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 8c e0          	: add sl, ip, sl, asr #32
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 8c e0          	: add sl, ip, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 8c e0          	: add sl, ip, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 8c e0          	: add sl, ip, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 8c e0          	: add sl, ip, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 8c e0          	: add sl, ip, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 8c e0          	: add fp, ip, sl
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d9d4cfe9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 845.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 8c e0          	: add r8, ip, sl
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 8c e0          	: add lr, ip, sl
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c90. Hit: 1. Lifespan: 2. Instruction: 00000831. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 8c e0          	: add r2, ip, sl
 >> Lifespan countdown: 2. (0x80000c94)
 >> Lifespan countdown: 1. (0x80000c98)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 0. Instruction: 00000838. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cac
 >> Updated                     : 0x0000000080000cb0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x1
 >> Updated instruction            :  ef ea 89 e0          	: add lr, sb, pc, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x2
 >> Updated instruction            :  ec ea 89 e0          	: add lr, sb, ip, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x4
 >> Updated instruction            :  ea ea 89 e0          	: add lr, sb, sl, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x8
 >> Updated instruction            :  e6 ea 89 e0          	: add lr, sb, r6, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x10
 >> Updated instruction            :  fe ea 89 e0          	: strd lr, pc, [sb], lr
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xdd80dc6c, value: 0xc4d85196!! Count 839 Skipping to end.
 >> Run result: Fault errored program - last instruction: 838.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x20
 >> Updated instruction            :  ce ea 89 e0          	: add lr, sb, lr, asr #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x40
 >> Updated instruction            :  ae ea 89 e0          	: add lr, sb, lr, lsr #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x80
 >> Updated instruction            :  6e ea 89 e0          	: add lr, sb, lr, ror #20
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x100
 >> Updated instruction            :  ee eb 89 e0          	: add lr, sb, lr, ror #23
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x200
 >> Updated instruction            :  ee e8 89 e0          	: add lr, sb, lr, ror #17
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x400
 >> Updated instruction            :  ee ee 89 e0          	: add lr, sb, lr, ror #29
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x800
 >> Updated instruction            :  ee e2 89 e0          	: add lr, sb, lr, ror #5
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x1000
 >> Updated instruction            :  ee fa 89 e0          	: add pc, sb, lr, ror #21
 >!  Erm -  fetching from unmapped memory, address: 0xa00d9292, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 838.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x2000
 >> Updated instruction            :  ee ca 89 e0          	: add ip, sb, lr, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x4000
 >> Updated instruction            :  ee aa 89 e0          	: add sl, sb, lr, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cac. Hit: 1. Lifespan: 2. Instruction: 00000838. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee ea 89 e0          	: add lr, sb, lr, ror #21
 >> Mask                           :  0x8000
 >> Updated instruction            :  ee 6a 89 e0          	: add r6, sb, lr, ror #21
 >> Lifespan countdown: 2. (0x80000cb0)
 >> Lifespan countdown: 1. (0x80000cb4)
 >> Reverting instruction          :  ee ea 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 0. Instruction: 00000847. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cd0
 >> Updated                     : 0x0000000080000cd4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x1
 >> Updated instruction            :  6d c8 8e e0          	: add ip, lr, sp, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x2
 >> Updated instruction            :  6e c8 8e e0          	: add ip, lr, lr, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x4
 >> Updated instruction            :  68 c8 8e e0          	: add ip, lr, r8, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x8
 >> Updated instruction            :  64 c8 8e e0          	: add ip, lr, r4, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x10
 >> Updated instruction            :  7c c8 8e e0          	: add ip, lr, ip, ror r8
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x20
 >> Updated instruction            :  4c c8 8e e0          	: add ip, lr, ip, asr #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x40
 >> Updated instruction            :  2c c8 8e e0          	: add ip, lr, ip, lsr #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x80
 >> Updated instruction            :  ec c8 8e e0          	: add ip, lr, ip, ror #17
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x100
 >> Updated instruction            :  6c c9 8e e0          	: add ip, lr, ip, ror #18
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x200
 >> Updated instruction            :  6c ca 8e e0          	: add ip, lr, ip, ror #20
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x400
 >> Updated instruction            :  6c cc 8e e0          	: add ip, lr, ip, ror #24
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x800
 >> Updated instruction            :  6c c0 8e e0          	: add ip, lr, ip, rrx
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x1000
 >> Updated instruction            :  6c d8 8e e0          	: add sp, lr, ip, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x2000
 >> Updated instruction            :  6c e8 8e e0          	: add lr, lr, ip, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x4000
 >> Updated instruction            :  6c 88 8e e0          	: add r8, lr, ip, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cd0. Hit: 1. Lifespan: 2. Instruction: 00000847. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6c c8 8e e0          	: add ip, lr, ip, ror #16
 >> Mask                           :  0x8000
 >> Updated instruction            :  6c 48 8e e0          	: add r4, lr, ip, ror #16
 >> Lifespan countdown: 2. (0x80000cd4)
 >> Lifespan countdown: 1. (0x80000cd8)
 >> Reverting instruction          :  6c c8 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 0. Instruction: 00000854. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cec
 >> Updated                     : 0x0000000080000cf0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 85 e0          	: add r1, r5, r0
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 85 e0          	: add r1, r5, r3
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 85 e0          	: add r1, r5, r5
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 85 e0          	: add r1, r5, sb
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 85 e0          	: add r1, r5, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 85 e0          	: add r1, r5, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 85 e0          	: add r1, r5, r1, asr #32
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 85 e0          	: add r1, r5, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 85 e0          	: add r1, r5, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 85 e0          	: add r1, r5, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 85 e0          	: add r1, r5, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 85 e0          	: add r1, r5, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 85 e0          	: add r0, r5, r1
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 85 e0          	: add r3, r5, r1
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 85 e0          	: add r5, r5, r1
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cec. Hit: 1. Lifespan: 2. Instruction: 00000854. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 85 e0          	: add r1, r5, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 85 e0          	: add sb, r5, r1
 >> Lifespan countdown: 2. (0x80000cf0)
 >> Lifespan countdown: 1. (0x80000cf4)
 >> Reverting instruction          :  01 10 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 0. Instruction: 00000862. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d0c
 >> Updated                     : 0x0000000080000d10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x1
 >> Updated instruction            :  64 5e 89 e0          	: add r5, sb, r4, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x2
 >> Updated instruction            :  67 5e 89 e0          	: add r5, sb, r7, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x4
 >> Updated instruction            :  61 5e 89 e0          	: add r5, sb, r1, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x8
 >> Updated instruction            :  6d 5e 89 e0          	: add r5, sb, sp, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x10
 >> Updated instruction            :  75 5e 89 e0          	: add r5, sb, r5, ror lr
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x20
 >> Updated instruction            :  45 5e 89 e0          	: add r5, sb, r5, asr #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x40
 >> Updated instruction            :  25 5e 89 e0          	: add r5, sb, r5, lsr #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x80
 >> Updated instruction            :  e5 5e 89 e0          	: add r5, sb, r5, ror #29
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x100
 >> Updated instruction            :  65 5f 89 e0          	: add r5, sb, r5, ror #30
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x200
 >> Updated instruction            :  65 5c 89 e0          	: add r5, sb, r5, ror #24
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x400
 >> Updated instruction            :  65 5a 89 e0          	: add r5, sb, r5, ror #20
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x800
 >> Updated instruction            :  65 56 89 e0          	: add r5, sb, r5, ror #12
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x1000
 >> Updated instruction            :  65 4e 89 e0          	: add r4, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x2000
 >> Updated instruction            :  65 7e 89 e0          	: add r7, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x4000
 >> Updated instruction            :  65 1e 89 e0          	: add r1, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d0c. Hit: 1. Lifespan: 2. Instruction: 00000862. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  65 5e 89 e0          	: add r5, sb, r5, ror #28
 >> Mask                           :  0x8000
 >> Updated instruction            :  65 de 89 e0          	: add sp, sb, r5, ror #28
 >> Lifespan countdown: 2. (0x80000d10)
 >> Lifespan countdown: 1. (0x80000d14)
 >> Reverting instruction          :  65 5e 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 0. Instruction: 00000871. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d30
 >> Updated                     : 0x0000000080000d34
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 80 84 e0          	: add r8, r4, sb
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 80 84 e0          	: add r8, r4, sl
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 80 84 e0          	: add r8, r4, ip
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 80 84 e0          	: add r8, r4, r0
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 80 84 e0          	: add r8, r4, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 80 84 e0          	: add r8, r4, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 80 84 e0          	: add r8, r4, r8, asr #32
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 80 84 e0          	: add r8, r4, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 81 84 e0          	: add r8, r4, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 82 84 e0          	: add r8, r4, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 84 84 e0          	: add r8, r4, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 88 84 e0          	: add r8, r4, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 90 84 e0          	: add sb, r4, r8
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 a0 84 e0          	: add sl, r4, r8
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 c0 84 e0          	: add ip, r4, r8
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d30. Hit: 1. Lifespan: 2. Instruction: 00000871. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 84 e0          	: add r8, r4, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 00 84 e0          	: add r0, r4, r8
 >> Lifespan countdown: 2. (0x80000d34)
 >> Lifespan countdown: 1. (0x80000d38)
 >> Reverting instruction          :  08 80 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 0. Instruction: 00000877. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d48
 >> Updated                     : 0x0000000080000d4c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 e0 e1          	: mvn r0, sp
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 e0 e1          	: mvn r0, lr
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 e0 e1          	: mvn r0, r8
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 e0 e1          	: mvn r0, r4
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 e0 e1          	: mvn r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 e0 e1          	: mvn r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 e0 e1          	: mvn r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 e0 e1          	: mvn r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 e0 e1          	: mvn r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 e0 e1          	: mvn r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 e0 e1          	: mvn r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 e0 e1          	: mvn r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 e0 e1          	: mvn r1, ip
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 e0 e1          	: mvn r2, ip
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 e0 e1          	: mvn r4, ip
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d48. Hit: 1. Lifespan: 2. Instruction: 00000877. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 e0 e1          	: mvn r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 e0 e1          	: mvn r8, ip
 >> Lifespan countdown: 2. (0x80000d4c)
 >> Lifespan countdown: 1. (0x80000d50)
 >> Reverting instruction          :  0c 00 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 0. Instruction: 00000883. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d60
 >> Updated                     : 0x0000000080000d64
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x1
 >> Updated instruction            :  92 9c 4f e3          	: movt sb, #0xfc92
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x2
 >> Updated instruction            :  91 9c 4f e3          	: movt sb, #0xfc91
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x4
 >> Updated instruction            :  97 9c 4f e3          	: movt sb, #0xfc97
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x8
 >> Updated instruction            :  9b 9c 4f e3          	: movt sb, #0xfc9b
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x10
 >> Updated instruction            :  83 9c 4f e3          	: movt sb, #0xfc83
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x20
 >> Updated instruction            :  b3 9c 4f e3          	: movt sb, #0xfcb3
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x40
 >> Updated instruction            :  d3 9c 4f e3          	: movt sb, #0xfcd3
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x80
 >> Updated instruction            :  13 9c 4f e3          	: movt sb, #0xfc13
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x100
 >> Updated instruction            :  93 9d 4f e3          	: movt sb, #0xfd93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x200
 >> Updated instruction            :  93 9e 4f e3          	: movt sb, #0xfe93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x400
 >> Updated instruction            :  93 98 4f e3          	: movt sb, #0xf893
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x800
 >> Updated instruction            :  93 94 4f e3          	: movt sb, #0xf493
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x1000
 >> Updated instruction            :  93 8c 4f e3          	: movt r8, #0xfc93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x2000
 >> Updated instruction            :  93 bc 4f e3          	: movt fp, #0xfc93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fc93febc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 905.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x4000
 >> Updated instruction            :  93 dc 4f e3          	: movt sp, #0xfc93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d60. Hit: 1. Lifespan: 2. Instruction: 00000883. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 9c 4f e3          	: movt sb, #0xfc93
 >> Mask                           :  0x8000
 >> Updated instruction            :  93 1c 4f e3          	: movt r1, #0xfc93
 >> Lifespan countdown: 2. (0x80000d64)
 >> Lifespan countdown: 1. (0x80000d68)
 >> Reverting instruction          :  93 9c 4f e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 0. Instruction: 00000892. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d84
 >> Updated                     : 0x0000000080000d88
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 20 e0          	: eor r0, r0, sp
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 20 e0          	: eor r0, r0, lr
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 20 e0          	: eor r0, r0, r8
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 20 e0          	: eor r0, r0, r4
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 20 e0          	: eor r0, r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 20 e0          	: eor r0, r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 20 e0          	: eor r0, r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 20 e0          	: eor r0, r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 20 e0          	: eor r0, r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 20 e0          	: eor r0, r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 20 e0          	: eor r0, r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 20 e0          	: eor r0, r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 20 e0          	: eor r1, r0, ip
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 20 e0          	: eor r2, r0, ip
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 20 e0          	: eor r4, r0, ip
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d84. Hit: 1. Lifespan: 2. Instruction: 00000892. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 20 e0          	: eor r0, r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 20 e0          	: eor r8, r0, ip
 >> Lifespan countdown: 2. (0x80000d88)
 >> Lifespan countdown: 1. (0x80000d8c)
 >> Reverting instruction          :  0c 00 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 0. Instruction: 00000899. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000da0
 >> Updated                     : 0x0000000080000da4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x1
 >> Updated instruction            :  0d ef 48 e3          	: movt lr, #0x8f0d
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x2
 >> Updated instruction            :  0e ef 48 e3          	: movt lr, #0x8f0e
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x4
 >> Updated instruction            :  08 ef 48 e3          	: movt lr, #0x8f08
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x8
 >> Updated instruction            :  04 ef 48 e3          	: movt lr, #0x8f04
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x10
 >> Updated instruction            :  1c ef 48 e3          	: movt lr, #0x8f1c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x20
 >> Updated instruction            :  2c ef 48 e3          	: movt lr, #0x8f2c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x40
 >> Updated instruction            :  4c ef 48 e3          	: movt lr, #0x8f4c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x80
 >> Updated instruction            :  8c ef 48 e3          	: movt lr, #0x8f8c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x100
 >> Updated instruction            :  0c ee 48 e3          	: movt lr, #0x8e0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x200
 >> Updated instruction            :  0c ed 48 e3          	: movt lr, #0x8d0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x400
 >> Updated instruction            :  0c eb 48 e3          	: movt lr, #0x8b0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x800
 >> Updated instruction            :  0c e7 48 e3          	: movt lr, #0x870c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c ff 48 e3          	: movt pc, #0x8f0c
 >!  Erm -  fetching from unmapped memory, address: 0x8f0c0da8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 899.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c cf 48 e3          	: movt ip, #0x8f0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c af 48 e3          	: movt sl, #0x8f0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000da0. Hit: 1. Lifespan: 2. Instruction: 00000899. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c ef 48 e3          	: movt lr, #0x8f0c
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 6f 48 e3          	: movt r6, #0x8f0c
 >> Lifespan countdown: 2. (0x80000da4)
 >> Lifespan countdown: 1. (0x80000da8)
 >> Reverting instruction          :  0c ef 48 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 0. Instruction: 00000909. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dc8
 >> Updated                     : 0x0000000080000dcc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 88 e0          	: add r1, r8, r0
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 88 e0          	: add r1, r8, r3
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 88 e0          	: add r1, r8, r5
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 88 e0          	: add r1, r8, sb
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 88 e0          	: add r1, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 88 e0          	: add r1, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 88 e0          	: add r1, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 88 e0          	: add r1, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 88 e0          	: add r1, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 88 e0          	: add r1, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 88 e0          	: add r1, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 88 e0          	: add r1, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 88 e0          	: add r3, r8, r1
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 88 e0          	: add r5, r8, r1
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dc8. Hit: 1. Lifespan: 2. Instruction: 00000909. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 88 e0          	: add sb, r8, r1
 >> Lifespan countdown: 2. (0x80000dcc)
 >> Lifespan countdown: 1. (0x80000dd0)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 0. Instruction: 00000917. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000de8
 >> Updated                     : 0x0000000080000dec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f e0 83 e0          	: add lr, r3, pc
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c e0 83 e0          	: add lr, r3, ip
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a e0 83 e0          	: add lr, r3, sl
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 e0 83 e0          	: add lr, r3, r6
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e e0 83 e0          	: add lr, r3, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e e0 83 e0          	: add lr, r3, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e e0 83 e0          	: add lr, r3, lr, asr #32
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e e0 83 e0          	: add lr, r3, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e e1 83 e0          	: add lr, r3, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e e2 83 e0          	: add lr, r3, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e e4 83 e0          	: add lr, r3, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e e8 83 e0          	: add lr, r3, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e f0 83 e0          	: add pc, r3, lr
 >!  Erm -  fetching from unmapped memory, address: 0x8f0ccc92, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 917.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e c0 83 e0          	: add ip, r3, lr
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e a0 83 e0          	: add sl, r3, lr
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000de8. Hit: 1. Lifespan: 2. Instruction: 00000917. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e e0 83 e0          	: add lr, r3, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 60 83 e0          	: add r6, r3, lr
 >> Lifespan countdown: 2. (0x80000dec)
 >> Lifespan countdown: 1. (0x80000df0)
 >> Reverting instruction          :  0e e0 83 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 0. Instruction: 00000925. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e08
 >> Updated                     : 0x0000000080000e0c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x1
 >> Updated instruction            :  e1 96 0e e3          	: movw sb, #0xe6e1
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x2
 >> Updated instruction            :  e2 96 0e e3          	: movw sb, #0xe6e2
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x4
 >> Updated instruction            :  e4 96 0e e3          	: movw sb, #0xe6e4
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x8
 >> Updated instruction            :  e8 96 0e e3          	: movw sb, #0xe6e8
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x10
 >> Updated instruction            :  f0 96 0e e3          	: movw sb, #0xe6f0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x20
 >> Updated instruction            :  c0 96 0e e3          	: movw sb, #0xe6c0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x40
 >> Updated instruction            :  a0 96 0e e3          	: movw sb, #0xe6a0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x80
 >> Updated instruction            :  60 96 0e e3          	: movw sb, #0xe660
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x100
 >> Updated instruction            :  e0 97 0e e3          	: movw sb, #0xe7e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x200
 >> Updated instruction            :  e0 94 0e e3          	: movw sb, #0xe4e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x400
 >> Updated instruction            :  e0 92 0e e3          	: movw sb, #0xe2e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x800
 >> Updated instruction            :  e0 9e 0e e3          	: movw sb, #0xeee0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x1000
 >> Updated instruction            :  e0 86 0e e3          	: movw r8, #0xe6e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x2000
 >> Updated instruction            :  e0 b6 0e e3          	: movw fp, #0xe6e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000e684, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 933.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x4000
 >> Updated instruction            :  e0 d6 0e e3          	: movw sp, #0xe6e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e08. Hit: 1. Lifespan: 2. Instruction: 00000925. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e0 96 0e e3          	: movw sb, #0xe6e0
 >> Mask                           :  0x8000
 >> Updated instruction            :  e0 16 0e e3          	: movw r1, #0xe6e0
 >> Lifespan countdown: 2. (0x80000e0c)
 >> Lifespan countdown: 1. (0x80000e10)
 >> Reverting instruction          :  e0 96 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 0. Instruction: 00000934. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e2c
 >> Updated                     : 0x0000000080000e30
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 88 e0          	: add r5, r8, r4
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 88 e0          	: add r5, r8, r7
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 88 e0          	: add r5, r8, r1
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 88 e0          	: add r5, r8, sp
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 88 e0          	: add r5, r8, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 88 e0          	: add r5, r8, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 88 e0          	: add r5, r8, r5, asr #32
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 88 e0          	: add r5, r8, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 88 e0          	: add r5, r8, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 88 e0          	: add r5, r8, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 88 e0          	: add r5, r8, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 88 e0          	: add r5, r8, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 88 e0          	: add r4, r8, r5
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 88 e0          	: add r7, r8, r5
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 88 e0          	: add r1, r8, r5
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e2c. Hit: 1. Lifespan: 2. Instruction: 00000934. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 88 e0          	: add r5, r8, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 88 e0          	: add sp, r8, r5
 >> Lifespan countdown: 2. (0x80000e30)
 >> Lifespan countdown: 1. (0x80000e34)
 >> Reverting instruction          :  05 50 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 0. Instruction: 00000939. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e40
 >> Updated                     : 0x0000000080000e44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 80 8c e0          	: add r8, ip, sb
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 80 8c e0          	: add r8, ip, sl
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 80 8c e0          	: add r8, ip, ip
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 80 8c e0          	: add r8, ip, r0
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 80 8c e0          	: add r8, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 80 8c e0          	: add r8, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 80 8c e0          	: add r8, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 80 8c e0          	: add r8, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 81 8c e0          	: add r8, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 82 8c e0          	: add r8, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 84 8c e0          	: add r8, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 88 8c e0          	: add r8, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 90 8c e0          	: add sb, ip, r8
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 a0 8c e0          	: add sl, ip, r8
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 c0 8c e0          	: add ip, ip, r8
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e40. Hit: 1. Lifespan: 2. Instruction: 00000939. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 80 8c e0          	: add r8, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 00 8c e0          	: add r0, ip, r8
 >> Lifespan countdown: 2. (0x80000e44)
 >> Lifespan countdown: 1. (0x80000e48)
 >> Reverting instruction          :  08 80 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 0. Instruction: 00000947. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e60
 >> Updated                     : 0x0000000080000e64
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x1
 >> Updated instruction            :  a0 71 01 e3          	: movw r7, #0x11a0
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x2
 >> Updated instruction            :  a3 71 01 e3          	: movw r7, #0x11a3
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x4
 >> Updated instruction            :  a5 71 01 e3          	: movw r7, #0x11a5
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x8
 >> Updated instruction            :  a9 71 01 e3          	: movw r7, #0x11a9
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x10
 >> Updated instruction            :  b1 71 01 e3          	: movw r7, #0x11b1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x20
 >> Updated instruction            :  81 71 01 e3          	: movw r7, #0x1181
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x40
 >> Updated instruction            :  e1 71 01 e3          	: movw r7, #0x11e1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x80
 >> Updated instruction            :  21 71 01 e3          	: movw r7, #0x1121
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x100
 >> Updated instruction            :  a1 70 01 e3          	: movw r7, #0x10a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x200
 >> Updated instruction            :  a1 73 01 e3          	: movw r7, #0x13a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x400
 >> Updated instruction            :  a1 75 01 e3          	: movw r7, #0x15a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x800
 >> Updated instruction            :  a1 79 01 e3          	: movw r7, #0x19a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x1000
 >> Updated instruction            :  a1 61 01 e3          	: movw r6, #0x11a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x2000
 >> Updated instruction            :  a1 51 01 e3          	: movw r5, #0x11a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x4000
 >> Updated instruction            :  a1 31 01 e3          	: movw r3, #0x11a1
 >> Lifespan countdown: 2. (0x80000e64)
 >> Lifespan countdown: 1. (0x80000e68)
 >> Reverting instruction          :  a1 71 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e60. Hit: 1. Lifespan: 2. Instruction: 00000947. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a1 71 01 e3          	: movw r7, #0x11a1
 >> Mask                           :  0x8000
 >> Updated instruction            :  a1 f1 01 e3          	: movw pc, #0x11a1
 >!  Erm -  fetching from unmapped memory, address: 0x11a0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 947.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 0. Instruction: 00000958. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e8c
 >> Updated                     : 0x0000000080000e90
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x1
 >> Updated instruction            :  e3 28 8e e0          	: add r2, lr, r3, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x2
 >> Updated instruction            :  e0 28 8e e0          	: add r2, lr, r0, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x4
 >> Updated instruction            :  e6 28 8e e0          	: add r2, lr, r6, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x8
 >> Updated instruction            :  ea 28 8e e0          	: add r2, lr, sl, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x10
 >> Updated instruction            :  f2 28 8e e0          	: strd r2, r3, [lr], r2
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc70b8887, value: 0x874fa810!! Count 959 Skipping to end.
 >> Run result: Fault errored program - last instruction: 958.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x20
 >> Updated instruction            :  c2 28 8e e0          	: add r2, lr, r2, asr #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x40
 >> Updated instruction            :  a2 28 8e e0          	: add r2, lr, r2, lsr #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x80
 >> Updated instruction            :  62 28 8e e0          	: add r2, lr, r2, ror #16
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x100
 >> Updated instruction            :  e2 29 8e e0          	: add r2, lr, r2, ror #19
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x200
 >> Updated instruction            :  e2 2a 8e e0          	: add r2, lr, r2, ror #21
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x400
 >> Updated instruction            :  e2 2c 8e e0          	: add r2, lr, r2, ror #25
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x800
 >> Updated instruction            :  e2 20 8e e0          	: add r2, lr, r2, ror #1
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x1000
 >> Updated instruction            :  e2 38 8e e0          	: add r3, lr, r2, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x2000
 >> Updated instruction            :  e2 08 8e e0          	: add r0, lr, r2, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x4000
 >> Updated instruction            :  e2 68 8e e0          	: add r6, lr, r2, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e8c. Hit: 1. Lifespan: 2. Instruction: 00000958. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 28 8e e0          	: add r2, lr, r2, ror #17
 >> Mask                           :  0x8000
 >> Updated instruction            :  e2 a8 8e e0          	: add sl, lr, r2, ror #17
 >> Lifespan countdown: 2. (0x80000e90)
 >> Lifespan countdown: 1. (0x80000e94)
 >> Reverting instruction          :  e2 28 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 0. Instruction: 00000966. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000eac
 >> Updated                     : 0x0000000080000eb0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x1
 >> Updated instruction            :  39 10 1b e5          	: ldr r1, [fp, #-0x39]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 10 1b e5          	: ldr r1, [fp, #-0x3a]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 10 1b e5          	: ldr r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x8
 >> Updated instruction            :  30 10 1b e5          	: ldr r1, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x10
 >> Updated instruction            :  28 10 1b e5          	: ldr r1, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x20
 >> Updated instruction            :  18 10 1b e5          	: ldr r1, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x40
 >> Updated instruction            :  78 10 1b e5          	: ldr r1, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 10 1b e5          	: ldr r1, [fp, #-0xb8]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x100
 >> Updated instruction            :  38 11 1b e5          	: ldr r1, [fp, #-0x138]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x200
 >> Updated instruction            :  38 12 1b e5          	: ldr r1, [fp, #-0x238]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x400
 >> Updated instruction            :  38 14 1b e5          	: ldr r1, [fp, #-0x438]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x800
 >> Updated instruction            :  38 18 1b e5          	: ldr r1, [fp, #-0x838]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 00 1b e5          	: ldr r0, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 30 1b e5          	: ldr r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 50 1b e5          	: ldr r5, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eac. Hit: 1. Lifespan: 2. Instruction: 00000966. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 10 1b e5          	: ldr r1, [fp, #-0x38]
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 90 1b e5          	: ldr sb, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000eb0)
 >> Lifespan countdown: 1. (0x80000eb4)
 >> Reverting instruction          :  38 10 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 0. Instruction: 00000974. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ecc
 >> Updated                     : 0x0000000080000ed0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 00 80 e0          	: add r0, r0, fp
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 00 80 e0          	: add r0, r0, r8
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 00 80 e0          	: add r0, r0, r2
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 00 80 e0          	: add r0, r0, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 00 80 e0          	: add r0, r0, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 00 80 e0          	: add r0, r0, sl, asr #32
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 00 80 e0          	: add r0, r0, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 01 80 e0          	: add r0, r0, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 02 80 e0          	: add r0, r0, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 04 80 e0          	: add r0, r0, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 08 80 e0          	: add r0, r0, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 10 80 e0          	: add r1, r0, sl
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 20 80 e0          	: add r2, r0, sl
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 40 80 e0          	: add r4, r0, sl
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ecc. Hit: 1. Lifespan: 2. Instruction: 00000974. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 00 80 e0          	: add r0, r0, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 80 80 e0          	: add r8, r0, sl
 >> Lifespan countdown: 2. (0x80000ed0)
 >> Lifespan countdown: 1. (0x80000ed4)
 >> Reverting instruction          :  0a 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 0. Instruction: 00000982. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000eec
 >> Updated                     : 0x0000000080000ef0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 10 21 e0          	: eor r1, r1, sp
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 10 21 e0          	: eor r1, r1, lr
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 10 21 e0          	: eor r1, r1, r8
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 10 21 e0          	: eor r1, r1, r4
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 10 21 e0          	: eor r1, r1, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 10 21 e0          	: eor r1, r1, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 10 21 e0          	: eor r1, r1, ip, asr #32
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 10 21 e0          	: eor r1, r1, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 11 21 e0          	: eor r1, r1, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 12 21 e0          	: eor r1, r1, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 14 21 e0          	: eor r1, r1, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 18 21 e0          	: eor r1, r1, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 00 21 e0          	: eor r0, r1, ip
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 30 21 e0          	: eor r3, r1, ip
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 50 21 e0          	: eor r5, r1, ip
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eec. Hit: 1. Lifespan: 2. Instruction: 00000982. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 10 21 e0          	: eor r1, r1, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 90 21 e0          	: eor sb, r1, ip
 >> Lifespan countdown: 2. (0x80000ef0)
 >> Lifespan countdown: 1. (0x80000ef4)
 >> Reverting instruction          :  0c 10 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 0. Instruction: 00000990. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f0c
 >> Updated                     : 0x0000000080000f10
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 20 82 e1          	: orr r2, r2, r0
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 20 82 e1          	: orr r2, r2, r3
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 20 82 e1          	: orr r2, r2, r5
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 20 82 e1          	: orr r2, r2, sb
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 20 82 e1          	: orr r2, r2, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 20 82 e1          	: orr r2, r2, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 20 82 e1          	: orr r2, r2, r1, asr #32
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 20 82 e1          	: orr r2, r2, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 21 82 e1          	: orr r2, r2, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 22 82 e1          	: orr r2, r2, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 24 82 e1          	: orr r2, r2, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 28 82 e1          	: orr r2, r2, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 30 82 e1          	: orr r3, r2, r1
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 00 82 e1          	: orr r0, r2, r1
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 60 82 e1          	: orr r6, r2, r1
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f0c. Hit: 1. Lifespan: 2. Instruction: 00000990. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 20 82 e1          	: orr r2, r2, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 a0 82 e1          	: orr sl, r2, r1
 >> Lifespan countdown: 2. (0x80000f10)
 >> Lifespan countdown: 1. (0x80000f14)
 >> Reverting instruction          :  01 20 82 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 0. Instruction: 00000996. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f24
 >> Updated                     : 0x0000000080000f28
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x1
 >> Updated instruction            :  87 eb 4e e3          	: movt lr, #0xeb87
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x2
 >> Updated instruction            :  84 eb 4e e3          	: movt lr, #0xeb84
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x4
 >> Updated instruction            :  82 eb 4e e3          	: movt lr, #0xeb82
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x8
 >> Updated instruction            :  8e eb 4e e3          	: movt lr, #0xeb8e
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x10
 >> Updated instruction            :  96 eb 4e e3          	: movt lr, #0xeb96
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x20
 >> Updated instruction            :  a6 eb 4e e3          	: movt lr, #0xeba6
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x40
 >> Updated instruction            :  c6 eb 4e e3          	: movt lr, #0xebc6
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x80
 >> Updated instruction            :  06 eb 4e e3          	: movt lr, #0xeb06
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x100
 >> Updated instruction            :  86 ea 4e e3          	: movt lr, #0xea86
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x200
 >> Updated instruction            :  86 e9 4e e3          	: movt lr, #0xe986
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x400
 >> Updated instruction            :  86 ef 4e e3          	: movt lr, #0xef86
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x800
 >> Updated instruction            :  86 e3 4e e3          	: movt lr, #0xe386
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x1000
 >> Updated instruction            :  86 fb 4e e3          	: movt pc, #0xeb86
 >!  Erm -  fetching from unmapped memory, address: 0xeb860f2c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 996.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x2000
 >> Updated instruction            :  86 cb 4e e3          	: movt ip, #0xeb86
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x4000
 >> Updated instruction            :  86 ab 4e e3          	: movt sl, #0xeb86
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f24. Hit: 1. Lifespan: 2. Instruction: 00000996. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  86 eb 4e e3          	: movt lr, #0xeb86
 >> Mask                           :  0x8000
 >> Updated instruction            :  86 6b 4e e3          	: movt r6, #0xeb86
 >> Lifespan countdown: 2. (0x80000f28)
 >> Lifespan countdown: 1. (0x80000f2c)
 >> Reverting instruction          :  86 eb 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 0. Instruction: 00001004. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f44
 >> Updated                     : 0x0000000080000f48
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 a0 8a e0          	: add sl, sl, r6
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 a0 8a e0          	: add sl, sl, r5
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 a0 8a e0          	: add sl, sl, r3
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f a0 8a e0          	: add sl, sl, pc
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 a0 8a e0          	: add sl, sl, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 a0 8a e0          	: add sl, sl, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 a0 8a e0          	: add sl, sl, r7, asr #32
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 a0 8a e0          	: add sl, sl, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 a1 8a e0          	: add sl, sl, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 a2 8a e0          	: add sl, sl, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 a4 8a e0          	: add sl, sl, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 a8 8a e0          	: add sl, sl, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 b0 8a e0          	: add fp, sl, r7
 >> Lifespan countdown: 2. (0x80000f48)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000019c0b2fd, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1005.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 80 8a e0          	: add r8, sl, r7
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 e0 8a e0          	: add lr, sl, r7
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f44. Hit: 1. Lifespan: 2. Instruction: 00001004. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 a0 8a e0          	: add sl, sl, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 20 8a e0          	: add r2, sl, r7
 >> Lifespan countdown: 2. (0x80000f48)
 >> Lifespan countdown: 1. (0x80000f4c)
 >> Reverting instruction          :  07 a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 0. Instruction: 00001011. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f60
 >> Updated                     : 0x0000000080000f64
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 90 e0 e1          	: mvn sb, fp
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 90 e0 e1          	: mvn sb, r8
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 90 e0 e1          	: mvn sb, lr
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 90 e0 e1          	: mvn sb, r2
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 90 e0 e1          	: mvn sb, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 90 e0 e1          	: mvn sb, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 90 e0 e1          	: mvn sb, sl, asr #32
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 90 e0 e1          	: mvn sb, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 91 e0 e1          	: mvn sb, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 92 e0 e1          	: mvn sb, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 94 e0 e1          	: mvn sb, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 98 e0 e1          	: mvn sb, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 80 e0 e1          	: mvn r8, sl
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a b0 e0 e1          	: mvn fp, sl
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000003719cb77, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1019.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a d0 e0 e1          	: mvn sp, sl
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f60. Hit: 1. Lifespan: 2. Instruction: 00001011. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 90 e0 e1          	: mvn sb, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 10 e0 e1          	: mvn r1, sl
 >> Lifespan countdown: 2. (0x80000f64)
 >> Lifespan countdown: 1. (0x80000f68)
 >> Reverting instruction          :  0a 90 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 0. Instruction: 00001021. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f88
 >> Updated                     : 0x0000000080000f8c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x1
 >> Updated instruction            :  6b ab 8c e0          	: add sl, ip, fp, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x2
 >> Updated instruction            :  68 ab 8c e0          	: add sl, ip, r8, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x4
 >> Updated instruction            :  6e ab 8c e0          	: add sl, ip, lr, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x8
 >> Updated instruction            :  62 ab 8c e0          	: add sl, ip, r2, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x10
 >> Updated instruction            :  7a ab 8c e0          	: add sl, ip, sl, ror fp
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x20
 >> Updated instruction            :  4a ab 8c e0          	: add sl, ip, sl, asr #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x40
 >> Updated instruction            :  2a ab 8c e0          	: add sl, ip, sl, lsr #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x80
 >> Updated instruction            :  ea ab 8c e0          	: add sl, ip, sl, ror #23
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x100
 >> Updated instruction            :  6a aa 8c e0          	: add sl, ip, sl, ror #20
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x200
 >> Updated instruction            :  6a a9 8c e0          	: add sl, ip, sl, ror #18
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x400
 >> Updated instruction            :  6a af 8c e0          	: add sl, ip, sl, ror #30
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x800
 >> Updated instruction            :  6a a3 8c e0          	: add sl, ip, sl, ror #6
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x1000
 >> Updated instruction            :  6a bb 8c e0          	: add fp, ip, sl, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x69c15541, value: 0x90dd37d9!! Count 1026 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1025.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x2000
 >> Updated instruction            :  6a 8b 8c e0          	: add r8, ip, sl, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x4000
 >> Updated instruction            :  6a eb 8c e0          	: add lr, ip, sl, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f88. Hit: 1. Lifespan: 2. Instruction: 00001021. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  6a ab 8c e0          	: add sl, ip, sl, ror #22
 >> Mask                           :  0x8000
 >> Updated instruction            :  6a 2b 8c e0          	: add r2, ip, sl, ror #22
 >> Lifespan countdown: 2. (0x80000f8c)
 >> Lifespan countdown: 1. (0x80000f90)
 >> Reverting instruction          :  6a ab 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 0. Instruction: 00001031. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fb0
 >> Updated                     : 0x0000000080000fb4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 80 28 e0          	: eor r8, r8, fp
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 80 28 e0          	: eor r8, r8, r8
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 80 28 e0          	: eor r8, r8, lr
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 80 28 e0          	: eor r8, r8, r2
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 80 28 e0          	: eor r8, r8, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 80 28 e0          	: eor r8, r8, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 80 28 e0          	: eor r8, r8, sl, asr #32
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 80 28 e0          	: eor r8, r8, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 81 28 e0          	: eor r8, r8, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 82 28 e0          	: eor r8, r8, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 84 28 e0          	: eor r8, r8, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 88 28 e0          	: eor r8, r8, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 90 28 e0          	: eor sb, r8, sl
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a a0 28 e0          	: eor sl, r8, sl
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a c0 28 e0          	: eor ip, r8, sl
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb0. Hit: 1. Lifespan: 2. Instruction: 00001031. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 28 e0          	: eor r8, r8, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 00 28 e0          	: eor r0, r8, sl
 >> Lifespan countdown: 2. (0x80000fb4)
 >> Lifespan countdown: 1. (0x80000fb8)
 >> Reverting instruction          :  0a 80 28 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 0. Instruction: 00001037. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fc8
 >> Updated                     : 0x0000000080000fcc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x1
 >> Updated instruction            :  5f fd ff 1a          	: bne #0x584
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x2
 >> Updated instruction            :  5c fd ff 1a          	: bne #0x578
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x4
 >> Updated instruction            :  5a fd ff 1a          	: bne #0x570
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x8
 >> Updated instruction            :  56 fd ff 1a          	: bne #0x560
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x10
 >> Updated instruction            :  4e fd ff 1a          	: bne #0x540
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x20
 >> Updated instruction            :  7e fd ff 1a          	: bne #0x600
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x40
 >> Updated instruction            :  1e fd ff 1a          	: bne #0x480
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x80
 >> Updated instruction            :  de fd ff 1a          	: bne #0x780
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x100
 >> Updated instruction            :  5e fc ff 1a          	: bne #0x180
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x200
 >> Updated instruction            :  5e ff ff 1a          	: bne #0xd80
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x400
 >> Updated instruction            :  5e f9 ff 1a          	: bne #0xfffff580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x800
 >> Updated instruction            :  5e f5 ff 1a          	: bne #0xffffe580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x1000
 >> Updated instruction            :  5e ed ff 1a          	: bne #0xffffc580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x2000
 >> Updated instruction            :  5e dd ff 1a          	: bne #0xffff8580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x4000
 >> Updated instruction            :  5e bd ff 1a          	: bne #0xffff0580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fc8. Hit: 1. Lifespan: 2. Instruction: 00001037. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  5e fd ff 1a          	: bne #0x580
 >> Mask                           :  0x8000
 >> Updated instruction            :  5e 7d ff 1a          	: bne #0xfffe0580
 >> Lifespan countdown: 2. (0x80000fcc)
 >> Lifespan countdown: 1. (0x80000fd0)
 >> Reverting instruction          :  5e fd ff 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 0. Instruction: 00001046. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fec
 >> Updated                     : 0x0000000080000ff0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x1
 >> Updated instruction            :  15 30 82 e5          	: str r3, [r2, #0x15]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x2
 >> Updated instruction            :  16 30 82 e5          	: str r3, [r2, #0x16]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x4
 >> Updated instruction            :  10 30 82 e5          	: str r3, [r2, #0x10]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x8
 >> Updated instruction            :  1c 30 82 e5          	: str r3, [r2, #0x1c]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x10
 >> Updated instruction            :  04 30 82 e5          	: str r3, [r2, #4]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x20
 >> Updated instruction            :  34 30 82 e5          	: str r3, [r2, #0x34]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x40
 >> Updated instruction            :  54 30 82 e5          	: str r3, [r2, #0x54]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x80
 >> Updated instruction            :  94 30 82 e5          	: str r3, [r2, #0x94]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x100
 >> Updated instruction            :  14 31 82 e5          	: str r3, [r2, #0x114]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110074, value: 0x79f3a9fb!! Count 1047 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1046.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x200
 >> Updated instruction            :  14 32 82 e5          	: str r3, [r2, #0x214]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110174, value: 0x79f3a9fb!! Count 1047 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1046.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x400
 >> Updated instruction            :  14 34 82 e5          	: str r3, [r2, #0x414]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110374, value: 0x79f3a9fb!! Count 1047 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1046.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x800
 >> Updated instruction            :  14 38 82 e5          	: str r3, [r2, #0x814]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110774, value: 0x79f3a9fb!! Count 1047 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1046.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x1000
 >> Updated instruction            :  14 20 82 e5          	: str r2, [r2, #0x14]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x2000
 >> Updated instruction            :  14 10 82 e5          	: str r1, [r2, #0x14]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x4000
 >> Updated instruction            :  14 70 82 e5          	: str r7, [r2, #0x14]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fec. Hit: 1. Lifespan: 2. Instruction: 00001046. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  14 30 82 e5          	: str r3, [r2, #0x14]
 >> Mask                           :  0x8000
 >> Updated instruction            :  14 b0 82 e5          	: str fp, [r2, #0x14]
 >> Lifespan countdown: 2. (0x80000ff0)
 >> Lifespan countdown: 1. (0x80000ff4)
 >> Reverting instruction          :  14 30 82 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 0. Instruction: 00001055. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010e4
 >> Updated                     : 0x00000000800010e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  22 34 a0 e1          	: lsr r3, r2, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  21 34 a0 e1          	: lsr r3, r1, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  27 34 a0 e1          	: lsr r3, r7, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  2b 34 a0 e1          	: lsr r3, fp, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  33 34 a0 e1          	: lsr r3, r3, r4
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  03 34 a0 e1          	: lsl r3, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  63 34 a0 e1          	: ror r3, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  a3 34 a0 e1          	: lsr r3, r3, #9
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  23 35 a0 e1          	: lsr r3, r3, #0xa
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  23 36 a0 e1          	: lsr r3, r3, #0xc
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  23 30 a0 e1          	: lsr r3, r3, #0x20
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  23 3c a0 e1          	: lsr r3, r3, #0x18
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  23 24 a0 e1          	: lsr r2, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  23 14 a0 e1          	: lsr r1, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  23 74 a0 e1          	: lsr r7, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e4. Hit: 1. Lifespan: 2. Instruction: 00001055. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  23 34 a0 e1          	: lsr r3, r3, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  23 b4 a0 e1          	: lsr fp, r3, #8
 >> Lifespan countdown: 2. (0x800010e8)
 >> Lifespan countdown: 1. (0x800010ec)
 >> Reverting instruction          :  23 34 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000002578d6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 0. Instruction: 00001063. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001104
 >> Updated                     : 0x0000000080001108
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 30 94 e5          	: ldr r3, [r4, #0xd]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 30 94 e5          	: ldr r3, [r4, #0xe]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x4
 >> Updated instruction            :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x8
 >> Updated instruction            :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 30 94 e5          	: ldr r3, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 30 94 e5          	: ldr r3, [r4, #0x2c]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 30 94 e5          	: ldr r3, [r4, #0x4c]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 30 94 e5          	: ldr r3, [r4, #0x8c]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 31 94 e5          	: ldr r3, [r4, #0x10c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011006c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1063.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 32 94 e5          	: ldr r3, [r4, #0x20c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011016c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1063.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 34 94 e5          	: ldr r3, [r4, #0x40c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011036c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1063.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 38 94 e5          	: ldr r3, [r4, #0x80c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008011076c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1063.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 20 94 e5          	: ldr r2, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 10 94 e5          	: ldr r1, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 70 94 e5          	: ldr r7, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001104. Hit: 1. Lifespan: 2. Instruction: 00001063. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c b0 94 e5          	: ldr fp, [r4, #0xc]
 >> Lifespan countdown: 2. (0x80001108)
 >> Lifespan countdown: 1. (0x8000110c)
 >> Reverting instruction          :  0c 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c78cb6b2, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 0. Instruction: 00001070. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001120
 >> Updated                     : 0x0000000080001124
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  11 30 94 e5          	: ldr r3, [r4, #0x11]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  12 30 94 e5          	: ldr r3, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  14 30 94 e5          	: ldr r3, [r4, #0x14]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  18 30 94 e5          	: ldr r3, [r4, #0x18]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  00 30 94 e5          	: ldr r3, [r4]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  30 30 94 e5          	: ldr r3, [r4, #0x30]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  50 30 94 e5          	: ldr r3, [r4, #0x50]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  90 30 94 e5          	: ldr r3, [r4, #0x90]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  10 31 94 e5          	: ldr r3, [r4, #0x110]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110070, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1070.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  10 32 94 e5          	: ldr r3, [r4, #0x210]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110170, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1070.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  10 34 94 e5          	: ldr r3, [r4, #0x410]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110370, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1070.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  10 38 94 e5          	: ldr r3, [r4, #0x810]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110770, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1070.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 20 94 e5          	: ldr r2, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 10 94 e5          	: ldr r1, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 70 94 e5          	: ldr r7, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001120. Hit: 1. Lifespan: 2. Instruction: 00001070. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 b0 94 e5          	: ldr fp, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001124)
 >> Lifespan countdown: 1. (0x80001128)
 >> Reverting instruction          :  10 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000760cd6f1, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 0. Instruction: 00001077. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000113c
 >> Updated                     : 0x0000000080001140
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x1
 >> Updated instruction            :  12 30 d4 e5          	: ldrb r3, [r4, #0x12]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x2
 >> Updated instruction            :  11 30 d4 e5          	: ldrb r3, [r4, #0x11]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x4
 >> Updated instruction            :  17 30 d4 e5          	: ldrb r3, [r4, #0x17]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x8
 >> Updated instruction            :  1b 30 d4 e5          	: ldrb r3, [r4, #0x1b]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x10
 >> Updated instruction            :  03 30 d4 e5          	: ldrb r3, [r4, #3]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x20
 >> Updated instruction            :  33 30 d4 e5          	: ldrb r3, [r4, #0x33]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x40
 >> Updated instruction            :  53 30 d4 e5          	: ldrb r3, [r4, #0x53]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x80
 >> Updated instruction            :  93 30 d4 e5          	: ldrb r3, [r4, #0x93]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x100
 >> Updated instruction            :  13 31 d4 e5          	: ldrb r3, [r4, #0x113]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110073, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1077.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x200
 >> Updated instruction            :  13 32 d4 e5          	: ldrb r3, [r4, #0x213]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110173, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1077.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x400
 >> Updated instruction            :  13 34 d4 e5          	: ldrb r3, [r4, #0x413]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110373, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1077.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x800
 >> Updated instruction            :  13 38 d4 e5          	: ldrb r3, [r4, #0x813]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110773, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1077.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x1000
 >> Updated instruction            :  13 20 d4 e5          	: ldrb r2, [r4, #0x13]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x2000
 >> Updated instruction            :  13 10 d4 e5          	: ldrb r1, [r4, #0x13]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x4000
 >> Updated instruction            :  13 70 d4 e5          	: ldrb r7, [r4, #0x13]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000113c. Hit: 1. Lifespan: 2. Instruction: 00001077. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  13 30 d4 e5          	: ldrb r3, [r4, #0x13]
 >> Mask                           :  0x8000
 >> Updated instruction            :  13 b0 d4 e5          	: ldrb fp, [r4, #0x13]
 >> Lifespan countdown: 2. (0x80001140)
 >> Lifespan countdown: 1. (0x80001144)
 >> Reverting instruction          :  13 30 d4 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000062, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 0. Instruction: 00001085. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000115c
 >> Updated                     : 0x0000000080001160
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x8
 >> Updated instruction            :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 30 c5 e5          	: strb r3, [r5, #0x1e]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 30 c5 e5          	: strb r3, [r5, #0x2e]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 30 c5 e5          	: strb r3, [r5, #0x4e]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 30 c5 e5          	: strb r3, [r5, #0x8e]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 31 c5 e5          	: strb r3, [r5, #0x10e]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005e, value: 0xf3!! Count 1086 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1085.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 32 c5 e5          	: strb r3, [r5, #0x20e]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015e, value: 0xf3!! Count 1086 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1085.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 34 c5 e5          	: strb r3, [r5, #0x40e]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035e, value: 0xf3!! Count 1086 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1085.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 38 c5 e5          	: strb r3, [r5, #0x80e]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075e, value: 0xf3!! Count 1086 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1085.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 20 c5 e5          	: strb r2, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 10 c5 e5          	: strb r1, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 70 c5 e5          	: strb r7, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000115c. Hit: 1. Lifespan: 2. Instruction: 00001085. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e b0 c5 e5          	: strb fp, [r5, #0xe]
 >> Lifespan countdown: 2. (0x80001160)
 >> Lifespan countdown: 1. (0x80001164)
 >> Reverting instruction          :  0e 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 0. Instruction: 00001092. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000080
 >> Updated                     : 0x0000000080000084
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f 01          	: bxeq pc
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f 01          	: bxeq ip
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f 01          	: bxeq sl
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f 01          	: bxeq r6
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f 01          	: blxeq lr
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f 01          	: qsubeq pc, lr, pc
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000080. Hit: 2. Lifespan: 2. Instruction: 00001092. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f 01          	: bxeq lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f 01          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000084)
 >> Lifespan countdown: 1. (0x80000088)
 >> Reverting instruction          :  1e ff 2f 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 0. Instruction: 00001100. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000a0
 >> Updated                     : 0x00000000800000a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 5e e1          	: cmp lr, sp
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 5e e1          	: cmp lr, lr
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 5e e1          	: cmp lr, r8
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 5e e1          	: cmp lr, r4
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 5e e1          	: cmp lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 5e e1          	: cmp lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 5e e1          	: cmp lr, ip, asr #32
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 5e e1          	: cmp lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 5e e1          	: cmp lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 5e e1          	: cmp lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 5e e1          	: cmp lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 5e e1          	: cmp lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 2. Lifespan: 2. Instruction: 00001100. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 0. Instruction: 00001106. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000e8
 >> Updated                     : 0x00000000800000ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 c0 a0 e3          	: mov ip, #1
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 c0 a0 e3          	: mov ip, #2
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 c0 a0 e3          	: mov ip, #4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 c0 a0 e3          	: mov ip, #8
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 c0 a0 e3          	: mov ip, #0x10
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 c0 a0 e3          	: mov ip, #0x20
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 c0 a0 e3          	: mov ip, #0x40
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 c0 a0 e3          	: mov ip, #0x80
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 c1 a0 e3          	: mov ip, #0, #2
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 c2 a0 e3          	: mov ip, #0, #4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 c4 a0 e3          	: mov ip, #0, #8
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 c8 a0 e3          	: mov ip, #0, #16
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 d0 a0 e3          	: mov sp, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 e0 a0 e3          	: mov lr, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 80 a0 e3          	: mov r8, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000e8. Hit: 2. Lifespan: 2. Instruction: 00001106. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 c0 a0 e3          	: mov ip, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 40 a0 e3          	: mov r4, #0
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  00 c0 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 0. Instruction: 00001112. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000100
 >> Updated                     : 0x0000000080000104
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 cc df e7          	: bfi ip, r0, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 cc df e7          	: bfi ip, r3, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 cc df e7          	: bfi ip, r5, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 cc df e7          	: bfi ip, sb, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 cc df e7          	: ldrb ip, [pc, r1, lsl #24]
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 cc df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1112.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 cc df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1112.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 cc df e7          	: bfi ip, r1, #0x19, #7
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 cd df e7          	: bfi ip, r1, #0x1a, #6
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 ce df e7          	: bfi ip, r1, #0x1c, #4
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 c8 df e7          	: bfi ip, r1, #0x10, #0x10
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 c4 df e7          	: bfi ip, r1, #8, #0x18
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 dc df e7          	: bfi sp, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010ff28, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 ec df e7          	: bfi lr, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 8c df e7          	: bfi r8, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000100. Hit: 2. Lifespan: 2. Instruction: 00001112. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 cc df e7          	: bfi ip, r1, #0x18, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 4c df e7          	: bfi r4, r1, #0x18, #8
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  11 cc df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 0. Instruction: 00001120. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110068, value: 0x0!! Count 1125 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1124.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110168, value: 0x0!! Count 1125 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1124.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110368, value: 0x0!! Count 1125 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1124.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110768, value: 0x0!! Count 1125 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1124.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 11. Lifespan: 2. Instruction: 00001120. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 0. Instruction: 00001131. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 14. Lifespan: 2. Instruction: 00001131. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 0. Instruction: 00001139. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 16. Lifespan: 2. Instruction: 00001139. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 0. Instruction: 00001146. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1301 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1300.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1150 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1149.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 17. Lifespan: 2. Instruction: 00001146. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1146.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 0. Instruction: 00001154. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1158 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1157.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 19. Lifespan: 2. Instruction: 00001154. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1154.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 0. Instruction: 00001162. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1166 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1165.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 21. Lifespan: 2. Instruction: 00001162. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1162.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 0. Instruction: 00001170. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1293 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1174 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 23. Lifespan: 2. Instruction: 00001170. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1170.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 0. Instruction: 00001177. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 25. Lifespan: 2. Instruction: 00001177. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 0. Instruction: 00001184. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110028, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100a8, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101a8, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103a8, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107a8, value: 0x0!! Count 1189 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 27. Lifespan: 2. Instruction: 00001184. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 0. Instruction: 00001193. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 29. Lifespan: 2. Instruction: 00001193. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 0. Instruction: 00001198. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1269 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1268.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1202 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1201.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 30. Lifespan: 2. Instruction: 00001198. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 0. Instruction: 00001207. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 33. Lifespan: 2. Instruction: 00001207. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 0. Instruction: 00001215. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 35. Lifespan: 2. Instruction: 00001215. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 0. Instruction: 00001224. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110010, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110050, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100d0, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101d0, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103d0, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107d0, value: 0x0!! Count 1229 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1228.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 37. Lifespan: 2. Instruction: 00001224. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 0. Instruction: 00001232. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110018, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110058, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100d8, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101d8, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103d8, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107d8, value: 0x0!! Count 1237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 39. Lifespan: 2. Instruction: 00001232. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 0. Instruction: 00001241. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 41. Lifespan: 2. Instruction: 00001241. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 0. Instruction: 00001247. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 43. Lifespan: 2. Instruction: 00001247. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 0. Instruction: 00001256. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110010, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110030, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110070, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100f0, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101f0, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103f0, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107f0, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 45. Lifespan: 2. Instruction: 00001256. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 0. Instruction: 00001262. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110019, value: 0x0!! Count 1273 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110019, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110019, value: 0x0!! Count 1297 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1266 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1265.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 46. Lifespan: 2. Instruction: 00001262. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1262.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 0. Instruction: 00001270. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000128
 >> Updated                     : 0x000000008000012c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 e0 4e e0          	: sub lr, lr, r2
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 e0 4e e0          	: sub lr, lr, r1
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 e0 4e e0          	: sub lr, lr, r7
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b e0 4e e0          	: sub lr, lr, fp
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 e0 4e e0          	: sub lr, lr, r3, lsl r0
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 e0 4e e0          	: sub lr, lr, r3, lsr #32
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 e0 4e e0          	: sub lr, lr, r3, asr #32
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 e0 4e e0          	: sub lr, lr, r3, lsl #1
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 e1 4e e0          	: sub lr, lr, r3, lsl #2
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 e2 4e e0          	: sub lr, lr, r3, lsl #4
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 e4 4e e0          	: sub lr, lr, r3, lsl #8
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 e8 4e e0          	: sub lr, lr, r3, lsl #16
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 f0 4e e0          	: sub pc, lr, r3
 >!  Erm -  fetching from unmapped memory, address: 0xfffffffe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1270.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 c0 4e e0          	: sub ip, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 a0 4e e0          	: sub sl, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000128. Hit: 2. Lifespan: 2. Instruction: 00001270. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 4e e0          	: sub lr, lr, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 60 4e e0          	: sub r6, lr, r3
 >> Lifespan countdown: 2. (0x8000012c)
 >> Lifespan countdown: 1. (0x800012dc)
 >> Reverting instruction          :  03 e0 4e e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 0. Instruction: 00001274. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012e4
 >> Updated                     : 0x00000000800012e8
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 00 1a          	: bne #0x1010
 >> Lifespan countdown: 2. (0x800012f4)
 >> Lifespan countdown: 1. (0x80001234)
 >> Reverting instruction          :  03 00 00 1a 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 00 1a          	: bne #0x100c
 >> Lifespan countdown: 2. (0x800012f0)
 >> Lifespan countdown: 1. (0x800012f4)
 >> Reverting instruction          :  03 00 00 1a 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 00 1a          	: bne #0x1024
 >> Lifespan countdown: 2. (0x80001308)
 >> Lifespan countdown: 1. (0x8000130c)
 >> Reverting instruction          :  03 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 00 1a          	: bne #0x1034
 >> Lifespan countdown: 2. (0x80001318)
 >> Lifespan countdown: 1. (0x8000131c)
 >> Reverting instruction          :  03 00 00 1a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 00 1a          	: bne #0x1054
 >> Lifespan countdown: 2. (0x80001338)
 >> Lifespan countdown: 1. (0x8000133c)
 >> Reverting instruction          :  03 00 00 1a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1281.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 00 1a          	: bne #0x1094
 >> Lifespan countdown: 2. (0x80001378)
 >> Lifespan countdown: 1. (0x8000137c)
 >> Reverting instruction          :  03 00 00 1a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xfffffbfe, value: 0x0!! Count 1284 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1283.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 00 1a          	: bne #0x1114
 >> Lifespan countdown: 2. (0x800013f8)
 >> Lifespan countdown: 1. (0x800013fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 00 1a          	: bne #0x1214
 >> Lifespan countdown: 2. (0x800014f8)
 >> Lifespan countdown: 1. (0x800014fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1277.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 00 1a          	: bne #0x1414
 >> Lifespan countdown: 2. (0x800016f8)
 >> Lifespan countdown: 1. (0x800016fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffffff, value: 0xb!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 00 1a          	: bne #0x1814
 >> Lifespan countdown: 2. (0x80001af8)
 >> Lifespan countdown: 1. (0x80001afc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x81f1eb20, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1281.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 00 1a          	: bne #0x2014
 >> Lifespan countdown: 2. (0x800022f8)
 >> Lifespan countdown: 1. (0x800022fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 00 1a          	: bne #0x3014
 >> Lifespan countdown: 2. (0x800032f8)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1275.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 00 1a          	: bne #0x5014
 >> Lifespan countdown: 2. (0x800052f8)
 >> Lifespan countdown: 1. (0x800052fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 28732.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 00 1a          	: bne #0x9014
 >> Lifespan countdown: 2. (0x800092f8)
 >> Lifespan countdown: 1. (0x800092fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 24636.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 00 1a          	: bne #0x11014
 >> Lifespan countdown: 2. (0x800112f8)
 >> Lifespan countdown: 1. (0x800112fc)
 >> Reverting instruction          :  03 00 00 1a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 16444.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012e4. Hit: 1. Lifespan: 2. Instruction: 00001274. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 1a          	: bne #0x1014
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 00 1a          	: bne #0x21014
 >!  Erm -  fetching from unmapped memory, address: 0x800212f8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1274.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 0. Instruction: 00001296. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001310
 >> Updated                     : 0x0000000080001314
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x1
 >> Updated instruction            :  21 00 9f e5          	: ldr r0, [pc, #0x21]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x2
 >> Updated instruction            :  22 00 9f e5          	: ldr r0, [pc, #0x22]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x4
 >> Updated instruction            :  24 00 9f e5          	: ldr r0, [pc, #0x24]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x8
 >> Updated instruction            :  28 00 9f e5          	: ldr r0, [pc, #0x28]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x10
 >> Updated instruction            :  30 00 9f e5          	: ldr r0, [pc, #0x30]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x20
 >> Updated instruction            :  00 00 9f e5          	: ldr r0, [pc]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x40
 >> Updated instruction            :  60 00 9f e5          	: ldr r0, [pc, #0x60]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 00 9f e5          	: ldr r0, [pc, #0xa0]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x100
 >> Updated instruction            :  20 01 9f e5          	: ldr r0, [pc, #0x120]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x200
 >> Updated instruction            :  20 02 9f e5          	: ldr r0, [pc, #0x220]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x400
 >> Updated instruction            :  20 04 9f e5          	: ldr r0, [pc, #0x420]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x800
 >> Updated instruction            :  20 08 9f e5          	: ldr r0, [pc, #0x820]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 10 9f e5          	: ldr r1, [pc, #0x20]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 20 9f e5          	: ldr r2, [pc, #0x20]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 40 9f e5          	: ldr r4, [pc, #0x20]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001310. Hit: 1. Lifespan: 2. Instruction: 00001296. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 00 9f e5          	: ldr r0, [pc, #0x20]
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 80 9f e5          	: ldr r8, [pc, #0x20]
 >> Lifespan countdown: 2. (0x80001314)
 >> Lifespan countdown: 1. (0x80001318)
 >> Reverting instruction          :  20 00 9f e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02
