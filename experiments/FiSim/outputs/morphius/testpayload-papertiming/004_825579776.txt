 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Filename              : /home/kit/unicorn-work/FiSim/bl1.elf
 >> Stack Address         : 0x0000000080100000
 >> Stack Size            : 0x0000000000010000
 >> Code Start Address    : 0x0000000080000000
 >> Code End Address      : 0x000000008000132c
 >> Code Offset           : 0x0000000000000054
 >> Fault Start Address   : 0x0000000080000000
 >> Fault End Address     : 0x000000008000132c
 >> Memory Address        : 0x0000000080000000
 >> Memory Size           : 0x0000000000020000
 >> Other Memory Address  : 0x0000000032000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000012000000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040010800
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000040004400
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x000000000aa01000
 >> Other Memory Size     : 0x0000000000001000
 >> Other Memory Address  : 0x0000000011000000
 >> Other Memory Size     : 0x0000000000001000
 >> Hard stop             : 0x000000000000124c





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 0. Instruction: 00000008. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001274
 >> Updated                     : 0x0000000080001278
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x1
 >> Updated instruction            :  c1 d0 4d e2          	: sub sp, sp, #0xc1
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x2
 >> Updated instruction            :  c2 d0 4d e2          	: sub sp, sp, #0xc2
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x4
 >> Updated instruction            :  c4 d0 4d e2          	: sub sp, sp, #0xc4
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x8
 >> Updated instruction            :  c8 d0 4d e2          	: sub sp, sp, #0xc8
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x10
 >> Updated instruction            :  d0 d0 4d e2          	: sub sp, sp, #0xd0
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x20
 >> Updated instruction            :  e0 d0 4d e2          	: sub sp, sp, #0xe0
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x40
 >> Updated instruction            :  80 d0 4d e2          	: sub sp, sp, #0x80
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x80
 >> Updated instruction            :  40 d0 4d e2          	: sub sp, sp, #0x40
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x100
 >> Updated instruction            :  c0 d1 4d e2          	: sub sp, sp, #192, #2
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x200
 >> Updated instruction            :  c0 d2 4d e2          	: sub sp, sp, #192, #4
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x400
 >> Updated instruction            :  c0 d4 4d e2          	: sub sp, sp, #192, #8
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010fff4, value: 0x8010fffc!! Count 11 Skipping to end.
 >> Run result: Fault errored program - last instruction: 10.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x800
 >> Updated instruction            :  c0 d8 4d e2          	: sub sp, sp, #192, #16
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f50fff4, value: 0x8010fffc!! Count 11 Skipping to end.
 >> Run result: Fault errored program - last instruction: 10.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x1000
 >> Updated instruction            :  c0 c0 4d e2          	: sub ip, sp, #0xc0
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x2000
 >> Updated instruction            :  c0 f0 4d e2          	: sub pc, sp, #0xc0
 >> Lifespan countdown: 2. (0x8010ff38)
 >> Lifespan countdown: 1. (0x8010ff3c)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 58.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x4000
 >> Updated instruction            :  c0 90 4d e2          	: sub sb, sp, #0xc0
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001274. Hit: 1. Lifespan: 2. Instruction: 00000008. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  c0 d0 4d e2          	: sub sp, sp, #0xc0
 >> Mask                           :  0x8000
 >> Updated instruction            :  c0 50 4d e2          	: sub r5, sp, #0xc0
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  c0 d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 0. Instruction: 00000011. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000414
 >> Updated                     : 0x0000000080000418
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 b0 8d e2          	: add fp, sp, #1
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80103e, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 b0 8d e2          	: add fp, sp, #2
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7f4f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 b0 8d e2          	: add fp, sp, #4
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 b0 8d e2          	: add fp, sp, #8
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 b0 8d e2          	: add fp, sp, #0x10
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 b0 8d e2          	: add fp, sp, #0x40
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 b0 8d e2          	: add fp, sp, #0x80
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xffffff3f, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 b1 8d e2          	: add fp, sp, #0, #2
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 b2 8d e2          	: add fp, sp, #0, #4
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 b4 8d e2          	: add fp, sp, #0, #8
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 b8 8d e2          	: add fp, sp, #0, #16
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 a0 8d e2          	: add sl, sp, #0
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 90 8d e2          	: add sb, sp, #0
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 f0 8d e2          	: add pc, sp, #0
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000414. Hit: 1. Lifespan: 2. Instruction: 00000011. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 b0 8d e2          	: add fp, sp, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 30 8d e2          	: add r3, sp, #0
 >> Lifespan countdown: 2. (0x80000418)
 >> Lifespan countdown: 1. (0x8000041c)
 >> Reverting instruction          :  00 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7fffff67, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 0. Instruction: 00000014. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000420
 >> Updated                     : 0x0000000080000424
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 0b e5          	: str r3, [fp, #-9]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x120004, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 0b e5          	: str r3, [fp, #-0xa]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1204, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 0b e5          	: str r3, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 0b e5          	: str r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 0b e5          	: str r3, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 0b e5          	: str r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 0b e5          	: str r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 0b e5          	: str r3, [fp, #-0x88]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 0b e5          	: str r3, [fp, #-0x108]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 0b e5          	: str r3, [fp, #-0x208]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 0b e5          	: str r3, [fp, #-0x408]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 0b e5          	: str r3, [fp, #-0x808]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 0b e5          	: str r2, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 0b e5          	: str r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 0b e5          	: str r7, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4, value: 0x1!! Count 18 Skipping to end.
 >> Run result: Fault errored program - last instruction: 17.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000420. Hit: 1. Lifespan: 2. Instruction: 00000014. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 0b e5          	: str r3, [fp, #-8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 0b e5          	: str fp, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000424)
 >> Lifespan countdown: 1. (0x80000428)
 >> Reverting instruction          :  08 30 0b e5 
 >> Reached max instruction count: 3000000. This usually occurs when the program ends up in an infinite loop. Consider reverting your fault.
 >> Run result: Max instructions reached- exiting.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 0. Instruction: 00000027. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000454
 >> Updated                     : 0x0000000080000458
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x67452301!! Count 35 Skipping to end.
 >> Run result: Fault errored program - last instruction: 34.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1
 >> Updated instruction            :  1f ff 2f e1          	: bx pc
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x67452301!! Count 34 Skipping to end.
 >> Run result: Fault errored program - last instruction: 33.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2
 >> Updated instruction            :  1c ff 2f e1          	: bx ip
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4
 >> Updated instruction            :  1a ff 2f e1          	: bx sl
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8
 >> Updated instruction            :  16 ff 2f e1          	: bx r6
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x10
 >> Updated instruction            :  0e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x80000458)
 >> Lifespan countdown: 1. (0x8000045c)
 >> Reverting instruction          :  1e ff 2f e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x67452301!! Count 35 Skipping to end.
 >> Run result: Fault errored program - last instruction: 34.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x20
 >> Updated instruction            :  3e ff 2f e1          	: blx lr
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x40
 >> Updated instruction            :  5e ff 2f e1          	: qsub pc, lr, pc
 >!  Erm -  fetching from unmapped memory, address: 0xe20, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x80
 >> Updated instruction            :  9e ff 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  Erm -  fetching from unmapped memory, address: 0xe3022300, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x100
 >> Updated instruction            :  1e fe 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x200
 >> Updated instruction            :  1e fd 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x400
 >> Updated instruction            :  1e fb 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x800
 >> Updated instruction            :  1e f7 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e ef 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e df 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e bf 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000454. Hit: 1. Lifespan: 2. Instruction: 00000027. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e ff 2f e1          	: bx lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 7f 2f e1          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >> Lifespan countdown: 2. (0x8000127c)
 >> Lifespan countdown: 1. (0x80001280)
 >> Reverting instruction          :  1e ff 2f e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 0. Instruction: 00000034. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003c0
 >> Updated                     : 0x00000000800003c4
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x1
 >> Updated instruction            :  11 10 4b e2          	: sub r1, fp, #0x11
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x2
 >> Updated instruction            :  12 10 4b e2          	: sub r1, fp, #0x12
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x4
 >> Updated instruction            :  14 10 4b e2          	: sub r1, fp, #0x14
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x8
 >> Updated instruction            :  18 10 4b e2          	: sub r1, fp, #0x18
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000001fff0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 67.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x10
 >> Updated instruction            :  00 10 4b e2          	: sub r1, fp, #0
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  Erm -  fetching from unmapped memory, address: 0x20000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 71.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x20
 >> Updated instruction            :  30 10 4b e2          	: sub r1, fp, #0x30
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x40
 >> Updated instruction            :  50 10 4b e2          	: sub r1, fp, #0x50
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x80
 >> Updated instruction            :  90 10 4b e2          	: sub r1, fp, #0x90
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x100
 >> Updated instruction            :  10 11 4b e2          	: sub r1, fp, #16, #2
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000001ff3f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 72.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x200
 >> Updated instruction            :  10 12 4b e2          	: sub r1, fp, #16, #4
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1, value: 0x20000!! Count 82 Skipping to end.
 >> Run result: Fault errored program - last instruction: 81.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x400
 >> Updated instruction            :  10 14 4b e2          	: sub r1, fp, #16, #8
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7010ff34, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x800
 >> Updated instruction            :  10 18 4b e2          	: sub r1, fp, #16, #16
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 00 4b e2          	: sub r0, fp, #0x10
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 30 4b e2          	: sub r3, fp, #0x10
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 50 4b e2          	: sub r5, fp, #0x10
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003c0. Hit: 1. Lifespan: 2. Instruction: 00000034. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 10 4b e2          	: sub r1, fp, #0x10
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 90 4b e2          	: sub sb, fp, #0x10
 >> Lifespan countdown: 2. (0x800003c4)
 >> Lifespan countdown: 1. (0x800003c8)
 >> Reverting instruction          :  10 10 4b e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x0, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 0. Instruction: 00000040. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000338
 >> Updated                     : 0x000000008000033c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1
 >> Updated instruction            :  0d d0 4d e2          	: sub sp, sp, #0xd
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2
 >> Updated instruction            :  0e d0 4d e2          	: sub sp, sp, #0xe
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4
 >> Updated instruction            :  08 d0 4d e2          	: sub sp, sp, #8
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8
 >> Updated instruction            :  04 d0 4d e2          	: sub sp, sp, #4
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x10
 >> Updated instruction            :  1c d0 4d e2          	: sub sp, sp, #0x1c
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x20
 >> Updated instruction            :  2c d0 4d e2          	: sub sp, sp, #0x2c
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x40
 >> Updated instruction            :  4c d0 4d e2          	: sub sp, sp, #0x4c
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x80
 >> Updated instruction            :  8c d0 4d e2          	: sub sp, sp, #0x8c
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x100
 >> Updated instruction            :  0c d1 4d e2          	: sub sp, sp, #12, #2
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x200
 >> Updated instruction            :  0c d2 4d e2          	: sub sp, sp, #12, #4
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x400
 >> Updated instruction            :  0c d4 4d e2          	: sub sp, sp, #12, #8
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x800
 >> Updated instruction            :  0c d8 4d e2          	: sub sp, sp, #12, #16
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c c0 4d e2          	: sub ip, sp, #0xc
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c f0 4d e2          	: sub pc, sp, #0xc
 >> Lifespan countdown: 2. (0x8010ff10)
 >> Lifespan countdown: 1. (0x8010ff14)
 >> Reverting instruction          :  0c d0 4d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 100.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 90 4d e2          	: sub sb, sp, #0xc
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000338. Hit: 1. Lifespan: 2. Instruction: 00000040. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c d0 4d e2          	: sub sp, sp, #0xc
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 50 4d e2          	: sub r5, sp, #0xc
 >> Lifespan countdown: 2. (0x8000033c)
 >> Lifespan countdown: 1. (0x80000340)
 >> Reverting instruction          :  0c d0 4d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 0. Instruction: 00000052. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000368
 >> Updated                     : 0x000000008000036c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 93 e5          	: ldr r3, [r3, #1]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 93 e5          	: ldr r3, [r3, #2]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 93 e5          	: ldr r3, [r3, #8]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 93 e5          	: ldr r3, [r3, #0x10]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 93 e5          	: ldr r3, [r3, #0x20]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 93 e5          	: ldr r3, [r3, #0x40]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 93 e5          	: ldr r3, [r3, #0x80]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 93 e5          	: ldr r3, [r3, #0x100]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 93 e5          	: ldr r3, [r3, #0x200]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 93 e5          	: ldr r3, [r3, #0x400]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 93 e5          	: ldr r3, [r3, #0x800]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 93 e5          	: ldr r2, [r3]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 93 e5          	: ldr r1, [r3]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2, value: 0x20000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 93 e5          	: ldr r7, [r3]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000368. Hit: 1. Lifespan: 2. Instruction: 00000052. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 93 e5          	: ldr r3, [r3]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 93 e5          	: ldr fp, [r3]
 >> Lifespan countdown: 2. (0x8000036c)
 >> Lifespan countdown: 1. (0x80000370)
 >> Reverting instruction          :  00 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffffa, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 55.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 0. Instruction: 00000061. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000038c
 >> Updated                     : 0x0000000080000390
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 30 93 e5          	: ldr r3, [r3, #0xd]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 30 93 e5          	: ldr r3, [r3, #0xe]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x4
 >> Updated instruction            :  08 30 93 e5          	: ldr r3, [r3, #8]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x8
 >> Updated instruction            :  04 30 93 e5          	: ldr r3, [r3, #4]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 30 93 e5          	: ldr r3, [r3, #0x1c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 30 93 e5          	: ldr r3, [r3, #0x2c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 30 93 e5          	: ldr r3, [r3, #0x4c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 30 93 e5          	: ldr r3, [r3, #0x8c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 31 93 e5          	: ldr r3, [r3, #0x10c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 32 93 e5          	: ldr r3, [r3, #0x20c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 34 93 e5          	: ldr r3, [r3, #0x40c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 38 93 e5          	: ldr r3, [r3, #0x80c]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 20 93 e5          	: ldr r2, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 10 93 e5          	: ldr r1, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000390)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x20000, value: 0x12000000!! Count 63 Skipping to end.
 >> Run result: Fault errored program - last instruction: 62.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 70 93 e5          	: ldr r7, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x8000038c. Hit: 1. Lifespan: 2. Instruction: 00000061. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 30 93 e5          	: ldr r3, [r3, #0xc]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c b0 93 e5          	: ldr fp, [r3, #0xc]
 >> Lifespan countdown: 2. (0x80000390)
 >> Lifespan countdown: 1. (0x80000394)
 >> Reverting instruction          :  0c 30 93 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000020000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 64.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 0. Instruction: 00000064. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000398
 >> Updated                     : 0x000000008000039c
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 9d e4          	: ldr fp, [sp], #5
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 9d e4          	: ldr fp, [sp], #6
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 9d e4          	: ldr fp, [sp], #0
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 9d e4          	: ldr fp, [sp], #0xc
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 9d e4          	: ldr fp, [sp], #0x14
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 9d e4          	: ldr fp, [sp], #0x24
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 9d e4          	: ldr fp, [sp], #0x44
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 9d e4          	: ldr fp, [sp], #0x84
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 9d e4          	: ldr fp, [sp], #0x104
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 9d e4          	: ldr fp, [sp], #0x204
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 9d e4          	: ldr fp, [sp], #0x404
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 9d e4          	: ldr fp, [sp], #0x804
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 9d e4          	: pop {sl}
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 9d e4          	: pop {sb}
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 9d e4          	: pop {pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 115.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000398. Hit: 1. Lifespan: 2. Instruction: 00000064. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 9d e4          	: pop {r3}
 >> Lifespan countdown: 2. (0x8000039c)
 >> Lifespan countdown: 1. (0x800003cc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 122.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 0. Instruction: 00000069. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800003d8
 >> Updated                     : 0x00000000800003dc
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 c4 15          	: strbne r3, [r4, #1]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 c4 15          	: strbne r3, [r4, #2]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 c4 15          	: strbne r3, [r4, #4]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 c4 15          	: strbne r3, [r4, #8]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 c4 15          	: strbne r3, [r4, #0x10]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 c4 15          	: strbne r3, [r4, #0x20]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 c4 15          	: strbne r3, [r4, #0x40]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 c4 15          	: strbne r3, [r4, #0x80]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 c4 15          	: strbne r3, [r4, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011003b, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 c4 15          	: strbne r3, [r4, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011013b, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 c4 15          	: strbne r3, [r4, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011033b, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 c4 15          	: strbne r3, [r4, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011073b, value: 0x1!! Count 70 Skipping to end.
 >> Run result: Fault errored program - last instruction: 69.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 c4 15          	: strbne r2, [r4]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 c4 15          	: strbne r1, [r4]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 c4 15          	: strbne r7, [r4]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800003d8. Hit: 1. Lifespan: 2. Instruction: 00000069. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 c4 15          	: strbne r3, [r4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 c4 15          	: strbne fp, [r4]
 >> Lifespan countdown: 2. (0x800003dc)
 >> Lifespan countdown: 1. (0x800003e0)
 >> Reverting instruction          :  00 30 c4 15 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 0. Instruction: 00000074. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000128c
 >> Updated                     : 0x0000000080001290
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x1
 >> Updated instruction            :  14 00 00 0a          	: beq #0x1058
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x2
 >> Updated instruction            :  17 00 00 0a          	: beq #0x1064
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x4
 >> Updated instruction            :  11 00 00 0a          	: beq #0x104c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x8
 >> Updated instruction            :  1d 00 00 0a          	: beq #0x107c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x10
 >> Updated instruction            :  05 00 00 0a          	: beq #0x101c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x20
 >> Updated instruction            :  35 00 00 0a          	: beq #0x10dc
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x40
 >> Updated instruction            :  55 00 00 0a          	: beq #0x115c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x80
 >> Updated instruction            :  95 00 00 0a          	: beq #0x125c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x100
 >> Updated instruction            :  15 01 00 0a          	: beq #0x145c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x200
 >> Updated instruction            :  15 02 00 0a          	: beq #0x185c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x400
 >> Updated instruction            :  15 04 00 0a          	: beq #0x205c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x800
 >> Updated instruction            :  15 08 00 0a          	: beq #0x305c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x1000
 >> Updated instruction            :  15 10 00 0a          	: beq #0x505c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x2000
 >> Updated instruction            :  15 20 00 0a          	: beq #0x905c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x4000
 >> Updated instruction            :  15 40 00 0a          	: beq #0x1105c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000128c. Hit: 1. Lifespan: 2. Instruction: 00000074. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  15 00 00 0a          	: beq #0x105c
 >> Mask                           :  0x8000
 >> Updated instruction            :  15 80 00 0a          	: beq #0x2105c
 >> Lifespan countdown: 2. (0x80001290)
 >> Lifespan countdown: 1. (0x80001294)
 >> Reverting instruction          :  15 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 0. Instruction: 00000082. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012b0
 >> Updated                     : 0x00000000800012b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x1
 >> Updated instruction            :  4d fc ff eb          	: bl #0x13c
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x2
 >> Updated instruction            :  4e fc ff eb          	: bl #0x140
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x4
 >> Updated instruction            :  48 fc ff eb          	: bl #0x128
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x8
 >> Updated instruction            :  44 fc ff eb          	: bl #0x118
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x10
 >> Updated instruction            :  5c fc ff eb          	: bl #0x178
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x20
 >> Updated instruction            :  6c fc ff eb          	: bl #0x1b8
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x40
 >> Updated instruction            :  0c fc ff eb          	: bl #0x38
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x80
 >> Updated instruction            :  cc fc ff eb          	: bl #0x338
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x100
 >> Updated instruction            :  4c fd ff eb          	: bl #0x538
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x200
 >> Updated instruction            :  4c fe ff eb          	: bl #0x938
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x400
 >> Updated instruction            :  4c f8 ff eb          	: bl #0xfffff138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x800
 >> Updated instruction            :  4c f4 ff eb          	: bl #0xffffe138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x1000
 >> Updated instruction            :  4c ec ff eb          	: bl #0xffffc138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x2000
 >> Updated instruction            :  4c dc ff eb          	: bl #0xffff8138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x4000
 >> Updated instruction            :  4c bc ff eb          	: bl #0xffff0138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012ac. Hit: 1. Lifespan: 2. Instruction: 00000082. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  4c fc ff eb          	: bl #0x138
 >> Mask                           :  0x8000
 >> Updated instruction            :  4c 7c ff eb          	: bl #0xfffe0138
 >> Lifespan countdown: 2. (0x800012b0)
 >> Lifespan countdown: 1. (0x800012b4)
 >> Reverting instruction          :  4c fc ff eb 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 0. Instruction: 00000091. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001264
 >> Updated                     : 0x0000000080001268
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 9d e4          	: ldr fp, [sp], #5
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 9d e4          	: ldr fp, [sp], #6
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 9d e4          	: ldr fp, [sp], #0
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 9d e4          	: ldr fp, [sp], #0xc
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 9d e4          	: ldr fp, [sp], #0x14
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 9d e4          	: ldr fp, [sp], #0x24
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0xc78cb6c6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 9d e4          	: ldr fp, [sp], #0x44
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000103253b6, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 9d e4          	: ldr fp, [sp], #0x84
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 9d e4          	: ldr fp, [sp], #0x104
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110034, value: 0x8010fffc!! Count 96 Skipping to end.
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 9d e4          	: ldr fp, [sp], #0x204
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110134, value: 0x8010fffc!! Count 96 Skipping to end.
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 9d e4          	: ldr fp, [sp], #0x404
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110334, value: 0x8010fffc!! Count 96 Skipping to end.
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 9d e4          	: ldr fp, [sp], #0x804
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110734, value: 0x8010fffc!! Count 96 Skipping to end.
 >> Run result: Fault errored program - last instruction: 95.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 9d e4          	: pop {sl}
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 9d e4          	: pop {sb}
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 9d e4          	: pop {pc}
 >> Lifespan countdown: 2. (0x8010fffc)
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 92.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001264. Hit: 1. Lifespan: 2. Instruction: 00000091. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 9d e4          	: pop {fp}
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 9d e4          	: pop {r3}
 >> Lifespan countdown: 2. (0x80001268)
 >> Lifespan countdown: 1. (0x800012bc)
 >> Reverting instruction          :  04 b0 9d e4 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 0. Instruction: 00000095. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000458
 >> Updated                     : 0x000000008000045c
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000ffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1
 >> Updated instruction            :  05 b0 2d e5          	: str fp, [sp, #-5]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2
 >> Updated instruction            :  06 b0 2d e5          	: str fp, [sp, #-6]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4
 >> Updated instruction            :  00 b0 2d e5          	: str fp, [sp, #-0]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8
 >> Updated instruction            :  0c b0 2d e5          	: str fp, [sp, #-0xc]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x10
 >> Updated instruction            :  14 b0 2d e5          	: str fp, [sp, #-0x14]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x20
 >> Updated instruction            :  24 b0 2d e5          	: str fp, [sp, #-0x24]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x40
 >> Updated instruction            :  44 b0 2d e5          	: str fp, [sp, #-0x44]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x80
 >> Updated instruction            :  84 b0 2d e5          	: str fp, [sp, #-0x84]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x100
 >> Updated instruction            :  04 b1 2d e5          	: str fp, [sp, #-0x104]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x200
 >> Updated instruction            :  04 b2 2d e5          	: str fp, [sp, #-0x204]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x400
 >> Updated instruction            :  04 b4 2d e5          	: str fp, [sp, #-0x404]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x800
 >> Updated instruction            :  04 b8 2d e5          	: str fp, [sp, #-0x804]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 a0 2d e5          	: str sl, [sp, #-4]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 90 2d e5          	: str sb, [sp, #-4]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 f0 2d e5          	: str pc, [sp, #-4]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000032001000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 43259.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000458. Hit: 1. Lifespan: 2. Instruction: 00000095. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 b0 2d e5          	: str fp, [sp, #-4]!
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 30 2d e5          	: str r3, [sp, #-4]!
 >> Lifespan countdown: 2. (0x8000045c)
 >> Lifespan countdown: 1. (0x80000460)
 >> Reverting instruction          :  04 b0 2d e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffff50, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 113.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 0. Instruction: 00000099. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000468
 >> Updated                     : 0x000000008000046c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x1
 >> Updated instruction            :  88 3b 0a e3          	: movw r3, #0xab88
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x2
 >> Updated instruction            :  8b 3b 0a e3          	: movw r3, #0xab8b
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x4
 >> Updated instruction            :  8d 3b 0a e3          	: movw r3, #0xab8d
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x8
 >> Updated instruction            :  81 3b 0a e3          	: movw r3, #0xab81
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x10
 >> Updated instruction            :  99 3b 0a e3          	: movw r3, #0xab99
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x20
 >> Updated instruction            :  a9 3b 0a e3          	: movw r3, #0xaba9
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x40
 >> Updated instruction            :  c9 3b 0a e3          	: movw r3, #0xabc9
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x80
 >> Updated instruction            :  09 3b 0a e3          	: movw r3, #0xab09
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x100
 >> Updated instruction            :  89 3a 0a e3          	: movw r3, #0xaa89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x200
 >> Updated instruction            :  89 39 0a e3          	: movw r3, #0xa989
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x400
 >> Updated instruction            :  89 3f 0a e3          	: movw r3, #0xaf89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x800
 >> Updated instruction            :  89 33 0a e3          	: movw r3, #0xa389
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x1000
 >> Updated instruction            :  89 2b 0a e3          	: movw r2, #0xab89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x2000
 >> Updated instruction            :  89 1b 0a e3          	: movw r1, #0xab89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x4000
 >> Updated instruction            :  89 7b 0a e3          	: movw r7, #0xab89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000468. Hit: 1. Lifespan: 2. Instruction: 00000099. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  89 3b 0a e3          	: movw r3, #0xab89
 >> Mask                           :  0x8000
 >> Updated instruction            :  89 bb 0a e3          	: movw fp, #0xab89
 >> Lifespan countdown: 2. (0x8000046c)
 >> Lifespan countdown: 1. (0x80000470)
 >> Reverting instruction          :  89 3b 0a e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000ab89, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 111.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 0. Instruction: 00000108. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000048c
 >> Updated                     : 0x0000000080000490
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 80 e5          	: str r3, [r0, #1]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 80 e5          	: str r3, [r0, #2]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 80 e5          	: str r3, [r0, #4]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 80 e5          	: str r3, [r0, #8]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 80 e5          	: str r3, [r0, #0x10]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 80 e5          	: str r3, [r0, #0x20]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 80 e5          	: str r3, [r0, #0x40]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 80 e5          	: str r3, [r0, #0x80]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 80 e5          	: str r3, [r0, #0x100]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110060, value: 0x0!! Count 109 Skipping to end.
 >> Run result: Fault errored program - last instruction: 108.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 80 e5          	: str r3, [r0, #0x200]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110160, value: 0x0!! Count 109 Skipping to end.
 >> Run result: Fault errored program - last instruction: 108.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 80 e5          	: str r3, [r0, #0x400]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110360, value: 0x0!! Count 109 Skipping to end.
 >> Run result: Fault errored program - last instruction: 108.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 80 e5          	: str r3, [r0, #0x800]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110760, value: 0x0!! Count 109 Skipping to end.
 >> Run result: Fault errored program - last instruction: 108.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 80 e5          	: str r2, [r0]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 80 e5          	: str r1, [r0]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 80 e5          	: str r7, [r0]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000048c. Hit: 1. Lifespan: 2. Instruction: 00000108. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 80 e5          	: str r3, [r0]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 80 e5          	: str fp, [r0]
 >> Lifespan countdown: 2. (0x80000490)
 >> Lifespan countdown: 1. (0x80000494)
 >> Reverting instruction          :  00 30 80 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 0. Instruction: 00000116. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001174
 >> Updated                     : 0x0000000080001178
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  f1 4b 2d e9          	: push {r0, r4, r5, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  f2 4b 2d e9          	: push {r1, r4, r5, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  f4 4b 2d e9          	: push {r2, r4, r5, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  f8 4b 2d e9          	: push {r3, r4, r5, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  e0 4b 2d e9          	: push {r5, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  d0 4b 2d e9          	: push {r4, r6, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  b0 4b 2d e9          	: push {r4, r5, r7, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  70 4b 2d e9          	: push {r4, r5, r6, r8, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  f0 4a 2d e9          	: push {r4, r5, r6, r7, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  f0 49 2d e9          	: push {r4, r5, r6, r7, r8, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  f0 4f 2d e9          	: push {r4, r5, r6, r7, r8, sb, sl, fp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 198.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  f0 43 2d e9          	: push {r4, r5, r6, r7, r8, sb, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  f0 5b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, ip, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  f0 6b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, sp, lr}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  f0 0b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x1000000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001174. Hit: 1. Lifespan: 2. Instruction: 00000116. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 4b 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  f0 cb 2d e9          	: push {r4, r5, r6, r7, r8, sb, fp, lr, pc}
 >> Lifespan countdown: 2. (0x80001178)
 >> Lifespan countdown: 1. (0x8000117c)
 >> Reverting instruction          :  f0 4b 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 0. Instruction: 00000123. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001190
 >> Updated                     : 0x0000000080001194
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 60 a0 e1          	: mov r6, r0
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 60 a0 e1          	: mov r6, r3
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 60 a0 e1          	: mov r6, r5
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 60 a0 e1          	: mov r6, sb
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 60 a0 e1          	: lsl r6, r1, r0
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 60 a0 e1          	: lsr r6, r1, #0x20
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 60 a0 e1          	: asr r6, r1, #0x20
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 60 a0 e1          	: lsl r6, r1, #1
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000064000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 61 a0 e1          	: lsl r6, r1, #2
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c8000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 62 a0 e1          	: lsl r6, r1, #4
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000020000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 64 a0 e1          	: lsl r6, r1, #8
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 68 a0 e1          	: lsl r6, r1, #0x10
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 70 a0 e1          	: mov r7, r1
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 40 a0 e1          	: mov r4, r1
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 20 a0 e1          	: mov r2, r1
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001190. Hit: 1. Lifespan: 2. Instruction: 00000123. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 60 a0 e1          	: mov r6, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 e0 a0 e1          	: mov lr, r1
 >> Lifespan countdown: 2. (0x80001194)
 >> Lifespan countdown: 1. (0x80001198)
 >> Reverting instruction          :  01 60 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 0. Instruction: 00000132. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800011b4
 >> Updated                     : 0x00000000800011b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x1
 >> Updated instruction            :  0e 00 00 0a          	: beq #0x1040
 >> Lifespan countdown: 2. (0x800011f4)
 >> Lifespan countdown: 1. (0x800004a0)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 138.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x2
 >> Updated instruction            :  0d 00 00 0a          	: beq #0x103c
 >> Lifespan countdown: 2. (0x800011f0)
 >> Lifespan countdown: 1. (0x800011f4)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 139.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x4
 >> Updated instruction            :  0b 00 00 0a          	: beq #0x1034
 >> Lifespan countdown: 2. (0x800011e8)
 >> Lifespan countdown: 1. (0x800011ec)
 >> Reverting instruction          :  0f 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x8
 >> Updated instruction            :  07 00 00 0a          	: beq #0x1024
 >> Lifespan countdown: 2. (0x800011d8)
 >> Lifespan countdown: 1. (0x800011dc)
 >> Reverting instruction          :  0f 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x10
 >> Updated instruction            :  1f 00 00 0a          	: beq #0x1084
 >> Lifespan countdown: 2. (0x80001238)
 >> Lifespan countdown: 1. (0x8000123c)
 >> Reverting instruction          :  0f 00 00 0a 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x20
 >> Updated instruction            :  2f 00 00 0a          	: beq #0x10c4
 >> Lifespan countdown: 2. (0x80001278)
 >> Lifespan countdown: 1. (0x80000410)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x98badcfe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1172.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x40
 >> Updated instruction            :  4f 00 00 0a          	: beq #0x1144
 >> Lifespan countdown: 2. (0x800012f8)
 >> Lifespan countdown: 1. (0x800012fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 143.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x80
 >> Updated instruction            :  8f 00 00 0a          	: beq #0x1244
 >> Lifespan countdown: 2. (0x800013f8)
 >> Lifespan countdown: 1. (0x800013fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x100
 >> Updated instruction            :  0f 01 00 0a          	: beq #0x1444
 >> Lifespan countdown: 2. (0x800015f8)
 >> Lifespan countdown: 1. (0x800015fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 136.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x200
 >> Updated instruction            :  0f 02 00 0a          	: beq #0x1844
 >> Lifespan countdown: 2. (0x800019f8)
 >> Lifespan countdown: 1. (0x800019fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x31ffffce, value: 0x31000000!! Count 139 Skipping to end.
 >> Run result: Fault errored program - last instruction: 138.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x400
 >> Updated instruction            :  0f 04 00 0a          	: beq #0x2044
 >> Lifespan countdown: 2. (0x800021f8)
 >> Lifespan countdown: 1. (0x800021fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffe8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 140.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x800
 >> Updated instruction            :  0f 08 00 0a          	: beq #0x3044
 >> Lifespan countdown: 2. (0x800031f8)
 >> Lifespan countdown: 1. (0x800031fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 134.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x1000
 >> Updated instruction            :  0f 10 00 0a          	: beq #0x5044
 >> Lifespan countdown: 2. (0x800051f8)
 >> Lifespan countdown: 1. (0x800051fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 27654.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x2000
 >> Updated instruction            :  0f 20 00 0a          	: beq #0x9044
 >> Lifespan countdown: 2. (0x800091f8)
 >> Lifespan countdown: 1. (0x800091fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 23558.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x4000
 >> Updated instruction            :  0f 40 00 0a          	: beq #0x11044
 >> Lifespan countdown: 2. (0x800111f8)
 >> Lifespan countdown: 1. (0x800111fc)
 >> Reverting instruction          :  0f 00 00 0a 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 15366.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800011b4. Hit: 1. Lifespan: 2. Instruction: 00000132. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0f 00 00 0a          	: beq #0x1044
 >> Mask                           :  0x8000
 >> Updated instruction            :  0f 80 00 0a          	: beq #0x21044
 >!  Erm -  fetching from unmapped memory, address: 0x800211f8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 132.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 0. Instruction: 00000153. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001a0
 >> Updated                     : 0x00000000800001a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x1
 >> Updated instruction            :  44 00 00 0a          	: beq #0x1118
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x2
 >> Updated instruction            :  47 00 00 0a          	: beq #0x1124
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x4
 >> Updated instruction            :  41 00 00 0a          	: beq #0x110c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x8
 >> Updated instruction            :  4d 00 00 0a          	: beq #0x113c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x10
 >> Updated instruction            :  55 00 00 0a          	: beq #0x115c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x20
 >> Updated instruction            :  65 00 00 0a          	: beq #0x119c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x40
 >> Updated instruction            :  05 00 00 0a          	: beq #0x101c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x80
 >> Updated instruction            :  c5 00 00 0a          	: beq #0x131c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x100
 >> Updated instruction            :  45 01 00 0a          	: beq #0x151c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x200
 >> Updated instruction            :  45 02 00 0a          	: beq #0x191c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x400
 >> Updated instruction            :  45 04 00 0a          	: beq #0x211c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x800
 >> Updated instruction            :  45 08 00 0a          	: beq #0x311c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x1000
 >> Updated instruction            :  45 10 00 0a          	: beq #0x511c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x2000
 >> Updated instruction            :  45 20 00 0a          	: beq #0x911c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x4000
 >> Updated instruction            :  45 40 00 0a          	: beq #0x1111c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001a0. Hit: 1. Lifespan: 2. Instruction: 00000153. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  45 00 00 0a          	: beq #0x111c
 >> Mask                           :  0x8000
 >> Updated instruction            :  45 80 00 0a          	: beq #0x2111c
 >> Lifespan countdown: 2. (0x800001a4)
 >> Lifespan countdown: 1. (0x800001a8)
 >> Reverting instruction          :  45 00 00 0a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 0. Instruction: 00000161. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800001c0
 >> Updated                     : 0x00000000800001c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x1
 >> Updated instruction            :  25 00 00 3a          	: blo #0x109c
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x2
 >> Updated instruction            :  26 00 00 3a          	: blo #0x10a0
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x4
 >> Updated instruction            :  20 00 00 3a          	: blo #0x1088
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x8
 >> Updated instruction            :  2c 00 00 3a          	: blo #0x10b8
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x10
 >> Updated instruction            :  34 00 00 3a          	: blo #0x10d8
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x20
 >> Updated instruction            :  04 00 00 3a          	: blo #0x1018
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x40
 >> Updated instruction            :  64 00 00 3a          	: blo #0x1198
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x80
 >> Updated instruction            :  a4 00 00 3a          	: blo #0x1298
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x100
 >> Updated instruction            :  24 01 00 3a          	: blo #0x1498
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x200
 >> Updated instruction            :  24 02 00 3a          	: blo #0x1898
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x400
 >> Updated instruction            :  24 04 00 3a          	: blo #0x2098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x800
 >> Updated instruction            :  24 08 00 3a          	: blo #0x3098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x1000
 >> Updated instruction            :  24 10 00 3a          	: blo #0x5098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x2000
 >> Updated instruction            :  24 20 00 3a          	: blo #0x9098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x4000
 >> Updated instruction            :  24 40 00 3a          	: blo #0x11098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800001c0. Hit: 1. Lifespan: 2. Instruction: 00000161. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  24 00 00 3a          	: blo #0x1098
 >> Mask                           :  0x8000
 >> Updated instruction            :  24 80 00 3a          	: blo #0x21098
 >> Lifespan countdown: 2. (0x800001c4)
 >> Lifespan countdown: 1. (0x800001c8)
 >> Reverting instruction          :  24 00 00 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 0. Instruction: 00000166. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002b8
 >> Updated                     : 0x00000000800002bc
 >!  Erm -  fetching from unmapped memory, address: 0xe, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 233.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x1
 >> Updated instruction            :  d7 ff ff ea          	: b #0xf64
 >> Lifespan countdown: 2. (0x8000021c)
 >> Lifespan countdown: 1. (0x80000220)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x2
 >> Updated instruction            :  d4 ff ff ea          	: b #0xf58
 >> Lifespan countdown: 2. (0x80000210)
 >> Lifespan countdown: 1. (0x80000214)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x4
 >> Updated instruction            :  d2 ff ff ea          	: b #0xf50
 >> Lifespan countdown: 2. (0x80000208)
 >> Lifespan countdown: 1. (0x8000020c)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x8
 >> Updated instruction            :  de ff ff ea          	: b #0xf80
 >> Lifespan countdown: 2. (0x80000238)
 >> Lifespan countdown: 1. (0x8000023c)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x10
 >> Updated instruction            :  c6 ff ff ea          	: b #0xf20
 >> Lifespan countdown: 2. (0x800001d8)
 >> Lifespan countdown: 1. (0x800001dc)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x20
 >> Updated instruction            :  f6 ff ff ea          	: b #0xfe0
 >> Lifespan countdown: 2. (0x80000298)
 >> Lifespan countdown: 1. (0x8000029c)
 >> Reverting instruction          :  d6 ff ff ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x40
 >> Updated instruction            :  96 ff ff ea          	: b #0xe60
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  d6 ff ff ea 
 >!  Erm -  fetching from unmapped memory, address: 0x80110000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x80
 >> Updated instruction            :  56 ff ff ea          	: b #0xd60
 >> Lifespan countdown: 2. (0x80000018)
 >> Lifespan countdown: 1. (0x8000001c)
 >> Reverting instruction          :  d6 ff ff ea 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x8010ff78!! Count 327 Skipping to end.
 >> Run result: Fault errored program - last instruction: 326.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x100
 >> Updated instruction            :  d6 fe ff ea          	: b #0xb60
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffe18, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x200
 >> Updated instruction            :  d6 fd ff ea          	: b #0x760
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffa18, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x400
 >> Updated instruction            :  d6 fb ff ea          	: b #0xffffff60
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x800
 >> Updated instruction            :  d6 f7 ff ea          	: b #0xffffef60
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x1000
 >> Updated instruction            :  d6 ef ff ea          	: b #0xffffcf60
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x2000
 >> Updated instruction            :  d6 df ff ea          	: b #0xffff8f60
 >!  Erm -  fetching from unmapped memory, address: 0x7fff8218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x4000
 >> Updated instruction            :  d6 bf ff ea          	: b #0xffff0f60
 >!  Erm -  fetching from unmapped memory, address: 0x7fff0218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002b8. Hit: 1. Lifespan: 2. Instruction: 00000166. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d6 ff ff ea          	: b #0xf60
 >> Mask                           :  0x8000
 >> Updated instruction            :  d6 7f ff ea          	: b #0xfffe0f60
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe0218, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 166.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 0. Instruction: 00000170. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000224
 >> Updated                     : 0x0000000080000228
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 a0 e3          	: mov r3, #1
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 a0 e3          	: mov r3, #2
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 a0 e3          	: mov r3, #4
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 a0 e3          	: mov r3, #8
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 a0 e3          	: mov r3, #0x10
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 a0 e3          	: mov r3, #0x20
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 a0 e3          	: mov r3, #0x40
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 a0 e3          	: mov r3, #0x80
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 a0 e3          	: mov r3, #0, #2
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 a0 e3          	: mov r3, #0, #4
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 a0 e3          	: mov r3, #0, #8
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 a0 e3          	: mov r3, #0, #16
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 a0 e3          	: mov r2, #0
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 a0 e3          	: mov r1, #0
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 173.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 a0 e3          	: mov r7, #0
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000224. Hit: 1. Lifespan: 2. Instruction: 00000170. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 a0 e3          	: mov r3, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 a0 e3          	: mov fp, #0
 >> Lifespan countdown: 2. (0x80000228)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  00 30 a0 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 0. Instruction: 00000175. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000238
 >> Updated                     : 0x000000008000023c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110080, value: 0x0!! Count 186 Skipping to end.
 >> Run result: Fault errored program - last instruction: 185.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011007c, value: 0xaa49989b!! Count 181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011017c, value: 0xaa49989b!! Count 181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011037c, value: 0xaa49989b!! Count 181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011077c, value: 0xaa49989b!! Count 181 Skipping to end.
 >> Run result: Fault errored program - last instruction: 180.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000238. Hit: 1. Lifespan: 2. Instruction: 00000175. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x8000023c)
 >> Lifespan countdown: 1. (0x8000022c)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 0. Instruction: 00000183. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000230
 >> Updated                     : 0x0000000080000234
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 91 e4          	: ldr ip, [r1], #5
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 91 e4          	: ldr ip, [r1], #6
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 91 e4          	: ldr ip, [r1], #0
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 91 e4          	: ldr ip, [r1], #0xc
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 91 e4          	: ldr ip, [r1], #0x14
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 91 e4          	: ldr ip, [r1], #0x24
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 91 e4          	: ldr ip, [r1], #0x44
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 91 e4          	: ldr ip, [r1], #0x84
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 91 e4          	: ldr ip, [r1], #0x104
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 91 e4          	: ldr ip, [r1], #0x204
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 91 e4          	: ldr ip, [r1], #0x404
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 91 e4          	: ldr ip, [r1], #0x804
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 91 e4          	: ldr sp, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 91 e4          	: ldr lr, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 91 e4          	: ldr r8, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000230. Hit: 3. Lifespan: 2. Instruction: 00000183. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 91 e4          	: ldr ip, [r1], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 91 e4          	: ldr r4, [r1], #4
 >> Lifespan countdown: 2. (0x80000234)
 >> Lifespan countdown: 1. (0x80000238)
 >> Reverting instruction          :  04 c0 91 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 0. Instruction: 00000187. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000022c
 >> Updated                     : 0x0000000080000230
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000004, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 188.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000022c. Hit: 4. Lifespan: 2. Instruction: 00000187. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000230)
 >> Lifespan countdown: 1. (0x80000234)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 0. Instruction: 00000193. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000244
 >> Updated                     : 0x0000000080000248
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 52 e1          	: cmp r2, r2
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 52 e1          	: cmp r2, r1
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 52 e1          	: cmp r2, r7
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 52 e1          	: cmp r2, fp
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 52 e1          	: cmp r2, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 52 e1          	: cmp r2, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 52 e1          	: cmp r2, r3, asr #32
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 52 e1          	: cmp r2, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 52 e1          	: cmp r2, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 52 e1          	: cmp r2, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 52 e1          	: cmp r2, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 52 e1          	: cmp r2, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000244. Hit: 1. Lifespan: 2. Instruction: 00000193. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000248)
 >> Lifespan countdown: 1. (0x8000024c)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 0. Instruction: 00000198. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012d0
 >> Updated                     : 0x00000000800012d4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 10 a0 e1          	: mov r1, r5
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 10 a0 e1          	: mov r1, r6
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 10 a0 e1          	: mov r1, r0
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 509 Skipping to end.
 >> Run result: Fault errored program - last instruction: 508.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 10 a0 e1          	: mov r1, ip
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 10 a0 e1          	: lsl r1, r4, r0
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 10 a0 e1          	: lsr r1, r4, #0x20
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 10 a0 e1          	: asr r1, r4, #0x20
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 10 a0 e1          	: lsl r1, r4, #1
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fec0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 11 a0 e1          	: lsl r1, r4, #2
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd80, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 12 a0 e1          	: lsl r1, r4, #4
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff600, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 14 a0 e1          	: lsl r1, r4, #8
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff6000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 18 a0 e1          	: lsl r1, r4, #0x10
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff600000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 203.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 00 a0 e1          	: mov r0, r4
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 30 a0 e1          	: mov r3, r4
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 50 a0 e1          	: mov r5, r4
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012d0. Hit: 1. Lifespan: 2. Instruction: 00000198. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 10 a0 e1          	: mov r1, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 90 a0 e1          	: mov sb, r4
 >> Lifespan countdown: 2. (0x800012d4)
 >> Lifespan countdown: 1. (0x800012d8)
 >> Reverting instruction          :  04 10 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 0. Instruction: 00000205. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001008
 >> Updated                     : 0x000000008000100c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x1
 >> Updated instruction            :  19 60 81 e2          	: add r6, r1, #0x19
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x2
 >> Updated instruction            :  1a 60 81 e2          	: add r6, r1, #0x1a
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x4
 >> Updated instruction            :  1c 60 81 e2          	: add r6, r1, #0x1c
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x8
 >> Updated instruction            :  10 60 81 e2          	: add r6, r1, #0x10
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x10
 >> Updated instruction            :  08 60 81 e2          	: add r6, r1, #8
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x20
 >> Updated instruction            :  38 60 81 e2          	: add r6, r1, #0x38
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x40
 >> Updated instruction            :  58 60 81 e2          	: add r6, r1, #0x58
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x80
 >> Updated instruction            :  98 60 81 e2          	: add r6, r1, #0x98
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x100
 >> Updated instruction            :  18 61 81 e2          	: add r6, r1, #24, #2
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x200
 >> Updated instruction            :  18 62 81 e2          	: add r6, r1, #24, #4
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010ff61, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x400
 >> Updated instruction            :  18 64 81 e2          	: add r6, r1, #24, #8
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000009810ff60, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x800
 >> Updated instruction            :  18 68 81 e2          	: add r6, r1, #24, #16
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000008028ff60, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x1000
 >> Updated instruction            :  18 70 81 e2          	: add r7, r1, #0x18
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x2000
 >> Updated instruction            :  18 40 81 e2          	: add r4, r1, #0x18
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x98badcfe!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x4000
 >> Updated instruction            :  18 20 81 e2          	: add r2, r1, #0x18
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001008. Hit: 1. Lifespan: 2. Instruction: 00000205. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  18 60 81 e2          	: add r6, r1, #0x18
 >> Mask                           :  0x8000
 >> Updated instruction            :  18 e0 81 e2          	: add lr, r1, #0x18
 >> Lifespan countdown: 2. (0x8000100c)
 >> Lifespan countdown: 1. (0x80001010)
 >> Reverting instruction          :  18 60 81 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 0. Instruction: 00000212. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001024
 >> Updated                     : 0x0000000080001028
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x1
 >> Updated instruction            :  18 00 80 e2          	: add r0, r0, #0x18
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x2
 >> Updated instruction            :  1b 00 80 e2          	: add r0, r0, #0x1b
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x4
 >> Updated instruction            :  1d 00 80 e2          	: add r0, r0, #0x1d
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x8
 >> Updated instruction            :  11 00 80 e2          	: add r0, r0, #0x11
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x10
 >> Updated instruction            :  09 00 80 e2          	: add r0, r0, #9
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x20
 >> Updated instruction            :  39 00 80 e2          	: add r0, r0, #0x39
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x40
 >> Updated instruction            :  59 00 80 e2          	: add r0, r0, #0x59
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x80
 >> Updated instruction            :  99 00 80 e2          	: add r0, r0, #0x99
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110009, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x100
 >> Updated instruction            :  19 01 80 e2          	: add r0, r0, #0x40000006
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc010ff76, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x200
 >> Updated instruction            :  19 02 80 e2          	: add r0, r0, #0x90000001
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1010ff71, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x400
 >> Updated instruction            :  19 04 80 e2          	: add r0, r0, #0x19000000
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9910ff70, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x800
 >> Updated instruction            :  19 08 80 e2          	: add r0, r0, #0x190000
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8029ff70, value: 0x0!! Count 246 Skipping to end.
 >> Run result: Fault errored program - last instruction: 245.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x1000
 >> Updated instruction            :  19 10 80 e2          	: add r1, r0, #0x19
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x41, value: 0x80!! Count 216 Skipping to end.
 >> Run result: Fault errored program - last instruction: 215.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x2000
 >> Updated instruction            :  19 20 80 e2          	: add r2, r0, #0x19
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x4000
 >> Updated instruction            :  19 40 80 e2          	: add r4, r0, #0x19
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x39, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001024. Hit: 1. Lifespan: 2. Instruction: 00000212. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  19 00 80 e2          	: add r0, r0, #0x19
 >> Mask                           :  0x8000
 >> Updated instruction            :  19 80 80 e2          	: add r8, r0, #0x19
 >> Lifespan countdown: 2. (0x80001028)
 >> Lifespan countdown: 1. (0x8000102c)
 >> Reverting instruction          :  19 00 80 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 0. Instruction: 00000216. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001034
 >> Updated                     : 0x0000000080001038
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x1
 >> Updated instruction            :  39 20 63 82          	: rsbhi r2, r3, #0x39
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x2
 >> Updated instruction            :  3a 20 63 82          	: rsbhi r2, r3, #0x3a
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x4
 >> Updated instruction            :  3c 20 63 82          	: rsbhi r2, r3, #0x3c
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x8
 >> Updated instruction            :  30 20 63 82          	: rsbhi r2, r3, #0x30
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x10
 >> Updated instruction            :  28 20 63 82          	: rsbhi r2, r3, #0x28
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x20
 >> Updated instruction            :  18 20 63 82          	: rsbhi r2, r3, #0x18
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x40
 >> Updated instruction            :  78 20 63 82          	: rsbhi r2, r3, #0x78
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x80
 >> Updated instruction            :  b8 20 63 82          	: rsbhi r2, r3, #0xb8
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x100
 >> Updated instruction            :  38 21 63 82          	: rsbhi r2, r3, #56, #2
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x200
 >> Updated instruction            :  38 22 63 82          	: rsbhi r2, r3, #56, #4
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x400
 >> Updated instruction            :  38 24 63 82          	: rsbhi r2, r3, #56, #8
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x800
 >> Updated instruction            :  38 28 63 82          	: rsbhi r2, r3, #56, #16
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x1000
 >> Updated instruction            :  38 30 63 82          	: rsbhi r3, r3, #0x38
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x2000
 >> Updated instruction            :  38 00 63 82          	: rsbhi r0, r3, #0x38
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x27, value: 0x0!! Count 237 Skipping to end.
 >> Run result: Fault errored program - last instruction: 236.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x4000
 >> Updated instruction            :  38 60 63 82          	: rsbhi r6, r3, #0x38
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000027, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 378.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001034. Hit: 1. Lifespan: 2. Instruction: 00000216. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  38 20 63 82          	: rsbhi r2, r3, #0x38
 >> Mask                           :  0x8000
 >> Updated instruction            :  38 a0 63 82          	: rsbhi sl, r3, #0x38
 >> Lifespan countdown: 2. (0x80001038)
 >> Lifespan countdown: 1. (0x8000105c)
 >> Reverting instruction          :  38 20 63 82 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 0. Instruction: 00000222. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000084
 >> Updated                     : 0x0000000080000088
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 60 e2          	: rsb r3, r0, #1
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 60 e2          	: rsb r3, r0, #2
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 60 e2          	: rsb r3, r0, #4
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 60 e2          	: rsb r3, r0, #8
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 60 e2          	: rsb r3, r0, #0x10
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 60 e2          	: rsb r3, r0, #0x20
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 60 e2          	: rsb r3, r0, #0x40
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 60 e2          	: rsb r3, r0, #0x80
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 60 e2          	: rsb r3, r0, #0, #2
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 60 e2          	: rsb r3, r0, #0, #4
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 60 e2          	: rsb r3, r0, #0, #8
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 60 e2          	: rsb r3, r0, #0, #16
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 60 e2          	: rsb r2, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 367 Skipping to end.
 >> Run result: Fault errored program - last instruction: 366.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 60 e2          	: rsb r1, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 60 e2          	: rsb r7, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000084. Hit: 1. Lifespan: 2. Instruction: 00000222. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 60 e2          	: rsb r3, r0, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 60 e2          	: rsb fp, r0, #0
 >> Lifespan countdown: 2. (0x80000088)
 >> Lifespan countdown: 1. (0x8000008c)
 >> Reverting instruction          :  00 30 60 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000007fef0063, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1088.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 0. Instruction: 00000226. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000094
 >> Updated                     : 0x0000000080000098
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x1
 >> Updated instruction            :  31 48 2d e9          	: push {r0, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x2
 >> Updated instruction            :  32 48 2d e9          	: push {r1, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x4
 >> Updated instruction            :  34 48 2d e9          	: push {r2, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x8
 >> Updated instruction            :  38 48 2d e9          	: push {r3, r4, r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x10
 >> Updated instruction            :  20 48 2d e9          	: push {r5, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x20
 >> Updated instruction            :  10 48 2d e9          	: push {r4, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x40
 >> Updated instruction            :  70 48 2d e9          	: push {r4, r5, r6, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 48 2d e9          	: push {r4, r5, r7, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x100
 >> Updated instruction            :  30 49 2d e9          	: push {r4, r5, r8, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x200
 >> Updated instruction            :  30 4a 2d e9          	: push {r4, r5, sb, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x400
 >> Updated instruction            :  30 4c 2d e9          	: push {r4, r5, sl, fp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x800
 >> Updated instruction            :  30 40 2d e9          	: push {r4, r5, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 58 2d e9          	: push {r4, r5, fp, ip, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >!  Erm -  fetching from unmapped memory, address: 0x6, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 296.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 68 2d e9          	: push {r4, r5, fp, sp, lr}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 08 2d e9          	: push {r4, r5, fp}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x80000094. Hit: 1. Lifespan: 2. Instruction: 00000226. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 48 2d e9          	: push {r4, r5, fp, lr}
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 c8 2d e9          	: push {r4, r5, fp, lr, pc}
 >> Lifespan countdown: 2. (0x80000098)
 >> Lifespan countdown: 1. (0x8000009c)
 >> Reverting instruction          :  30 48 2d e9 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 0. Instruction: 00000229. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000a0
 >> Updated                     : 0x00000000800000a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 5e e1          	: cmp lr, sp
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 5e e1          	: cmp lr, lr
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 5e e1          	: cmp lr, r8
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 5e e1          	: cmp lr, r4
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 5e e1          	: cmp lr, ip, lsl r0
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 5e e1          	: cmp lr, ip, lsr #32
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 5e e1          	: cmp lr, ip, asr #32
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 5e e1          	: cmp lr, ip, lsl #1
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 5e e1          	: cmp lr, ip, lsl #2
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 5e e1          	: cmp lr, ip, lsl #4
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 5e e1          	: cmp lr, ip, lsl #8
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 5e e1          	: cmp lr, ip, lsl #16
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000a0. Hit: 1. Lifespan: 2. Instruction: 00000229. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 5e e1          	: cmp lr, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 5e e1          	: cmp lr, ip
 >> Lifespan countdown: 2. (0x800000a4)
 >> Lifespan countdown: 1. (0x800000a8)
 >> Reverting instruction          :  0c 00 5e e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 0. Instruction: 00000233. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000b0
 >> Updated                     : 0x00000000800000b4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 50 a0 01          	: moveq r5, r1
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 50 a0 01          	: moveq r5, r2
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 50 a0 01          	: moveq r5, r4
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 50 a0 01          	: moveq r5, r8
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 50 a0 01          	: lsleq r5, r0, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 50 a0 01          	: lsreq r5, r0, #0x20
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 50 a0 01          	: asreq r5, r0, #0x20
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 50 a0 01          	: lsleq r5, r0, #1
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 51 a0 01          	: lsleq r5, r0, #2
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 52 a0 01          	: lsleq r5, r0, #4
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 54 a0 01          	: lsleq r5, r0, #8
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 58 a0 01          	: lsleq r5, r0, #0x10
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 40 a0 01          	: moveq r4, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 70 a0 01          	: moveq r7, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 10 a0 01          	: moveq r1, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000b0. Hit: 1. Lifespan: 2. Instruction: 00000233. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 50 a0 01          	: moveq r5, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 d0 a0 01          	: moveq sp, r0
 >> Lifespan countdown: 2. (0x800000b4)
 >> Lifespan countdown: 1. (0x800000b8)
 >> Reverting instruction          :  00 50 a0 01 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 0. Instruction: 00000242. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000d4
 >> Updated                     : 0x00000000800000d8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 e0 42 e2          	: sub lr, r2, #2
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 e0 42 e2          	: sub lr, r2, #1
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 e0 42 e2          	: sub lr, r2, #7
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b e0 42 e2          	: sub lr, r2, #0xb
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 e0 42 e2          	: sub lr, r2, #0x13
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 e0 42 e2          	: sub lr, r2, #0x23
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 e0 42 e2          	: sub lr, r2, #0x43
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 e0 42 e2          	: sub lr, r2, #0x83
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 e1 42 e2          	: sub lr, r2, #0xc0000000
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 e2 42 e2          	: sub lr, r2, #0x30000000
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 e4 42 e2          	: sub lr, r2, #0x3000000
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 e8 42 e2          	: sub lr, r2, #0x30000
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 f0 42 e2          	: sub pc, r2, #3
 >!  Erm -  fetching from unmapped memory, address: 0x24, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 242.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 c0 42 e2          	: sub ip, r2, #3
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 a0 42 e2          	: sub sl, r2, #3
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000d4. Hit: 1. Lifespan: 2. Instruction: 00000242. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 42 e2          	: sub lr, r2, #3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 60 42 e2          	: sub r6, r2, #3
 >> Lifespan countdown: 2. (0x800000d8)
 >> Lifespan countdown: 1. (0x800000dc)
 >> Reverting instruction          :  03 e0 42 e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000024, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 0. Instruction: 00000252. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000fc
 >> Updated                     : 0x0000000080000100
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 80 e0          	: add r0, r0, r2
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 80 e0          	: add r0, r0, r1
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 80 e0          	: add r0, r0, r7
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 80 e0          	: add r0, r0, fp
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21fea5, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 80 e0          	: add r0, r0, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 80 e0          	: add r0, r0, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 80 e0          	: add r0, r0, r3, asr #32
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 80 e0          	: add r0, r0, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 80 e0          	: add r0, r0, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 80 e0          	: add r0, r0, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 80 e0          	: add r0, r0, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110289, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 80 e0          	: add r0, r0, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8013ff89, value: 0x0!! Count 258 Skipping to end.
 >> Run result: Fault errored program - last instruction: 257.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 80 e0          	: add r1, r0, r3
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 80 e0          	: add r2, r0, r3
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 374 Skipping to end.
 >> Run result: Fault errored program - last instruction: 373.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 80 e0          	: add r4, r0, r3
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000fc. Hit: 1. Lifespan: 2. Instruction: 00000252. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 80 e0          	: add r0, r0, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 80 e0          	: add r8, r0, r3
 >> Lifespan countdown: 2. (0x80000100)
 >> Lifespan countdown: 1. (0x80000104)
 >> Reverting instruction          :  03 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 0. Instruction: 00000260. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 2. Lifespan: 2. Instruction: 00000260. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 0. Instruction: 00000267. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 339.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 271 Skipping to end.
 >> Run result: Fault errored program - last instruction: 270.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 3. Lifespan: 2. Instruction: 00000267. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 267.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 0. Instruction: 00000271. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 340.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 275 Skipping to end.
 >> Run result: Fault errored program - last instruction: 274.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 4. Lifespan: 2. Instruction: 00000271. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 0. Instruction: 00000278. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 6. Lifespan: 2. Instruction: 00000278. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 0. Instruction: 00000287. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  Erm -  fetching from unmapped memory, address: 0x22, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 352.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x9, value: 0x0!! Count 291 Skipping to end.
 >> Run result: Fault errored program - last instruction: 290.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 8. Lifespan: 2. Instruction: 00000287. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 287.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 0. Instruction: 00000293. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000120
 >> Updated                     : 0x0000000080000124
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 52 e1          	: cmp r2, r2
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 52 e1          	: cmp r2, r1
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 52 e1          	: cmp r2, r7
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 52 e1          	: cmp r2, fp
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 52 e1          	: cmp r2, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 52 e1          	: cmp r2, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 52 e1          	: cmp r2, r3, asr #32
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 52 e1          	: cmp r2, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 52 e1          	: cmp r2, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 52 e1          	: cmp r2, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 52 e1          	: cmp r2, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 52 e1          	: cmp r2, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 1. Lifespan: 2. Instruction: 00000293. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 0. Instruction: 00000297. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001064
 >> Updated                     : 0x0000000080001068
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 30 94 e5          	: ldr r3, [r4, #1]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 30 94 e5          	: ldr r3, [r4, #2]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 30 94 e5          	: ldr r3, [r4, #4]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 30 94 e5          	: ldr r3, [r4, #0x10]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 30 94 e5          	: ldr r3, [r4, #0x20]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 30 94 e5          	: ldr r3, [r4, #0x40]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 30 94 e5          	: ldr r3, [r4, #0x80]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 31 94 e5          	: ldr r3, [r4, #0x100]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110060, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 297.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 32 94 e5          	: ldr r3, [r4, #0x200]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110160, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 297.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 34 94 e5          	: ldr r3, [r4, #0x400]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110360, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 297.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 38 94 e5          	: ldr r3, [r4, #0x800]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110760, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 297.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 20 94 e5          	: ldr r2, [r4]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 10 94 e5          	: ldr r1, [r4]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 70 94 e5          	: ldr r7, [r4]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001064. Hit: 1. Lifespan: 2. Instruction: 00000297. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 30 94 e5          	: ldr r3, [r4]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 b0 94 e5          	: ldr fp, [r4]
 >> Lifespan countdown: 2. (0x80001068)
 >> Lifespan countdown: 1. (0x8000106c)
 >> Reverting instruction          :  00 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffffffc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 0. Instruction: 00000309. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001094
 >> Updated                     : 0x0000000080001098
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  1f c8 d7 e7          	: bfc ip, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  1c c8 d7 e7          	: bfi ip, ip, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  1a c8 d7 e7          	: bfi ip, sl, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  16 c8 d7 e7          	: bfi ip, r6, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  0e c8 d7 e7          	: ldrb ip, [r7, lr, lsl #16]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 309.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  3e c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 309.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  5e c8 d7 e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 309.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  9e c8 d7 e7          	: bfi ip, lr, #0x11, #7
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  1e c9 d7 e7          	: bfi ip, lr, #0x12, #6
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  1e ca d7 e7          	: bfi ip, lr, #0x14, #4
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  1e cc d7 e7          	: bfi ip, lr, #0x17, #1
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  1e c0 d7 e7          	: bfi ip, lr, #0, #0x18
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  1e d8 d7 e7          	: bfi sp, lr, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  1e e8 d7 e7          	: bfi lr, lr, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  1e 88 d7 e7          	: bfi r8, lr, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001094. Hit: 1. Lifespan: 2. Instruction: 00000309. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1e c8 d7 e7          	: bfi ip, lr, #0x10, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  1e 48 d7 e7          	: bfi r4, lr, #0x10, #8
 >> Lifespan countdown: 2. (0x80001098)
 >> Lifespan countdown: 1. (0x8000109c)
 >> Reverting instruction          :  1e c8 d7 e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 0. Instruction: 00000317. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010b4
 >> Updated                     : 0x00000000800010b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  13 0c df e7          	: bfi r0, r3, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  10 0c df e7          	: bfi r0, r0, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  16 0c df e7          	: bfi r0, r6, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  1a 0c df e7          	: bfi r0, sl, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  02 0c df e7          	: ldrb r0, [pc, r2, lsl #24]
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  32 0c df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 317.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  52 0c df e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 317.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  92 0c df e7          	: bfi r0, r2, #0x19, #7
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  12 0d df e7          	: bfi r0, r2, #0x1a, #6
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  12 0e df e7          	: bfi r0, r2, #0x1c, #4
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  12 08 df e7          	: bfi r0, r2, #0x10, #0x10
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  12 04 df e7          	: bfi r0, r2, #8, #0x18
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  12 1c df e7          	: bfi r1, r2, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000010ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  12 2c df e7          	: bfi r2, r2, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  12 4c df e7          	: bfi r4, r2, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ffb0, value: 0x80!! Count 319 Skipping to end.
 >> Run result: Fault errored program - last instruction: 318.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010b4. Hit: 1. Lifespan: 2. Instruction: 00000317. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  12 0c df e7          	: bfi r0, r2, #0x18, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  12 8c df e7          	: bfi r8, r2, #0x18, #8
 >> Lifespan countdown: 2. (0x800010b8)
 >> Lifespan countdown: 1. (0x800010bc)
 >> Reverting instruction          :  12 0c df e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 0. Instruction: 00000325. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004a8
 >> Updated                     : 0x00000000800004ac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x1
 >> Updated instruction            :  21 b0 8d e2          	: add fp, sp, #0x21
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x60800010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x2
 >> Updated instruction            :  22 b0 8d e2          	: add fp, sp, #0x22
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xff608000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x4
 >> Updated instruction            :  24 b0 8d e2          	: add fp, sp, #0x24
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x8
 >> Updated instruction            :  28 b0 8d e2          	: add fp, sp, #0x28
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1055.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x10
 >> Updated instruction            :  30 b0 8d e2          	: add fp, sp, #0x30
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x20
 >> Updated instruction            :  00 b0 8d e2          	: add fp, sp, #0
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x40
 >> Updated instruction            :  60 b0 8d e2          	: add fp, sp, #0x60
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x80
 >> Updated instruction            :  a0 b0 8d e2          	: add fp, sp, #0xa0
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x100
 >> Updated instruction            :  20 b1 8d e2          	: add fp, sp, #32, #2
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1049.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x200
 >> Updated instruction            :  20 b2 8d e2          	: add fp, sp, #32, #4
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  Erm -  fetching from unmapped memory, address: 0xff508010, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x400
 >> Updated instruction            :  20 b4 8d e2          	: add fp, sp, #32, #8
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa010fed0, value: 0x8010ff60!! Count 329 Skipping to end.
 >> Run result: Fault errored program - last instruction: 328.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x800
 >> Updated instruction            :  20 b8 8d e2          	: add fp, sp, #32, #16
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8030fed0, value: 0x8010ff60!! Count 329 Skipping to end.
 >> Run result: Fault errored program - last instruction: 328.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x1000
 >> Updated instruction            :  20 a0 8d e2          	: add sl, sp, #0x20
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x2000
 >> Updated instruction            :  20 90 8d e2          	: add sb, sp, #0x20
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x4000
 >> Updated instruction            :  20 f0 8d e2          	: add pc, sp, #0x20
 >> Lifespan countdown: 2. (0x8010ff1c)
 >> Lifespan countdown: 1. (0x8010ff20)
 >> Reverting instruction          :  20 b0 8d e2 
Hook intr. Interrupt number: 2 
 >> Run result: Run ended early - system interrupt occurred.





########## Starting new run. Address: 0x800004a8. Hit: 1. Lifespan: 2. Instruction: 00000325. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  20 b0 8d e2          	: add fp, sp, #0x20
 >> Mask                           :  0x8000
 >> Updated instruction            :  20 30 8d e2          	: add r3, sp, #0x20
 >> Lifespan countdown: 2. (0x800004ac)
 >> Lifespan countdown: 1. (0x800004b0)
 >> Reverting instruction          :  20 b0 8d e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 0. Instruction: 00000334. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004cc
 >> Updated                     : 0x00000000800004d0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  11 c0 93 e5          	: ldr ip, [r3, #0x11]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  12 c0 93 e5          	: ldr ip, [r3, #0x12]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  14 c0 93 e5          	: ldr ip, [r3, #0x14]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  18 c0 93 e5          	: ldr ip, [r3, #0x18]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  00 c0 93 e5          	: ldr ip, [r3]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  30 c0 93 e5          	: ldr ip, [r3, #0x30]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  50 c0 93 e5          	: ldr ip, [r3, #0x50]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  90 c0 93 e5          	: ldr ip, [r3, #0x90]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  10 c1 93 e5          	: ldr ip, [r3, #0x110]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110070, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 334.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  10 c2 93 e5          	: ldr ip, [r3, #0x210]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110170, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 334.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  10 c4 93 e5          	: ldr ip, [r3, #0x410]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110370, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 334.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  10 c8 93 e5          	: ldr ip, [r3, #0x810]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110770, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 334.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 d0 93 e5          	: ldr sp, [r3, #0x10]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 e0 93 e5          	: ldr lr, [r3, #0x10]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 80 93 e5          	: ldr r8, [r3, #0x10]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004cc. Hit: 1. Lifespan: 2. Instruction: 00000334. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 c0 93 e5          	: ldr ip, [r3, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 40 93 e5          	: ldr r4, [r3, #0x10]
 >> Lifespan countdown: 2. (0x800004d0)
 >> Lifespan countdown: 1. (0x800004d4)
 >> Reverting instruction          :  10 c0 93 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 0. Instruction: 00000341. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800004e8
 >> Updated                     : 0x00000000800004ec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x1
 >> Updated instruction            :  da 30 07 e3          	: movw r3, #0x70da
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x2
 >> Updated instruction            :  d9 30 07 e3          	: movw r3, #0x70d9
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x4
 >> Updated instruction            :  df 30 07 e3          	: movw r3, #0x70df
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x8
 >> Updated instruction            :  d3 30 07 e3          	: movw r3, #0x70d3
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x10
 >> Updated instruction            :  cb 30 07 e3          	: movw r3, #0x70cb
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x20
 >> Updated instruction            :  fb 30 07 e3          	: movw r3, #0x70fb
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x40
 >> Updated instruction            :  9b 30 07 e3          	: movw r3, #0x709b
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x80
 >> Updated instruction            :  5b 30 07 e3          	: movw r3, #0x705b
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x100
 >> Updated instruction            :  db 31 07 e3          	: movw r3, #0x71db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x200
 >> Updated instruction            :  db 32 07 e3          	: movw r3, #0x72db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x400
 >> Updated instruction            :  db 34 07 e3          	: movw r3, #0x74db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x800
 >> Updated instruction            :  db 38 07 e3          	: movw r3, #0x78db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x1000
 >> Updated instruction            :  db 20 07 e3          	: movw r2, #0x70db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x2000
 >> Updated instruction            :  db 10 07 e3          	: movw r1, #0x70db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000000070db, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x4000
 >> Updated instruction            :  db 70 07 e3          	: movw r7, #0x70db
 >> Lifespan countdown: 2. (0x800004ec)
 >> Lifespan countdown: 1. (0x800004f0)
 >> Reverting instruction          :  db 30 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800004e8. Hit: 1. Lifespan: 2. Instruction: 00000341. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  db 30 07 e3          	: movw r3, #0x70db
 >> Mask                           :  0x8000
 >> Updated instruction            :  db b0 07 e3          	: movw fp, #0x70db
 >> Lifespan countdown: 2. (0x800004ec)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x7067, value: 0xe8c7b756!! Count 343 Skipping to end.
 >> Run result: Fault errored program - last instruction: 342.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 0. Instruction: 00000349. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000508
 >> Updated                     : 0x000000008000050c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x1
 >> Updated instruction            :  86 37 44 e3          	: movt r3, #0x4786
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x2
 >> Updated instruction            :  85 37 44 e3          	: movt r3, #0x4785
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x4
 >> Updated instruction            :  83 37 44 e3          	: movt r3, #0x4783
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x8
 >> Updated instruction            :  8f 37 44 e3          	: movt r3, #0x478f
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x10
 >> Updated instruction            :  97 37 44 e3          	: movt r3, #0x4797
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x20
 >> Updated instruction            :  a7 37 44 e3          	: movt r3, #0x47a7
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x40
 >> Updated instruction            :  c7 37 44 e3          	: movt r3, #0x47c7
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x80
 >> Updated instruction            :  07 37 44 e3          	: movt r3, #0x4707
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x100
 >> Updated instruction            :  87 36 44 e3          	: movt r3, #0x4687
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x200
 >> Updated instruction            :  87 35 44 e3          	: movt r3, #0x4587
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x400
 >> Updated instruction            :  87 33 44 e3          	: movt r3, #0x4387
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x800
 >> Updated instruction            :  87 3f 44 e3          	: movt r3, #0x4f87
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x1000
 >> Updated instruction            :  87 27 44 e3          	: movt r2, #0x4787
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x2000
 >> Updated instruction            :  87 17 44 e3          	: movt r1, #0x4787
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000004787ff78, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x4000
 >> Updated instruction            :  87 77 44 e3          	: movt r7, #0x4787
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000508. Hit: 1. Lifespan: 2. Instruction: 00000349. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  87 37 44 e3          	: movt r3, #0x4787
 >> Mask                           :  0x8000
 >> Updated instruction            :  87 b7 44 e3          	: movt fp, #0x4787
 >> Lifespan countdown: 2. (0x8000050c)
 >> Lifespan countdown: 1. (0x80000510)
 >> Reverting instruction          :  87 37 44 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x4787fe9c, value: 0xc62a!! Count 352 Skipping to end.
 >> Run result: Fault errored program - last instruction: 351.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 0. Instruction: 00000356. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000524
 >> Updated                     : 0x0000000080000528
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x1
 >> Updated instruction            :  d9 08 09 e3          	: movw r0, #0x98d9
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x2
 >> Updated instruction            :  da 08 09 e3          	: movw r0, #0x98da
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x4
 >> Updated instruction            :  dc 08 09 e3          	: movw r0, #0x98dc
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x8
 >> Updated instruction            :  d0 08 09 e3          	: movw r0, #0x98d0
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x10
 >> Updated instruction            :  c8 08 09 e3          	: movw r0, #0x98c8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x20
 >> Updated instruction            :  f8 08 09 e3          	: movw r0, #0x98f8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x40
 >> Updated instruction            :  98 08 09 e3          	: movw r0, #0x9898
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x80
 >> Updated instruction            :  58 08 09 e3          	: movw r0, #0x9858
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x100
 >> Updated instruction            :  d8 09 09 e3          	: movw r0, #0x99d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x200
 >> Updated instruction            :  d8 0a 09 e3          	: movw r0, #0x9ad8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x400
 >> Updated instruction            :  d8 0c 09 e3          	: movw r0, #0x9cd8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x800
 >> Updated instruction            :  d8 00 09 e3          	: movw r0, #0x90d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x1000
 >> Updated instruction            :  d8 18 09 e3          	: movw r1, #0x98d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000000098d8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x2000
 >> Updated instruction            :  d8 28 09 e3          	: movw r2, #0x98d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x4000
 >> Updated instruction            :  d8 48 09 e3          	: movw r4, #0x98d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000524. Hit: 1. Lifespan: 2. Instruction: 00000356. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d8 08 09 e3          	: movw r0, #0x98d8
 >> Mask                           :  0x8000
 >> Updated instruction            :  d8 88 09 e3          	: movw r8, #0x98d8
 >> Lifespan countdown: 2. (0x80000528)
 >> Lifespan countdown: 1. (0x8000052c)
 >> Reverting instruction          :  d8 08 09 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 0. Instruction: 00000364. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000544
 >> Updated                     : 0x0000000080000548
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 10 0b e5          	: str r1, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000008010ff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a 10 0b e5          	: str r1, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000008010, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c 10 0b e5          	: str r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 10 0b e5          	: str r1, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 10 0b e5          	: str r1, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 10 0b e5          	: str r1, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 10 0b e5          	: str r1, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 11 0b e5          	: str r1, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 12 0b e5          	: str r1, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 14 0b e5          	: str r1, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 18 0b e5          	: str r1, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 00 0b e5          	: str r0, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000698098d8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 30 0b e5          	: str r3, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000895cd7be, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 50 0b e5          	: str r5, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000544. Hit: 1. Lifespan: 2. Instruction: 00000364. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 10 0b e5          	: str r1, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 90 0b e5          	: str sb, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000548)
 >> Lifespan countdown: 1. (0x8000054c)
 >> Reverting instruction          :  28 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 0. Instruction: 00000370. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000055c
 >> Updated                     : 0x0000000080000560
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x1
 >> Updated instruction            :  01 10 97 e5          	: ldr r1, [r7, #1]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x2
 >> Updated instruction            :  02 10 97 e5          	: ldr r1, [r7, #2]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x4
 >> Updated instruction            :  04 10 97 e5          	: ldr r1, [r7, #4]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x8
 >> Updated instruction            :  08 10 97 e5          	: ldr r1, [r7, #8]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x10
 >> Updated instruction            :  10 10 97 e5          	: ldr r1, [r7, #0x10]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x20
 >> Updated instruction            :  20 10 97 e5          	: ldr r1, [r7, #0x20]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x40
 >> Updated instruction            :  40 10 97 e5          	: ldr r1, [r7, #0x40]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x80
 >> Updated instruction            :  80 10 97 e5          	: ldr r1, [r7, #0x80]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x100
 >> Updated instruction            :  00 11 97 e5          	: ldr r1, [r7, #0x100]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110078, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x200
 >> Updated instruction            :  00 12 97 e5          	: ldr r1, [r7, #0x200]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110178, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x400
 >> Updated instruction            :  00 14 97 e5          	: ldr r1, [r7, #0x400]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110378, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x800
 >> Updated instruction            :  00 18 97 e5          	: ldr r1, [r7, #0x800]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110778, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 370.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 00 97 e5          	: ldr r0, [r7]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 30 97 e5          	: ldr r3, [r7]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 50 97 e5          	: ldr r5, [r7]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000055c. Hit: 1. Lifespan: 2. Instruction: 00000370. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 10 97 e5          	: ldr r1, [r7]
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 90 97 e5          	: ldr sb, [r7]
 >> Lifespan countdown: 2. (0x80000560)
 >> Lifespan countdown: 1. (0x80000564)
 >> Reverting instruction          :  00 10 97 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 0. Instruction: 00000379. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000580
 >> Updated                     : 0x0000000080000584
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 a0 e1          	: mov lr, r0
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 a0 e1          	: mov lr, r3
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 a0 e1          	: mov lr, r5
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 a0 e1          	: mov lr, sb
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 a0 e1          	: lsl lr, r1, r0
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 a0 e1          	: lsr lr, r1, #0x20
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 a0 e1          	: asr lr, r1, #0x20
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 a0 e1          	: lsl lr, r1, #1
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 a0 e1          	: lsl lr, r1, #2
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 a0 e1          	: lsl lr, r1, #4
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 a0 e1          	: lsl lr, r1, #8
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 a0 e1          	: lsl lr, r1, #0x10
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 a0 e1          	: mov pc, r1
 >!  Erm -  fetching from unmapped memory, address: 0xed8790aa, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 379.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 a0 e1          	: mov ip, r1
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 a0 e1          	: mov sl, r1
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000580. Hit: 1. Lifespan: 2. Instruction: 00000379. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 a0 e1          	: mov lr, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 a0 e1          	: mov r6, r1
 >> Lifespan countdown: 2. (0x80000584)
 >> Lifespan countdown: 1. (0x80000588)
 >> Reverting instruction          :  01 e0 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 0. Instruction: 00000385. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000598
 >> Updated                     : 0x000000008000059c
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002c37582f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 80 a0 e1          	: mov r8, r6
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f8fa0bd8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 80 a0 e1          	: mov r8, r5
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000e8c7b762, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 80 a0 e1          	: mov r8, r3
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010325482, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 80 a0 e1          	: mov r8, pc
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 80 a0 e1          	: lsl r8, r7, r0
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 80 a0 e1          	: lsr r8, r7, #0x20
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 80 a0 e1          	: asr r8, r7, #0x20
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000000b, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 80 a0 e1          	: lsl r8, r7, #1
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fefc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 81 a0 e1          	: lsl r8, r7, #2
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fdec, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 82 a0 e1          	: lsl r8, r7, #4
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff78c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 84 a0 e1          	: lsl r8, r7, #8
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff780c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 88 a0 e1          	: lsl r8, r7, #0x10
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff78000c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 90 a0 e1          	: mov sb, r7
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002c37582f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 a0 a0 e1          	: mov sl, r7
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002c37582f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 c0 a0 e1          	: mov ip, r7
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002c37582f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000598. Hit: 1. Lifespan: 2. Instruction: 00000385. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 80 a0 e1          	: mov r8, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 00 a0 e1          	: mov r0, r7
 >> Lifespan countdown: 2. (0x8000059c)
 >> Lifespan countdown: 1. (0x800005a0)
 >> Reverting instruction          :  07 80 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002c37582f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 413.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 0. Instruction: 00000392. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005b4
 >> Updated                     : 0x00000000800005b8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 60 86 e0          	: add r6, r6, r5
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 60 86 e0          	: add r6, r6, r6
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 60 86 e0          	: add r6, r6, r0
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 60 86 e0          	: add r6, r6, ip
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 60 86 e0          	: add r6, r6, r4, lsl r0
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 60 86 e0          	: add r6, r6, r4, lsr #32
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 60 86 e0          	: add r6, r6, r4, asr #32
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 60 86 e0          	: add r6, r6, r4, lsl #1
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 61 86 e0          	: add r6, r6, r4, lsl #2
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 62 86 e0          	: add r6, r6, r4, lsl #4
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 64 86 e0          	: add r6, r6, r4, lsl #8
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 68 86 e0          	: add r6, r6, r4, lsl #16
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 70 86 e0          	: add r7, r6, r4
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a343a46f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 397.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 40 86 e0          	: add r4, r6, r4
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 20 86 e0          	: add r2, r6, r4
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005b4. Hit: 1. Lifespan: 2. Instruction: 00000392. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 60 86 e0          	: add r6, r6, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 e0 86 e0          	: add lr, r6, r4
 >> Lifespan countdown: 2. (0x800005b8)
 >> Lifespan countdown: 1. (0x800005bc)
 >> Reverting instruction          :  04 60 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 0. Instruction: 00000402. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005dc
 >> Updated                     : 0x00000000800005e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 20 22 e0          	: eor r2, r2, sp
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 20 22 e0          	: eor r2, r2, lr
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 20 22 e0          	: eor r2, r2, r8
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 20 22 e0          	: eor r2, r2, r4
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 20 22 e0          	: eor r2, r2, ip, lsl r0
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 20 22 e0          	: eor r2, r2, ip, lsr #32
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 20 22 e0          	: eor r2, r2, ip, asr #32
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 20 22 e0          	: eor r2, r2, ip, lsl #1
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 21 22 e0          	: eor r2, r2, ip, lsl #2
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 22 22 e0          	: eor r2, r2, ip, lsl #4
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 24 22 e0          	: eor r2, r2, ip, lsl #8
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 28 22 e0          	: eor r2, r2, ip, lsl #16
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 30 22 e0          	: eor r3, r2, ip
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 00 22 e0          	: eor r0, r2, ip
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 60 22 e0          	: eor r6, r2, ip
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005dc. Hit: 1. Lifespan: 2. Instruction: 00000402. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 22 e0          	: eor r2, r2, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c a0 22 e0          	: eor sl, r2, ip
 >> Lifespan countdown: 2. (0x800005e0)
 >> Lifespan countdown: 1. (0x800005e4)
 >> Reverting instruction          :  0c 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 0. Instruction: 00000409. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800005f8
 >> Updated                     : 0x00000000800005fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 82 e0          	: add r2, r2, r4
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 82 e0          	: add r2, r2, r7
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 82 e0          	: add r2, r2, r1
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 82 e0          	: add r2, r2, sp
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 82 e0          	: add r2, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 82 e0          	: add r2, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 82 e0          	: add r2, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 82 e0          	: add r2, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 82 e0          	: add r2, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 82 e0          	: add r2, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 82 e0          	: add r2, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 82 e0          	: add r2, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 82 e0          	: add r3, r2, r5
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 82 e0          	: add r0, r2, r5
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 82 e0          	: add r6, r2, r5
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800005f8. Hit: 1. Lifespan: 2. Instruction: 00000409. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 82 e0          	: add r2, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 82 e0          	: add sl, r2, r5
 >> Lifespan countdown: 2. (0x800005fc)
 >> Lifespan countdown: 1. (0x80000600)
 >> Reverting instruction          :  05 20 82 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 0. Instruction: 00000419. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000620
 >> Updated                     : 0x0000000080000624
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 e0 8e e0          	: add lr, lr, r2
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 e0 8e e0          	: add lr, lr, r1
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 e0 8e e0          	: add lr, lr, r7
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b e0 8e e0          	: add lr, lr, fp
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 e0 8e e0          	: add lr, lr, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 e0 8e e0          	: add lr, lr, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 e0 8e e0          	: add lr, lr, r3, asr #32
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 e0 8e e0          	: add lr, lr, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 e1 8e e0          	: add lr, lr, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 e2 8e e0          	: add lr, lr, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 e4 8e e0          	: add lr, lr, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 e8 8e e0          	: add lr, lr, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 f0 8e e0          	: add pc, lr, r3
 >!  Erm -  fetching from unmapped memory, address: 0xb18b7a76, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 419.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 c0 8e e0          	: add ip, lr, r3
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 a0 8e e0          	: add sl, lr, r3
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000620. Hit: 1. Lifespan: 2. Instruction: 00000419. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 e0 8e e0          	: add lr, lr, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 60 8e e0          	: add r6, lr, r3
 >> Lifespan countdown: 2. (0x80000624)
 >> Lifespan countdown: 1. (0x80000628)
 >> Reverting instruction          :  03 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 0. Instruction: 00000425. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000638
 >> Updated                     : 0x000000008000063c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x1
 >> Updated instruction            :  11 70 98 e5          	: ldr r7, [r8, #0x11]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x2
 >> Updated instruction            :  12 70 98 e5          	: ldr r7, [r8, #0x12]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x4
 >> Updated instruction            :  14 70 98 e5          	: ldr r7, [r8, #0x14]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x8
 >> Updated instruction            :  18 70 98 e5          	: ldr r7, [r8, #0x18]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x10
 >> Updated instruction            :  00 70 98 e5          	: ldr r7, [r8]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x20
 >> Updated instruction            :  30 70 98 e5          	: ldr r7, [r8, #0x30]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x40
 >> Updated instruction            :  50 70 98 e5          	: ldr r7, [r8, #0x50]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x80
 >> Updated instruction            :  90 70 98 e5          	: ldr r7, [r8, #0x90]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x100
 >> Updated instruction            :  10 71 98 e5          	: ldr r7, [r8, #0x110]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110088, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x200
 >> Updated instruction            :  10 72 98 e5          	: ldr r7, [r8, #0x210]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110188, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x400
 >> Updated instruction            :  10 74 98 e5          	: ldr r7, [r8, #0x410]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110388, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x800
 >> Updated instruction            :  10 78 98 e5          	: ldr r7, [r8, #0x810]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110788, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x1000
 >> Updated instruction            :  10 60 98 e5          	: ldr r6, [r8, #0x10]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x2000
 >> Updated instruction            :  10 50 98 e5          	: ldr r5, [r8, #0x10]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xe8, value: 0x8010ff60!! Count 435 Skipping to end.
 >> Run result: Fault errored program - last instruction: 434.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x4000
 >> Updated instruction            :  10 30 98 e5          	: ldr r3, [r8, #0x10]
 >> Lifespan countdown: 2. (0x8000063c)
 >> Lifespan countdown: 1. (0x80000640)
 >> Reverting instruction          :  10 70 98 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000638. Hit: 1. Lifespan: 2. Instruction: 00000425. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  10 70 98 e5          	: ldr r7, [r8, #0x10]
 >> Mask                           :  0x8000
 >> Updated instruction            :  10 f0 98 e5          	: ldr pc, [r8, #0x10]
 >!  Erm -  fetching from unmapped memory, address: 0x80, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 425.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 0. Instruction: 00000433. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000658
 >> Updated                     : 0x000000008000065c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 80 2e e0          	: eor r8, lr, r1
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 80 2e e0          	: eor r8, lr, r2
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 80 2e e0          	: eor r8, lr, r4
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 80 2e e0          	: eor r8, lr, r8
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 80 2e e0          	: eor r8, lr, r0, lsl r0
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 80 2e e0          	: eor r8, lr, r0, lsr #32
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 80 2e e0          	: eor r8, lr, r0, asr #32
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 80 2e e0          	: eor r8, lr, r0, lsl #1
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 81 2e e0          	: eor r8, lr, r0, lsl #2
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 82 2e e0          	: eor r8, lr, r0, lsl #4
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 84 2e e0          	: eor r8, lr, r0, lsl #8
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 88 2e e0          	: eor r8, lr, r0, lsl #16
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 90 2e e0          	: eor sb, lr, r0
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 a0 2e e0          	: eor sl, lr, r0
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 c0 2e e0          	: eor ip, lr, r0
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000658. Hit: 1. Lifespan: 2. Instruction: 00000433. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 80 2e e0          	: eor r8, lr, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 00 2e e0          	: eor r0, lr, r0
 >> Lifespan countdown: 2. (0x8000065c)
 >> Lifespan countdown: 1. (0x80000660)
 >> Reverting instruction          :  00 80 2e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 0. Instruction: 00000442. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000067c
 >> Updated                     : 0x0000000080000680
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 0c e0          	: and ip, ip, sb
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 0c e0          	: and ip, ip, sl
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 0c e0          	: and ip, ip, ip
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 0c e0          	: and ip, ip, r0
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 0c e0          	: and ip, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 0c e0          	: and ip, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 0c e0          	: and ip, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 0c e0          	: and ip, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 0c e0          	: and ip, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 0c e0          	: and ip, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 0c e0          	: and ip, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 0c e0          	: and ip, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 0c e0          	: and sp, ip, r8
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 0c e0          	: and lr, ip, r8
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xd72287, value: 0x0!! Count 447 Skipping to end.
 >> Run result: Fault errored program - last instruction: 446.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 0c e0          	: and r8, ip, r8
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000067c. Hit: 1. Lifespan: 2. Instruction: 00000442. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 0c e0          	: and ip, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 0c e0          	: and r4, ip, r8
 >> Lifespan countdown: 2. (0x80000680)
 >> Lifespan countdown: 1. (0x80000684)
 >> Reverting instruction          :  08 c0 0c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000d72233, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 448.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 0. Instruction: 00000450. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000069c
 >> Updated                     : 0x00000000800006a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 00 21 e0          	: eor r0, r1, sb
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 00 21 e0          	: eor r0, r1, sl
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 00 21 e0          	: eor r0, r1, ip
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 00 21 e0          	: eor r0, r1, r0
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 00 21 e0          	: eor r0, r1, r8, lsl r0
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 00 21 e0          	: eor r0, r1, r8, lsr #32
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 00 21 e0          	: eor r0, r1, r8, asr #32
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 00 21 e0          	: eor r0, r1, r8, lsl #1
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 01 21 e0          	: eor r0, r1, r8, lsl #2
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 02 21 e0          	: eor r0, r1, r8, lsl #4
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 04 21 e0          	: eor r0, r1, r8, lsl #8
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 08 21 e0          	: eor r0, r1, r8, lsl #16
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 10 21 e0          	: eor r1, r1, r8
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 20 21 e0          	: eor r2, r1, r8
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 40 21 e0          	: eor r4, r1, r8
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000012955cf4, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000069c. Hit: 1. Lifespan: 2. Instruction: 00000450. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 21 e0          	: eor r0, r1, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 80 21 e0          	: eor r8, r1, r8
 >> Lifespan countdown: 2. (0x800006a0)
 >> Lifespan countdown: 1. (0x800006a4)
 >> Reverting instruction          :  08 00 21 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 0. Instruction: 00000458. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006bc
 >> Updated                     : 0x00000000800006c0
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x950080, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 00 a0 e1          	: mov r0, pc
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 00 a0 e1          	: mov r0, ip
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa8304683, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 00 a0 e1          	: mov r0, sl
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8b44f81f, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 00 a0 e1          	: mov r0, r6
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc59700a5, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 00 a0 e1          	: lsl r0, lr, r0
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600070, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 00 a0 e1          	: lsr r0, lr, #0x20
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x70, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 00 a0 e1          	: asr r0, lr, #0x20
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6f, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 00 a0 e1          	: lsl r0, lr, #1
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21ff30, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 01 a0 e1          	: lsl r0, lr, #2
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x43fdf0, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 02 a0 e1          	: lsl r0, lr, #4
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff670, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 04 a0 e1          	: lsl r0, lr, #8
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6070, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 08 a0 e1          	: lsl r0, lr, #0x10
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600070, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 10 a0 e1          	: mov r1, lr
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x950080, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e 20 a0 e1          	: mov r2, lr
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x950080, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e 40 a0 e1          	: mov r4, lr
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x950080, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006bc. Hit: 1. Lifespan: 2. Instruction: 00000458. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 00 a0 e1          	: mov r0, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 80 a0 e1          	: mov r8, lr
 >> Lifespan countdown: 2. (0x800006c0)
 >> Lifespan countdown: 1. (0x800006c4)
 >> Reverting instruction          :  0e 00 a0 e1 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x950080, value: 0x0!! Count 461 Skipping to end.
 >> Run result: Fault errored program - last instruction: 460.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 0. Instruction: 00000465. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006d8
 >> Updated                     : 0x00000000800006dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x1
 >> Updated instruction            :  1d 40 94 e5          	: ldr r4, [r4, #0x1d]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x2
 >> Updated instruction            :  1e 40 94 e5          	: ldr r4, [r4, #0x1e]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x4
 >> Updated instruction            :  18 40 94 e5          	: ldr r4, [r4, #0x18]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x8
 >> Updated instruction            :  14 40 94 e5          	: ldr r4, [r4, #0x14]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x10
 >> Updated instruction            :  0c 40 94 e5          	: ldr r4, [r4, #0xc]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x20
 >> Updated instruction            :  3c 40 94 e5          	: ldr r4, [r4, #0x3c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x40
 >> Updated instruction            :  5c 40 94 e5          	: ldr r4, [r4, #0x5c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x80
 >> Updated instruction            :  9c 40 94 e5          	: ldr r4, [r4, #0x9c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110014, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x100
 >> Updated instruction            :  1c 41 94 e5          	: ldr r4, [r4, #0x11c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110094, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x200
 >> Updated instruction            :  1c 42 94 e5          	: ldr r4, [r4, #0x21c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110194, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x400
 >> Updated instruction            :  1c 44 94 e5          	: ldr r4, [r4, #0x41c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110394, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x800
 >> Updated instruction            :  1c 48 94 e5          	: ldr r4, [r4, #0x81c]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110794, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 465.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  1c 50 94 e5          	: ldr r5, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  1c 60 94 e5          	: ldr r6, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  1c 00 94 e5          	: ldr r0, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x74, value: 0x8010ff78!! Count 473 Skipping to end.
 >> Run result: Fault errored program - last instruction: 472.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006d8. Hit: 1. Lifespan: 2. Instruction: 00000465. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  1c 40 94 e5          	: ldr r4, [r4, #0x1c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  1c c0 94 e5          	: ldr ip, [r4, #0x1c]
 >> Lifespan countdown: 2. (0x800006dc)
 >> Lifespan countdown: 1. (0x800006e0)
 >> Reverting instruction          :  1c 40 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 0. Instruction: 00000473. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800006f8
 >> Updated                     : 0x00000000800006fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 8e e0          	: add lr, lr, r0
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 8e e0          	: add lr, lr, r3
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 8e e0          	: add lr, lr, r5
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 8e e0          	: add lr, lr, sb
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 8e e0          	: add lr, lr, r1, lsl r0
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 8e e0          	: add lr, lr, r1, lsr #32
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 8e e0          	: add lr, lr, r1, asr #32
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 8e e0          	: add lr, lr, r1, lsl #1
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 8e e0          	: add lr, lr, r1, lsl #2
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 8e e0          	: add lr, lr, r1, lsl #4
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 8e e0          	: add lr, lr, r1, lsl #8
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 8e e0          	: add lr, lr, r1, lsl #16
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 8e e0          	: add pc, lr, r1
 >!  Erm -  fetching from unmapped memory, address: 0xff8913c4, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 473.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 8e e0          	: add ip, lr, r1
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 8e e0          	: add sl, lr, r1
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800006f8. Hit: 1. Lifespan: 2. Instruction: 00000473. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 8e e0          	: add lr, lr, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 8e e0          	: add r6, lr, r1
 >> Lifespan countdown: 2. (0x800006fc)
 >> Lifespan countdown: 1. (0x80000700)
 >> Reverting instruction          :  01 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 0. Instruction: 00000480. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000714
 >> Updated                     : 0x0000000080000718
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x1
 >> Updated instruction            :  31 10 0b e5          	: str r1, [fp, #-0x31]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x2
 >> Updated instruction            :  32 10 0b e5          	: str r1, [fp, #-0x32]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x4
 >> Updated instruction            :  34 10 0b e5          	: str r1, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x8
 >> Updated instruction            :  38 10 0b e5          	: str r1, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x10
 >> Updated instruction            :  20 10 0b e5          	: str r1, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000008, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1049.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x20
 >> Updated instruction            :  10 10 0b e5          	: str r1, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x40
 >> Updated instruction            :  70 10 0b e5          	: str r1, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x80
 >> Updated instruction            :  b0 10 0b e5          	: str r1, [fp, #-0xb0]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x100
 >> Updated instruction            :  30 11 0b e5          	: str r1, [fp, #-0x130]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x200
 >> Updated instruction            :  30 12 0b e5          	: str r1, [fp, #-0x230]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x400
 >> Updated instruction            :  30 14 0b e5          	: str r1, [fp, #-0x430]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x800
 >> Updated instruction            :  30 18 0b e5          	: str r1, [fp, #-0x830]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x1000
 >> Updated instruction            :  30 00 0b e5          	: str r0, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x2000
 >> Updated instruction            :  30 30 0b e5          	: str r3, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x4000
 >> Updated instruction            :  30 50 0b e5          	: str r5, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000714. Hit: 1. Lifespan: 2. Instruction: 00000480. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  30 10 0b e5          	: str r1, [fp, #-0x30]
 >> Mask                           :  0x8000
 >> Updated instruction            :  30 90 0b e5          	: str sb, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000718)
 >> Lifespan countdown: 1. (0x8000071c)
 >> Reverting instruction          :  30 10 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 0. Instruction: 00000489. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000738
 >> Updated                     : 0x000000008000073c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x1
 >> Updated instruction            :  92 71 07 e3          	: movw r7, #0x7192
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x2
 >> Updated instruction            :  91 71 07 e3          	: movw r7, #0x7191
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x4
 >> Updated instruction            :  97 71 07 e3          	: movw r7, #0x7197
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x8
 >> Updated instruction            :  9b 71 07 e3          	: movw r7, #0x719b
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x10
 >> Updated instruction            :  83 71 07 e3          	: movw r7, #0x7183
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x20
 >> Updated instruction            :  b3 71 07 e3          	: movw r7, #0x71b3
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x40
 >> Updated instruction            :  d3 71 07 e3          	: movw r7, #0x71d3
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x80
 >> Updated instruction            :  13 71 07 e3          	: movw r7, #0x7113
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x100
 >> Updated instruction            :  93 70 07 e3          	: movw r7, #0x7093
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x200
 >> Updated instruction            :  93 73 07 e3          	: movw r7, #0x7393
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x400
 >> Updated instruction            :  93 75 07 e3          	: movw r7, #0x7593
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x800
 >> Updated instruction            :  93 79 07 e3          	: movw r7, #0x7993
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x1000
 >> Updated instruction            :  93 61 07 e3          	: movw r6, #0x7193
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x2000
 >> Updated instruction            :  93 51 07 e3          	: movw r5, #0x7193
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x4000
 >> Updated instruction            :  93 31 07 e3          	: movw r3, #0x7193
 >> Lifespan countdown: 2. (0x8000073c)
 >> Lifespan countdown: 1. (0x80000740)
 >> Reverting instruction          :  93 71 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000738. Hit: 1. Lifespan: 2. Instruction: 00000489. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  93 71 07 e3          	: movw r7, #0x7193
 >> Mask                           :  0x8000
 >> Updated instruction            :  93 f1 07 e3          	: movw pc, #0x7193
 >!  Erm -  fetching from unmapped memory, address: 0x7192, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 489.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 0. Instruction: 00000497. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000758
 >> Updated                     : 0x000000008000075c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 22 e0          	: eor r0, r2, r4
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 22 e0          	: eor r0, r2, r7
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 22 e0          	: eor r0, r2, r1
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 22 e0          	: eor r0, r2, sp
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 22 e0          	: eor r0, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 22 e0          	: eor r0, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 22 e0          	: eor r0, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 22 e0          	: eor r0, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 22 e0          	: eor r0, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 22 e0          	: eor r0, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 22 e0          	: eor r0, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 22 e0          	: eor r0, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 22 e0          	: eor r1, r2, r5
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2ace840, value: 0x0!! Count 504 Skipping to end.
 >> Run result: Fault errored program - last instruction: 503.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 22 e0          	: eor r2, r2, r5
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 22 e0          	: eor r4, r2, r5
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000758. Hit: 1. Lifespan: 2. Instruction: 00000497. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 22 e0          	: eor r0, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 22 e0          	: eor r8, r2, r5
 >> Lifespan countdown: 2. (0x8000075c)
 >> Lifespan countdown: 1. (0x80000760)
 >> Reverting instruction          :  05 00 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 0. Instruction: 00000506. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000077c
 >> Updated                     : 0x0000000080000780
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x1
 >> Updated instruction            :  8f a3 04 e3          	: movw sl, #0x438f
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x2
 >> Updated instruction            :  8c a3 04 e3          	: movw sl, #0x438c
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x4
 >> Updated instruction            :  8a a3 04 e3          	: movw sl, #0x438a
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x8
 >> Updated instruction            :  86 a3 04 e3          	: movw sl, #0x4386
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x10
 >> Updated instruction            :  9e a3 04 e3          	: movw sl, #0x439e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x20
 >> Updated instruction            :  ae a3 04 e3          	: movw sl, #0x43ae
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x40
 >> Updated instruction            :  ce a3 04 e3          	: movw sl, #0x43ce
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x80
 >> Updated instruction            :  0e a3 04 e3          	: movw sl, #0x430e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x100
 >> Updated instruction            :  8e a2 04 e3          	: movw sl, #0x428e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x200
 >> Updated instruction            :  8e a1 04 e3          	: movw sl, #0x418e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x400
 >> Updated instruction            :  8e a7 04 e3          	: movw sl, #0x478e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x800
 >> Updated instruction            :  8e ab 04 e3          	: movw sl, #0x4b8e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x1000
 >> Updated instruction            :  8e b3 04 e3          	: movw fp, #0x438e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000004366, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 517.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x2000
 >> Updated instruction            :  8e 83 04 e3          	: movw r8, #0x438e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x440e, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x4000
 >> Updated instruction            :  8e e3 04 e3          	: movw lr, #0x438e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000077c. Hit: 1. Lifespan: 2. Instruction: 00000506. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  8e a3 04 e3          	: movw sl, #0x438e
 >> Mask                           :  0x8000
 >> Updated instruction            :  8e 23 04 e3          	: movw r2, #0x438e
 >> Lifespan countdown: 2. (0x80000780)
 >> Lifespan countdown: 1. (0x80000784)
 >> Reverting instruction          :  8e a3 04 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 0. Instruction: 00000514. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000079c
 >> Updated                     : 0x00000000800007a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x1
 >> Updated instruction            :  81 60 88 e5          	: str r6, [r8, #0x81]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x2
 >> Updated instruction            :  82 60 88 e5          	: str r6, [r8, #0x82]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x4
 >> Updated instruction            :  84 60 88 e5          	: str r6, [r8, #0x84]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x8
 >> Updated instruction            :  88 60 88 e5          	: str r6, [r8, #0x88]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x10
 >> Updated instruction            :  90 60 88 e5          	: str r6, [r8, #0x90]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x20
 >> Updated instruction            :  a0 60 88 e5          	: str r6, [r8, #0xa0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x40
 >> Updated instruction            :  c0 60 88 e5          	: str r6, [r8, #0xc0]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110020, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x80
 >> Updated instruction            :  00 60 88 e5          	: str r6, [r8]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x100
 >> Updated instruction            :  80 61 88 e5          	: str r6, [r8, #0x180]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100e0, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x200
 >> Updated instruction            :  80 62 88 e5          	: str r6, [r8, #0x280]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101e0, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x400
 >> Updated instruction            :  80 64 88 e5          	: str r6, [r8, #0x480]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103e0, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x800
 >> Updated instruction            :  80 68 88 e5          	: str r6, [r8, #0x880]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107e0, value: 0x0!! Count 515 Skipping to end.
 >> Run result: Fault errored program - last instruction: 514.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x1000
 >> Updated instruction            :  80 70 88 e5          	: str r7, [r8, #0x80]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x2000
 >> Updated instruction            :  80 40 88 e5          	: str r4, [r8, #0x80]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x4000
 >> Updated instruction            :  80 20 88 e5          	: str r2, [r8, #0x80]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000079c. Hit: 1. Lifespan: 2. Instruction: 00000514. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  80 60 88 e5          	: str r6, [r8, #0x80]
 >> Mask                           :  0x8000
 >> Updated instruction            :  80 e0 88 e5          	: str lr, [r8, #0x80]
 >> Lifespan countdown: 2. (0x800007a0)
 >> Lifespan countdown: 1. (0x800007a4)
 >> Reverting instruction          :  80 60 88 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 0. Instruction: 00000522. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007bc
 >> Updated                     : 0x00000000800007c0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x1
 >> Updated instruction            :  e3 27 80 e0          	: add r2, r0, r3, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x2
 >> Updated instruction            :  e0 27 80 e0          	: add r2, r0, r0, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x4
 >> Updated instruction            :  e6 27 80 e0          	: add r2, r0, r6, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x8
 >> Updated instruction            :  ea 27 80 e0          	: add r2, r0, sl, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x10
 >> Updated instruction            :  f2 27 80 e0          	: strd r2, r3, [r0], r2
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x886ce71c, value: 0x95bcad35!! Count 523 Skipping to end.
 >> Run result: Fault errored program - last instruction: 522.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x20
 >> Updated instruction            :  c2 27 80 e0          	: add r2, r0, r2, asr #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x40
 >> Updated instruction            :  a2 27 80 e0          	: add r2, r0, r2, lsr #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x80
 >> Updated instruction            :  62 27 80 e0          	: add r2, r0, r2, ror #14
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x100
 >> Updated instruction            :  e2 26 80 e0          	: add r2, r0, r2, ror #13
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x200
 >> Updated instruction            :  e2 25 80 e0          	: add r2, r0, r2, ror #11
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x400
 >> Updated instruction            :  e2 23 80 e0          	: add r2, r0, r2, ror #7
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x800
 >> Updated instruction            :  e2 2f 80 e0          	: add r2, r0, r2, ror #31
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x1000
 >> Updated instruction            :  e2 37 80 e0          	: add r3, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x2000
 >> Updated instruction            :  e2 07 80 e0          	: add r0, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x4000
 >> Updated instruction            :  e2 67 80 e0          	: add r6, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007bc. Hit: 1. Lifespan: 2. Instruction: 00000522. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e2 27 80 e0          	: add r2, r0, r2, ror #15
 >> Mask                           :  0x8000
 >> Updated instruction            :  e2 a7 80 e0          	: add sl, r0, r2, ror #15
 >> Lifespan countdown: 2. (0x800007c0)
 >> Lifespan countdown: 1. (0x800007c4)
 >> Reverting instruction          :  e2 27 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 0. Instruction: 00000529. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007d8
 >> Updated                     : 0x00000000800007dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 50 20 e0          	: eor r5, r0, r3
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 50 20 e0          	: eor r5, r0, r0
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 50 20 e0          	: eor r5, r0, r6
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 50 20 e0          	: eor r5, r0, sl
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 50 20 e0          	: eor r5, r0, r2, lsl r0
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 50 20 e0          	: eor r5, r0, r2, lsr #32
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 50 20 e0          	: eor r5, r0, r2, asr #32
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 50 20 e0          	: eor r5, r0, r2, lsl #1
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 51 20 e0          	: eor r5, r0, r2, lsl #2
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 52 20 e0          	: eor r5, r0, r2, lsl #4
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 54 20 e0          	: eor r5, r0, r2, lsl #8
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 58 20 e0          	: eor r5, r0, r2, lsl #16
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 40 20 e0          	: eor r4, r0, r2
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 70 20 e0          	: eor r7, r0, r2
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 10 20 e0          	: eor r1, r0, r2
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007d8. Hit: 1. Lifespan: 2. Instruction: 00000529. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 50 20 e0          	: eor r5, r0, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 d0 20 e0          	: eor sp, r0, r2
 >> Lifespan countdown: 2. (0x800007dc)
 >> Lifespan countdown: 1. (0x800007e0)
 >> Reverting instruction          :  02 50 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 0. Instruction: 00000535. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800007f0
 >> Updated                     : 0x00000000800007f4
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x1
 >> Updated instruction            :  29 e0 1b e5          	: ldr lr, [fp, #-0x29]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff78b0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x2
 >> Updated instruction            :  2a e0 1b e5          	: ldr lr, [fp, #-0x2a]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff788040, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x4
 >> Updated instruction            :  2c e0 1b e5          	: ldr lr, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x8
 >> Updated instruction            :  20 e0 1b e5          	: ldr lr, [fp, #-0x20]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x10
 >> Updated instruction            :  38 e0 1b e5          	: ldr lr, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x20
 >> Updated instruction            :  08 e0 1b e5          	: ldr lr, [fp, #-8]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x40
 >> Updated instruction            :  68 e0 1b e5          	: ldr lr, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000067452331, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x80
 >> Updated instruction            :  a8 e0 1b e5          	: ldr lr, [fp, #-0xa8]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x100
 >> Updated instruction            :  28 e1 1b e5          	: ldr lr, [fp, #-0x128]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x200
 >> Updated instruction            :  28 e2 1b e5          	: ldr lr, [fp, #-0x228]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x400
 >> Updated instruction            :  28 e4 1b e5          	: ldr lr, [fp, #-0x428]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x800
 >> Updated instruction            :  28 e8 1b e5          	: ldr lr, [fp, #-0x828]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x1000
 >> Updated instruction            :  28 f0 1b e5          	: ldr pc, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x8010ff78)
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 536.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x2000
 >> Updated instruction            :  28 c0 1b e5          	: ldr ip, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x4000
 >> Updated instruction            :  28 a0 1b e5          	: ldr sl, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800007f0. Hit: 1. Lifespan: 2. Instruction: 00000535. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  28 e0 1b e5          	: ldr lr, [fp, #-0x28]
 >> Mask                           :  0x8000
 >> Updated instruction            :  28 60 1b e5          	: ldr r6, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x800007f4)
 >> Lifespan countdown: 1. (0x800007f8)
 >> Reverting instruction          :  28 e0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000030, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 538.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 0. Instruction: 00000542. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000080c
 >> Updated                     : 0x0000000080000810
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011aa, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x1
 >> Updated instruction            :  2d 90 1b e5          	: ldr sb, [fp, #-0x2d]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x10ff6088, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x2
 >> Updated instruction            :  2e 90 1b e5          	: ldr sb, [fp, #-0x2e]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xff600088, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x4
 >> Updated instruction            :  28 90 1b e5          	: ldr sb, [fp, #-0x28]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x8
 >> Updated instruction            :  24 90 1b e5          	: ldr sb, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x10
 >> Updated instruction            :  3c 90 1b e5          	: ldr sb, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xefcdac11, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x20
 >> Updated instruction            :  0c 90 1b e5          	: ldr sb, [fp, #-0xc]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x40
 >> Updated instruction            :  6c 90 1b e5          	: ldr sb, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc8, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x80
 >> Updated instruction            :  ac 90 1b e5          	: ldr sb, [fp, #-0xac]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x100
 >> Updated instruction            :  2c 91 1b e5          	: ldr sb, [fp, #-0x12c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x200
 >> Updated instruction            :  2c 92 1b e5          	: ldr sb, [fp, #-0x22c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x400
 >> Updated instruction            :  2c 94 1b e5          	: ldr sb, [fp, #-0x42c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x800
 >> Updated instruction            :  2c 98 1b e5          	: ldr sb, [fp, #-0x82c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x88, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  2c 80 1b e5          	: ldr r8, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011aa, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  2c b0 1b e5          	: ldr fp, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011aa, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  2c d0 1b e5          	: ldr sp, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011aa, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000080c. Hit: 1. Lifespan: 2. Instruction: 00000542. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  2c 90 1b e5          	: ldr sb, [fp, #-0x2c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  2c 10 1b e5          	: ldr r1, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000810)
 >> Lifespan countdown: 1. (0x80000814)
 >> Reverting instruction          :  2c 90 1b e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x6b9011aa, value: 0x0!! Count 546 Skipping to end.
 >> Run result: Fault errored program - last instruction: 545.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 0. Instruction: 00000549. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000828
 >> Updated                     : 0x000000008000082c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 c0 22 e0          	: eor ip, r2, r0
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 c0 22 e0          	: eor ip, r2, r3
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 c0 22 e0          	: eor ip, r2, r5
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 c0 22 e0          	: eor ip, r2, sb
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 c0 22 e0          	: eor ip, r2, r1, lsl r0
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 c0 22 e0          	: eor ip, r2, r1, lsr #32
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 c0 22 e0          	: eor ip, r2, r1, asr #32
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 c0 22 e0          	: eor ip, r2, r1, lsl #1
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 c1 22 e0          	: eor ip, r2, r1, lsl #2
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 c2 22 e0          	: eor ip, r2, r1, lsl #4
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 c4 22 e0          	: eor ip, r2, r1, lsl #8
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 c8 22 e0          	: eor ip, r2, r1, lsl #16
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 d0 22 e0          	: eor sp, r2, r1
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 e0 22 e0          	: eor lr, r2, r1
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 80 22 e0          	: eor r8, r2, r1
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000828. Hit: 1. Lifespan: 2. Instruction: 00000549. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 c0 22 e0          	: eor ip, r2, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 40 22 e0          	: eor r4, r2, r1
 >> Lifespan countdown: 2. (0x8000082c)
 >> Lifespan countdown: 1. (0x80000830)
 >> Reverting instruction          :  01 c0 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 0. Instruction: 00000557. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000848
 >> Updated                     : 0x000000008000084c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x1
 >> Updated instruction            :  65 50 0b e5          	: str r5, [fp, #-0x65]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x2
 >> Updated instruction            :  66 50 0b e5          	: str r5, [fp, #-0x66]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x4
 >> Updated instruction            :  60 50 0b e5          	: str r5, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x8
 >> Updated instruction            :  6c 50 0b e5          	: str r5, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1743.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x10
 >> Updated instruction            :  74 50 0b e5          	: str r5, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x20
 >> Updated instruction            :  44 50 0b e5          	: str r5, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x40
 >> Updated instruction            :  24 50 0b e5          	: str r5, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 50 0b e5          	: str r5, [fp, #-0xe4]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x100
 >> Updated instruction            :  64 51 0b e5          	: str r5, [fp, #-0x164]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x200
 >> Updated instruction            :  64 52 0b e5          	: str r5, [fp, #-0x264]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x400
 >> Updated instruction            :  64 54 0b e5          	: str r5, [fp, #-0x464]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x800
 >> Updated instruction            :  64 58 0b e5          	: str r5, [fp, #-0x864]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 40 0b e5          	: str r4, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 70 0b e5          	: str r7, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 10 0b e5          	: str r1, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000848. Hit: 1. Lifespan: 2. Instruction: 00000557. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 50 0b e5          	: str r5, [fp, #-0x64]
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 d0 0b e5          	: str sp, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x8000084c)
 >> Lifespan countdown: 1. (0x80000850)
 >> Reverting instruction          :  64 50 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 0. Instruction: 00000565. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000868
 >> Updated                     : 0x000000008000086c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x1
 >> Updated instruction            :  03 20 8a e0          	: add r2, sl, r3
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x2
 >> Updated instruction            :  00 20 8a e0          	: add r2, sl, r0
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x4
 >> Updated instruction            :  06 20 8a e0          	: add r2, sl, r6
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x8
 >> Updated instruction            :  0a 20 8a e0          	: add r2, sl, sl
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x10
 >> Updated instruction            :  12 20 8a e0          	: add r2, sl, r2, lsl r0
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x20
 >> Updated instruction            :  22 20 8a e0          	: add r2, sl, r2, lsr #32
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x40
 >> Updated instruction            :  42 20 8a e0          	: add r2, sl, r2, asr #32
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x80
 >> Updated instruction            :  82 20 8a e0          	: add r2, sl, r2, lsl #1
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x100
 >> Updated instruction            :  02 21 8a e0          	: add r2, sl, r2, lsl #2
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x200
 >> Updated instruction            :  02 22 8a e0          	: add r2, sl, r2, lsl #4
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x400
 >> Updated instruction            :  02 24 8a e0          	: add r2, sl, r2, lsl #8
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x800
 >> Updated instruction            :  02 28 8a e0          	: add r2, sl, r2, lsl #16
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x1000
 >> Updated instruction            :  02 30 8a e0          	: add r3, sl, r2
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x2000
 >> Updated instruction            :  02 00 8a e0          	: add r0, sl, r2
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x4000
 >> Updated instruction            :  02 60 8a e0          	: add r6, sl, r2
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000868. Hit: 1. Lifespan: 2. Instruction: 00000565. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  02 20 8a e0          	: add r2, sl, r2
 >> Mask                           :  0x8000
 >> Updated instruction            :  02 a0 8a e0          	: add sl, sl, r2
 >> Lifespan countdown: 2. (0x8000086c)
 >> Lifespan countdown: 1. (0x80000870)
 >> Reverting instruction          :  02 20 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 0. Instruction: 00000573. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000888
 >> Updated                     : 0x000000008000088c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x1
 >> Updated instruction            :  41 90 89 e2          	: add sb, sb, #0x41
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x2
 >> Updated instruction            :  42 90 89 e2          	: add sb, sb, #0x42
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x4
 >> Updated instruction            :  44 90 89 e2          	: add sb, sb, #0x44
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x8
 >> Updated instruction            :  48 90 89 e2          	: add sb, sb, #0x48
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x10
 >> Updated instruction            :  50 90 89 e2          	: add sb, sb, #0x50
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x20
 >> Updated instruction            :  60 90 89 e2          	: add sb, sb, #0x60
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x40
 >> Updated instruction            :  00 90 89 e2          	: add sb, sb, #0
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 90 89 e2          	: add sb, sb, #0xc0
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x100
 >> Updated instruction            :  40 91 89 e2          	: add sb, sb, #64, #2
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x200
 >> Updated instruction            :  40 92 89 e2          	: add sb, sb, #64, #4
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x400
 >> Updated instruction            :  40 94 89 e2          	: add sb, sb, #64, #8
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x800
 >> Updated instruction            :  40 98 89 e2          	: add sb, sb, #64, #16
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 80 89 e2          	: add r8, sb, #0x40
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 b0 89 e2          	: add fp, sb, #0x40
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x94, value: 0x0!! Count 613 Skipping to end.
 >> Run result: Fault errored program - last instruction: 612.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 d0 89 e2          	: add sp, sb, #0x40
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000888. Hit: 1. Lifespan: 2. Instruction: 00000573. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 90 89 e2          	: add sb, sb, #0x40
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 10 89 e2          	: add r1, sb, #0x40
 >> Lifespan countdown: 2. (0x8000088c)
 >> Lifespan countdown: 1. (0x80000890)
 >> Reverting instruction          :  40 90 89 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 0. Instruction: 00000579. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008a0
 >> Updated                     : 0x00000000800008a4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 88 e0          	: add r1, r8, r0
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 88 e0          	: add r1, r8, r3
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 88 e0          	: add r1, r8, r5
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 88 e0          	: add r1, r8, sb
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 88 e0          	: add r1, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 88 e0          	: add r1, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 88 e0          	: add r1, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 88 e0          	: add r1, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 88 e0          	: add r1, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 88 e0          	: add r1, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 88 e0          	: add r1, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 88 e0          	: add r1, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 88 e0          	: add r3, r8, r1
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 88 e0          	: add r5, r8, r1
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008a0. Hit: 1. Lifespan: 2. Instruction: 00000579. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 88 e0          	: add r1, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 88 e0          	: add sb, r8, r1
 >> Lifespan countdown: 2. (0x800008a4)
 >> Lifespan countdown: 1. (0x800008a8)
 >> Reverting instruction          :  01 10 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 0. Instruction: 00000585. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008b8
 >> Updated                     : 0x00000000800008bc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 90 88 e0          	: add sb, r8, r8
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 90 88 e0          	: add sb, r8, fp
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 90 88 e0          	: add sb, r8, sp
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 90 88 e0          	: add sb, r8, r1
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 90 88 e0          	: add sb, r8, sb, lsl r0
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 90 88 e0          	: add sb, r8, sb, lsr #32
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 90 88 e0          	: add sb, r8, sb, asr #32
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 90 88 e0          	: add sb, r8, sb, lsl #1
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 91 88 e0          	: add sb, r8, sb, lsl #2
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 92 88 e0          	: add sb, r8, sb, lsl #4
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 94 88 e0          	: add sb, r8, sb, lsl #8
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 98 88 e0          	: add sb, r8, sb, lsl #16
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 80 88 e0          	: add r8, r8, sb
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 b0 88 e0          	: add fp, r8, sb
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a067bda1, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 589.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 d0 88 e0          	: add sp, r8, sb
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008b8. Hit: 1. Lifespan: 2. Instruction: 00000585. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 88 e0          	: add sb, r8, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 10 88 e0          	: add r1, r8, sb
 >> Lifespan countdown: 2. (0x800008bc)
 >> Lifespan countdown: 1. (0x800008c0)
 >> Reverting instruction          :  09 90 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 0. Instruction: 00000593. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008d8
 >> Updated                     : 0x00000000800008dc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x1
 >> Updated instruction            :  41 c0 4c e3          	: movt ip, #0xc041
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x2
 >> Updated instruction            :  42 c0 4c e3          	: movt ip, #0xc042
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x4
 >> Updated instruction            :  44 c0 4c e3          	: movt ip, #0xc044
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x8
 >> Updated instruction            :  48 c0 4c e3          	: movt ip, #0xc048
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x10
 >> Updated instruction            :  50 c0 4c e3          	: movt ip, #0xc050
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x20
 >> Updated instruction            :  60 c0 4c e3          	: movt ip, #0xc060
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x40
 >> Updated instruction            :  00 c0 4c e3          	: movt ip, #0xc000
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 c0 4c e3          	: movt ip, #0xc0c0
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x100
 >> Updated instruction            :  40 c1 4c e3          	: movt ip, #0xc140
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x200
 >> Updated instruction            :  40 c2 4c e3          	: movt ip, #0xc240
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x400
 >> Updated instruction            :  40 c4 4c e3          	: movt ip, #0xc440
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x800
 >> Updated instruction            :  40 c8 4c e3          	: movt ip, #0xc840
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 d0 4c e3          	: movt sp, #0xc040
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 e0 4c e3          	: movt lr, #0xc040
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 80 4c e3          	: movt r8, #0xc040
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008d8. Hit: 1. Lifespan: 2. Instruction: 00000593. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 c0 4c e3          	: movt ip, #0xc040
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 40 4c e3          	: movt r4, #0xc040
 >> Lifespan countdown: 2. (0x800008dc)
 >> Lifespan countdown: 1. (0x800008e0)
 >> Reverting instruction          :  40 c0 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 0. Instruction: 00000601. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800008f8
 >> Updated                     : 0x00000000800008fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b a0 8c e0          	: add sl, ip, fp
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 a0 8c e0          	: add sl, ip, r8
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e a0 8c e0          	: add sl, ip, lr
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 a0 8c e0          	: add sl, ip, r2
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a a0 8c e0          	: add sl, ip, sl, lsl r0
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a a0 8c e0          	: add sl, ip, sl, lsr #32
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a a0 8c e0          	: add sl, ip, sl, asr #32
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a a0 8c e0          	: add sl, ip, sl, lsl #1
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a a1 8c e0          	: add sl, ip, sl, lsl #2
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a a2 8c e0          	: add sl, ip, sl, lsl #4
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a a4 8c e0          	: add sl, ip, sl, lsl #8
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a a8 8c e0          	: add sl, ip, sl, lsl #16
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a b0 8c e0          	: add fp, ip, sl
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000265e5a25, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 606.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 80 8c e0          	: add r8, ip, sl
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a e0 8c e0          	: add lr, ip, sl
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800008f8. Hit: 1. Lifespan: 2. Instruction: 00000601. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a a0 8c e0          	: add sl, ip, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 20 8c e0          	: add r2, ip, sl
 >> Lifespan countdown: 2. (0x800008fc)
 >> Lifespan countdown: 1. (0x80000900)
 >> Reverting instruction          :  0a a0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 0. Instruction: 00000610. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000091c
 >> Updated                     : 0x0000000080000920
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x1
 >> Updated instruction            :  b7 e9 4e e3          	: movt lr, #0xe9b7
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x2
 >> Updated instruction            :  b4 e9 4e e3          	: movt lr, #0xe9b4
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x4
 >> Updated instruction            :  b2 e9 4e e3          	: movt lr, #0xe9b2
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x8
 >> Updated instruction            :  be e9 4e e3          	: movt lr, #0xe9be
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x10
 >> Updated instruction            :  a6 e9 4e e3          	: movt lr, #0xe9a6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x20
 >> Updated instruction            :  96 e9 4e e3          	: movt lr, #0xe996
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x40
 >> Updated instruction            :  f6 e9 4e e3          	: movt lr, #0xe9f6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x80
 >> Updated instruction            :  36 e9 4e e3          	: movt lr, #0xe936
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x100
 >> Updated instruction            :  b6 e8 4e e3          	: movt lr, #0xe8b6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x200
 >> Updated instruction            :  b6 eb 4e e3          	: movt lr, #0xebb6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x400
 >> Updated instruction            :  b6 ed 4e e3          	: movt lr, #0xedb6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x800
 >> Updated instruction            :  b6 e1 4e e3          	: movt lr, #0xe1b6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x1000
 >> Updated instruction            :  b6 f9 4e e3          	: movt pc, #0xe9b6
 >!  Erm -  fetching from unmapped memory, address: 0xe9b60924, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 610.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x2000
 >> Updated instruction            :  b6 c9 4e e3          	: movt ip, #0xe9b6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x4000
 >> Updated instruction            :  b6 a9 4e e3          	: movt sl, #0xe9b6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000091c. Hit: 1. Lifespan: 2. Instruction: 00000610. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  b6 e9 4e e3          	: movt lr, #0xe9b6
 >> Mask                           :  0x8000
 >> Updated instruction            :  b6 69 4e e3          	: movt r6, #0xe9b6
 >> Lifespan countdown: 2. (0x80000920)
 >> Lifespan countdown: 1. (0x80000924)
 >> Reverting instruction          :  b6 e9 4e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 0. Instruction: 00000617. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000938
 >> Updated                     : 0x000000008000093c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 80 88 e0          	: add r8, r8, fp
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 80 88 e0          	: add r8, r8, r8
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 80 88 e0          	: add r8, r8, lr
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 80 88 e0          	: add r8, r8, r2
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 80 88 e0          	: add r8, r8, sl, lsl r0
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 80 88 e0          	: add r8, r8, sl, lsr #32
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 80 88 e0          	: add r8, r8, sl, asr #32
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 80 88 e0          	: add r8, r8, sl, lsl #1
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 81 88 e0          	: add r8, r8, sl, lsl #2
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 82 88 e0          	: add r8, r8, sl, lsl #4
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 84 88 e0          	: add r8, r8, sl, lsl #8
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 88 88 e0          	: add r8, r8, sl, lsl #16
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 90 88 e0          	: add sb, r8, sl
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a a0 88 e0          	: add sl, r8, sl
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a c0 88 e0          	: add ip, r8, sl
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000938. Hit: 1. Lifespan: 2. Instruction: 00000617. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 80 88 e0          	: add r8, r8, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 00 88 e0          	: add r0, r8, sl
 >> Lifespan countdown: 2. (0x8000093c)
 >> Lifespan countdown: 1. (0x80000940)
 >> Reverting instruction          :  0a 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 0. Instruction: 00000624. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000954
 >> Updated                     : 0x0000000080000958
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x1
 >> Updated instruction            :  52 04 01 e3          	: movw r0, #0x1452
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x2
 >> Updated instruction            :  51 04 01 e3          	: movw r0, #0x1451
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x4
 >> Updated instruction            :  57 04 01 e3          	: movw r0, #0x1457
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x8
 >> Updated instruction            :  5b 04 01 e3          	: movw r0, #0x145b
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x10
 >> Updated instruction            :  43 04 01 e3          	: movw r0, #0x1443
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x20
 >> Updated instruction            :  73 04 01 e3          	: movw r0, #0x1473
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x40
 >> Updated instruction            :  13 04 01 e3          	: movw r0, #0x1413
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x80
 >> Updated instruction            :  d3 04 01 e3          	: movw r0, #0x14d3
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x100
 >> Updated instruction            :  53 05 01 e3          	: movw r0, #0x1553
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x200
 >> Updated instruction            :  53 06 01 e3          	: movw r0, #0x1653
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x400
 >> Updated instruction            :  53 00 01 e3          	: movw r0, #0x1053
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x800
 >> Updated instruction            :  53 0c 01 e3          	: movw r0, #0x1c53
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x1000
 >> Updated instruction            :  53 14 01 e3          	: movw r1, #0x1453
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x2000
 >> Updated instruction            :  53 24 01 e3          	: movw r2, #0x1453
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x4000
 >> Updated instruction            :  53 44 01 e3          	: movw r4, #0x1453
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000954. Hit: 1. Lifespan: 2. Instruction: 00000624. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  53 04 01 e3          	: movw r0, #0x1453
 >> Mask                           :  0x8000
 >> Updated instruction            :  53 84 01 e3          	: movw r8, #0x1453
 >> Lifespan countdown: 2. (0x80000958)
 >> Lifespan countdown: 1. (0x8000095c)
 >> Reverting instruction          :  53 04 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 0. Instruction: 00000630. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000096c
 >> Updated                     : 0x0000000080000970
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 00 80 e0          	: add r0, r0, sp
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 00 80 e0          	: add r0, r0, lr
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 00 80 e0          	: add r0, r0, r8
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 00 80 e0          	: add r0, r0, r4
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 00 80 e0          	: add r0, r0, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 00 80 e0          	: add r0, r0, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 00 80 e0          	: add r0, r0, ip, asr #32
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 00 80 e0          	: add r0, r0, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 01 80 e0          	: add r0, r0, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 02 80 e0          	: add r0, r0, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 04 80 e0          	: add r0, r0, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 08 80 e0          	: add r0, r0, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 10 80 e0          	: add r1, r0, ip
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 20 80 e0          	: add r2, r0, ip
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 40 80 e0          	: add r4, r0, ip
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000096c. Hit: 1. Lifespan: 2. Instruction: 00000630. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 00 80 e0          	: add r0, r0, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 80 80 e0          	: add r8, r0, ip
 >> Lifespan countdown: 2. (0x80000970)
 >> Lifespan countdown: 1. (0x80000974)
 >> Reverting instruction          :  0c 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 0. Instruction: 00000640. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000994
 >> Updated                     : 0x0000000080000998
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x1
 >> Updated instruction            :  e0 91 42 e3          	: movt sb, #0x21e0
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x2
 >> Updated instruction            :  e3 91 42 e3          	: movt sb, #0x21e3
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x4
 >> Updated instruction            :  e5 91 42 e3          	: movt sb, #0x21e5
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x8
 >> Updated instruction            :  e9 91 42 e3          	: movt sb, #0x21e9
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x10
 >> Updated instruction            :  f1 91 42 e3          	: movt sb, #0x21f1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x20
 >> Updated instruction            :  c1 91 42 e3          	: movt sb, #0x21c1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x40
 >> Updated instruction            :  a1 91 42 e3          	: movt sb, #0x21a1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x80
 >> Updated instruction            :  61 91 42 e3          	: movt sb, #0x2161
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x100
 >> Updated instruction            :  e1 90 42 e3          	: movt sb, #0x20e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x200
 >> Updated instruction            :  e1 93 42 e3          	: movt sb, #0x23e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x400
 >> Updated instruction            :  e1 95 42 e3          	: movt sb, #0x25e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x800
 >> Updated instruction            :  e1 99 42 e3          	: movt sb, #0x29e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x1000
 >> Updated instruction            :  e1 81 42 e3          	: movt r8, #0x21e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x2000
 >> Updated instruction            :  e1 b1 42 e3          	: movt fp, #0x21e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000021e1fec8, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 646.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x4000
 >> Updated instruction            :  e1 d1 42 e3          	: movt sp, #0x21e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000994. Hit: 1. Lifespan: 2. Instruction: 00000640. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  e1 91 42 e3          	: movt sb, #0x21e1
 >> Mask                           :  0x8000
 >> Updated instruction            :  e1 11 42 e3          	: movt r1, #0x21e1
 >> Lifespan countdown: 2. (0x80000998)
 >> Lifespan countdown: 1. (0x8000099c)
 >> Reverting instruction          :  e1 91 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 0. Instruction: 00000651. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009c0
 >> Updated                     : 0x00000000800009c4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 80 08 e0          	: and r8, r8, r0
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 80 08 e0          	: and r8, r8, r3
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 80 08 e0          	: and r8, r8, r5
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 80 08 e0          	: and r8, r8, sb
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 80 08 e0          	: and r8, r8, r1, lsl r0
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 80 08 e0          	: and r8, r8, r1, lsr #32
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 80 08 e0          	: and r8, r8, r1, asr #32
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 80 08 e0          	: and r8, r8, r1, lsl #1
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 81 08 e0          	: and r8, r8, r1, lsl #2
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 82 08 e0          	: and r8, r8, r1, lsl #4
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 84 08 e0          	: and r8, r8, r1, lsl #8
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 88 08 e0          	: and r8, r8, r1, lsl #16
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 90 08 e0          	: and sb, r8, r1
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a0 08 e0          	: and sl, r8, r1
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c0 08 e0          	: and ip, r8, r1
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009c0. Hit: 1. Lifespan: 2. Instruction: 00000651. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 80 08 e0          	: and r8, r8, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 00 08 e0          	: and r0, r8, r1
 >> Lifespan countdown: 2. (0x800009c4)
 >> Lifespan countdown: 1. (0x800009c8)
 >> Reverting instruction          :  01 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 0. Instruction: 00000658. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800009dc
 >> Updated                     : 0x00000000800009e0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 90 89 e0          	: add sb, sb, r4
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 90 89 e0          	: add sb, sb, r7
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 90 89 e0          	: add sb, sb, r1
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 90 89 e0          	: add sb, sb, sp
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 90 89 e0          	: add sb, sb, r5, lsl r0
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 90 89 e0          	: add sb, sb, r5, lsr #32
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 90 89 e0          	: add sb, sb, r5, asr #32
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 90 89 e0          	: add sb, sb, r5, lsl #1
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 91 89 e0          	: add sb, sb, r5, lsl #2
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 92 89 e0          	: add sb, sb, r5, lsl #4
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 94 89 e0          	: add sb, sb, r5, lsl #8
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 98 89 e0          	: add sb, sb, r5, lsl #16
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 80 89 e0          	: add r8, sb, r5
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 b0 89 e0          	: add fp, sb, r5
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000004794eca, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 672.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 d0 89 e0          	: add sp, sb, r5
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800009dc. Hit: 1. Lifespan: 2. Instruction: 00000658. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 90 89 e0          	: add sb, sb, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 10 89 e0          	: add r1, sb, r5
 >> Lifespan countdown: 2. (0x800009e0)
 >> Lifespan countdown: 1. (0x800009e4)
 >> Reverting instruction          :  05 90 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 0. Instruction: 00000667. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a00
 >> Updated                     : 0x0000000080000a04
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x1
 >> Updated instruction            :  60 19 80 e0          	: add r1, r0, r0, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x2
 >> Updated instruction            :  63 19 80 e0          	: add r1, r0, r3, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x4
 >> Updated instruction            :  65 19 80 e0          	: add r1, r0, r5, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x8
 >> Updated instruction            :  69 19 80 e0          	: add r1, r0, sb, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x10
 >> Updated instruction            :  71 19 80 e0          	: add r1, r0, r1, ror sb
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x20
 >> Updated instruction            :  41 19 80 e0          	: add r1, r0, r1, asr #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x40
 >> Updated instruction            :  21 19 80 e0          	: add r1, r0, r1, lsr #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x80
 >> Updated instruction            :  e1 19 80 e0          	: add r1, r0, r1, ror #19
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x100
 >> Updated instruction            :  61 18 80 e0          	: add r1, r0, r1, ror #16
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x200
 >> Updated instruction            :  61 1b 80 e0          	: add r1, r0, r1, ror #22
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x400
 >> Updated instruction            :  61 1d 80 e0          	: add r1, r0, r1, ror #26
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x800
 >> Updated instruction            :  61 11 80 e0          	: add r1, r0, r1, ror #2
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x1000
 >> Updated instruction            :  61 09 80 e0          	: add r0, r0, r1, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x2000
 >> Updated instruction            :  61 39 80 e0          	: add r3, r0, r1, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x4000
 >> Updated instruction            :  61 59 80 e0          	: add r5, r0, r1, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a00. Hit: 1. Lifespan: 2. Instruction: 00000667. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  61 19 80 e0          	: add r1, r0, r1, ror #18
 >> Mask                           :  0x8000
 >> Updated instruction            :  61 99 80 e0          	: add sb, r0, r1, ror #18
 >> Lifespan countdown: 2. (0x80000a04)
 >> Lifespan countdown: 1. (0x80000a08)
 >> Reverting instruction          :  61 19 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 0. Instruction: 00000675. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a20
 >> Updated                     : 0x0000000080000a24
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 85 e0          	: add ip, r5, sp
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 85 e0          	: add ip, r5, lr
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 85 e0          	: add ip, r5, r8
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 85 e0          	: add ip, r5, r4
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 85 e0          	: add ip, r5, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 85 e0          	: add ip, r5, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 85 e0          	: add ip, r5, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 85 e0          	: add ip, r5, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 85 e0          	: add ip, r5, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 85 e0          	: add ip, r5, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 85 e0          	: add ip, r5, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 85 e0          	: add ip, r5, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 85 e0          	: add sp, r5, ip
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 85 e0          	: add lr, r5, ip
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 85 e0          	: add r8, r5, ip
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a20. Hit: 1. Lifespan: 2. Instruction: 00000675. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 85 e0          	: add ip, r5, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 85 e0          	: add r4, r5, ip
 >> Lifespan countdown: 2. (0x80000a24)
 >> Lifespan countdown: 1. (0x80000a28)
 >> Reverting instruction          :  0c c0 85 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 0. Instruction: 00000683. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a40
 >> Updated                     : 0x0000000080000a44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 88 e0          	: add r0, r8, r1
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 88 e0          	: add r0, r8, r2
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 88 e0          	: add r0, r8, r4
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 88 e0          	: add r0, r8, r8
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 88 e0          	: add r0, r8, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 88 e0          	: add r0, r8, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 88 e0          	: add r0, r8, r0, asr #32
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 88 e0          	: add r0, r8, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 88 e0          	: add r0, r8, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 88 e0          	: add r0, r8, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 88 e0          	: add r0, r8, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 88 e0          	: add r0, r8, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 88 e0          	: add r1, r8, r0
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 88 e0          	: add r2, r8, r0
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 88 e0          	: add r4, r8, r0
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a40. Hit: 1. Lifespan: 2. Instruction: 00000683. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 88 e0          	: add r0, r8, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 88 e0          	: add r8, r8, r0
 >> Lifespan countdown: 2. (0x80000a44)
 >> Lifespan countdown: 1. (0x80000a48)
 >> Reverting instruction          :  00 00 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 0. Instruction: 00000689. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a58
 >> Updated                     : 0x0000000080000a5c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x1
 >> Updated instruction            :  04 19 0e e3          	: movw r1, #0xe904
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x2
 >> Updated instruction            :  07 19 0e e3          	: movw r1, #0xe907
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x4
 >> Updated instruction            :  01 19 0e e3          	: movw r1, #0xe901
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 19 0e e3          	: movw r1, #0xe90d
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x10
 >> Updated instruction            :  15 19 0e e3          	: movw r1, #0xe915
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x20
 >> Updated instruction            :  25 19 0e e3          	: movw r1, #0xe925
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x40
 >> Updated instruction            :  45 19 0e e3          	: movw r1, #0xe945
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x80
 >> Updated instruction            :  85 19 0e e3          	: movw r1, #0xe985
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x100
 >> Updated instruction            :  05 18 0e e3          	: movw r1, #0xe805
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x200
 >> Updated instruction            :  05 1b 0e e3          	: movw r1, #0xeb05
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x400
 >> Updated instruction            :  05 1d 0e e3          	: movw r1, #0xed05
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x800
 >> Updated instruction            :  05 11 0e e3          	: movw r1, #0xe105
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 09 0e e3          	: movw r0, #0xe905
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 39 0e e3          	: movw r3, #0xe905
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 59 0e e3          	: movw r5, #0xe905
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a58. Hit: 1. Lifespan: 2. Instruction: 00000689. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 19 0e e3          	: movw r1, #0xe905
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 99 0e e3          	: movw sb, #0xe905
 >> Lifespan countdown: 2. (0x80000a5c)
 >> Lifespan countdown: 1. (0x80000a60)
 >> Reverting instruction          :  05 19 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 0. Instruction: 00000697. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a78
 >> Updated                     : 0x0000000080000a7c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 50 05 e0          	: and r5, r5, sp
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 50 05 e0          	: and r5, r5, lr
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 50 05 e0          	: and r5, r5, r8
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 50 05 e0          	: and r5, r5, r4
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 50 05 e0          	: and r5, r5, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 50 05 e0          	: and r5, r5, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 50 05 e0          	: and r5, r5, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 50 05 e0          	: and r5, r5, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 51 05 e0          	: and r5, r5, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 52 05 e0          	: and r5, r5, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 54 05 e0          	: and r5, r5, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 58 05 e0          	: and r5, r5, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 40 05 e0          	: and r4, r5, ip
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 70 05 e0          	: and r7, r5, ip
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 10 05 e0          	: and r1, r5, ip
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a78. Hit: 1. Lifespan: 2. Instruction: 00000697. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 50 05 e0          	: and r5, r5, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c d0 05 e0          	: and sp, r5, ip
 >> Lifespan countdown: 2. (0x80000a7c)
 >> Lifespan countdown: 1. (0x80000a80)
 >> Reverting instruction          :  0c 50 05 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 0. Instruction: 00000704. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000a94
 >> Updated                     : 0x0000000080000a98
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 8a e0          	: add ip, sl, sp
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 8a e0          	: add ip, sl, lr
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 8a e0          	: add ip, sl, r8
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 8a e0          	: add ip, sl, r4
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 8a e0          	: add ip, sl, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 8a e0          	: add ip, sl, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 8a e0          	: add ip, sl, ip, asr #32
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 8a e0          	: add ip, sl, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 8a e0          	: add ip, sl, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 8a e0          	: add ip, sl, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 8a e0          	: add ip, sl, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 8a e0          	: add ip, sl, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 8a e0          	: add sp, sl, ip
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 8a e0          	: add lr, sl, ip
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 8a e0          	: add r8, sl, ip
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000a94. Hit: 1. Lifespan: 2. Instruction: 00000704. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 8a e0          	: add r4, sl, ip
 >> Lifespan countdown: 2. (0x80000a98)
 >> Lifespan countdown: 1. (0x80000a9c)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 0. Instruction: 00000711. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ab0
 >> Updated                     : 0x0000000080000ab4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 89 e0          	: add r0, sb, r1
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 89 e0          	: add r0, sb, r2
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 89 e0          	: add r0, sb, r4
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 89 e0          	: add r0, sb, r8
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 89 e0          	: add r0, sb, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 89 e0          	: add r0, sb, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 89 e0          	: add r0, sb, r0, asr #32
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 89 e0          	: add r0, sb, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 89 e0          	: add r0, sb, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 89 e0          	: add r0, sb, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 89 e0          	: add r0, sb, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 89 e0          	: add r0, sb, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 89 e0          	: add r1, sb, r0
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 89 e0          	: add r2, sb, r0
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 89 e0          	: add r4, sb, r0
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ab0. Hit: 1. Lifespan: 2. Instruction: 00000711. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 89 e0          	: add r0, sb, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 89 e0          	: add r8, sb, r0
 >> Lifespan countdown: 2. (0x80000ab4)
 >> Lifespan countdown: 1. (0x80000ab8)
 >> Reverting instruction          :  00 00 89 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 0. Instruction: 00000719. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ad0
 >> Updated                     : 0x0000000080000ad4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 80 08 e0          	: and r8, r8, pc
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 80 08 e0          	: and r8, r8, ip
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 80 08 e0          	: and r8, r8, sl
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 80 08 e0          	: and r8, r8, r6
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 80 08 e0          	: and r8, r8, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 80 08 e0          	: and r8, r8, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 80 08 e0          	: and r8, r8, lr, asr #32
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 80 08 e0          	: and r8, r8, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 81 08 e0          	: and r8, r8, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 82 08 e0          	: and r8, r8, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 84 08 e0          	: and r8, r8, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 88 08 e0          	: and r8, r8, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 90 08 e0          	: and sb, r8, lr
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e a0 08 e0          	: and sl, r8, lr
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e c0 08 e0          	: and ip, r8, lr
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ad0. Hit: 1. Lifespan: 2. Instruction: 00000719. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 08 e0          	: and r8, r8, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 00 08 e0          	: and r0, r8, lr
 >> Lifespan countdown: 2. (0x80000ad4)
 >> Lifespan countdown: 1. (0x80000ad8)
 >> Reverting instruction          :  0e 80 08 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 0. Instruction: 00000726. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000aec
 >> Updated                     : 0x0000000080000af0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 e0 20 e0          	: eor lr, r0, r0
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 e0 20 e0          	: eor lr, r0, r3
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 e0 20 e0          	: eor lr, r0, r5
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 e0 20 e0          	: eor lr, r0, sb
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 e0 20 e0          	: eor lr, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 e0 20 e0          	: eor lr, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 e0 20 e0          	: eor lr, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 e0 20 e0          	: eor lr, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 e1 20 e0          	: eor lr, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 e2 20 e0          	: eor lr, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 e4 20 e0          	: eor lr, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 e8 20 e0          	: eor lr, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 f0 20 e0          	: eor pc, r0, r1
 >!  Erm -  fetching from unmapped memory, address: 0xf9e1228c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 726.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 c0 20 e0          	: eor ip, r0, r1
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 a0 20 e0          	: eor sl, r0, r1
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000aec. Hit: 1. Lifespan: 2. Instruction: 00000726. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 e0 20 e0          	: eor lr, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 60 20 e0          	: eor r6, r0, r1
 >> Lifespan countdown: 2. (0x80000af0)
 >> Lifespan countdown: 1. (0x80000af4)
 >> Reverting instruction          :  01 e0 20 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 0. Instruction: 00000733. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b08
 >> Updated                     : 0x0000000080000b0c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x1
 >> Updated instruction            :  ef eb 81 e0          	: add lr, r1, pc, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x2
 >> Updated instruction            :  ec eb 81 e0          	: add lr, r1, ip, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x4
 >> Updated instruction            :  ea eb 81 e0          	: add lr, r1, sl, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x8
 >> Updated instruction            :  e6 eb 81 e0          	: add lr, r1, r6, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x10
 >> Updated instruction            :  fe eb 81 e0          	: strd lr, pc, [r1], lr
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x716e1b38, value: 0x3337a96e!! Count 734 Skipping to end.
 >> Run result: Fault errored program - last instruction: 733.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x20
 >> Updated instruction            :  ce eb 81 e0          	: add lr, r1, lr, asr #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x40
 >> Updated instruction            :  ae eb 81 e0          	: add lr, r1, lr, lsr #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x80
 >> Updated instruction            :  6e eb 81 e0          	: add lr, r1, lr, ror #22
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x100
 >> Updated instruction            :  ee ea 81 e0          	: add lr, r1, lr, ror #21
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x200
 >> Updated instruction            :  ee e9 81 e0          	: add lr, r1, lr, ror #19
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x400
 >> Updated instruction            :  ee ef 81 e0          	: add lr, r1, lr, ror #31
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x800
 >> Updated instruction            :  ee e3 81 e0          	: add lr, r1, lr, ror #7
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x1000
 >> Updated instruction            :  ee fb 81 e0          	: add pc, r1, lr, ror #23
 >!  Erm -  fetching from unmapped memory, address: 0xe0c0f79e, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 733.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x2000
 >> Updated instruction            :  ee cb 81 e0          	: add ip, r1, lr, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x4000
 >> Updated instruction            :  ee ab 81 e0          	: add sl, r1, lr, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b08. Hit: 1. Lifespan: 2. Instruction: 00000733. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ee eb 81 e0          	: add lr, r1, lr, ror #23
 >> Mask                           :  0x8000
 >> Updated instruction            :  ee 6b 81 e0          	: add r6, r1, lr, ror #23
 >> Lifespan countdown: 2. (0x80000b0c)
 >> Lifespan countdown: 1. (0x80000b10)
 >> Reverting instruction          :  ee eb 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 0. Instruction: 00000742. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b2c
 >> Updated                     : 0x0000000080000b30
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x1
 >> Updated instruction            :  0f 80 88 e0          	: add r8, r8, pc
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x2
 >> Updated instruction            :  0c 80 88 e0          	: add r8, r8, ip
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x4
 >> Updated instruction            :  0a 80 88 e0          	: add r8, r8, sl
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x8
 >> Updated instruction            :  06 80 88 e0          	: add r8, r8, r6
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x10
 >> Updated instruction            :  1e 80 88 e0          	: add r8, r8, lr, lsl r0
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x20
 >> Updated instruction            :  2e 80 88 e0          	: add r8, r8, lr, lsr #32
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x40
 >> Updated instruction            :  4e 80 88 e0          	: add r8, r8, lr, asr #32
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x80
 >> Updated instruction            :  8e 80 88 e0          	: add r8, r8, lr, lsl #1
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x100
 >> Updated instruction            :  0e 81 88 e0          	: add r8, r8, lr, lsl #2
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x200
 >> Updated instruction            :  0e 82 88 e0          	: add r8, r8, lr, lsl #4
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x400
 >> Updated instruction            :  0e 84 88 e0          	: add r8, r8, lr, lsl #8
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x800
 >> Updated instruction            :  0e 88 88 e0          	: add r8, r8, lr, lsl #16
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x1000
 >> Updated instruction            :  0e 90 88 e0          	: add sb, r8, lr
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x2000
 >> Updated instruction            :  0e a0 88 e0          	: add sl, r8, lr
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x4000
 >> Updated instruction            :  0e c0 88 e0          	: add ip, r8, lr
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b2c. Hit: 1. Lifespan: 2. Instruction: 00000742. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0e 80 88 e0          	: add r8, r8, lr
 >> Mask                           :  0x8000
 >> Updated instruction            :  0e 00 88 e0          	: add r0, r8, lr
 >> Lifespan countdown: 2. (0x80000b30)
 >> Lifespan countdown: 1. (0x80000b34)
 >> Reverting instruction          :  0e 80 88 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 0. Instruction: 00000750. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b4c
 >> Updated                     : 0x0000000080000b50
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 90 81 e0          	: add sb, r1, r8
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b 90 81 e0          	: add sb, r1, fp
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d 90 81 e0          	: add sb, r1, sp
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 90 81 e0          	: add sb, r1, r1
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 90 81 e0          	: add sb, r1, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 90 81 e0          	: add sb, r1, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 90 81 e0          	: add sb, r1, sb, asr #32
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 90 81 e0          	: add sb, r1, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 91 81 e0          	: add sb, r1, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 92 81 e0          	: add sb, r1, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 94 81 e0          	: add sb, r1, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 98 81 e0          	: add sb, r1, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 80 81 e0          	: add r8, r1, sb
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 b0 81 e0          	: add fp, r1, sb
 >> Lifespan countdown: 2. (0x80000b50)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000f65c6bc5, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 751.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 d0 81 e0          	: add sp, r1, sb
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b4c. Hit: 1. Lifespan: 2. Instruction: 00000750. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 90 81 e0          	: add sb, r1, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 10 81 e0          	: add r1, r1, sb
 >> Lifespan countdown: 2. (0x80000b50)
 >> Lifespan countdown: 1. (0x80000b54)
 >> Reverting instruction          :  09 90 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 0. Instruction: 00000759. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b70
 >> Updated                     : 0x0000000080000b74
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x1
 >> Updated instruction            :  45 ea 0e e3          	: movw lr, #0xea45
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x2
 >> Updated instruction            :  46 ea 0e e3          	: movw lr, #0xea46
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x4
 >> Updated instruction            :  40 ea 0e e3          	: movw lr, #0xea40
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x8
 >> Updated instruction            :  4c ea 0e e3          	: movw lr, #0xea4c
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x10
 >> Updated instruction            :  54 ea 0e e3          	: movw lr, #0xea54
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x20
 >> Updated instruction            :  64 ea 0e e3          	: movw lr, #0xea64
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x40
 >> Updated instruction            :  04 ea 0e e3          	: movw lr, #0xea04
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 ea 0e e3          	: movw lr, #0xeac4
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x100
 >> Updated instruction            :  44 eb 0e e3          	: movw lr, #0xeb44
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x200
 >> Updated instruction            :  44 e8 0e e3          	: movw lr, #0xe844
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x400
 >> Updated instruction            :  44 ee 0e e3          	: movw lr, #0xee44
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x800
 >> Updated instruction            :  44 e2 0e e3          	: movw lr, #0xe244
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 fa 0e e3          	: movw pc, #0xea44
 >!  Erm -  fetching from unmapped memory, address: 0xea44, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 759.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 ca 0e e3          	: movw ip, #0xea44
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 aa 0e e3          	: movw sl, #0xea44
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b70. Hit: 1. Lifespan: 2. Instruction: 00000759. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 ea 0e e3          	: movw lr, #0xea44
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 6a 0e e3          	: movw r6, #0xea44
 >> Lifespan countdown: 2. (0x80000b74)
 >> Lifespan countdown: 1. (0x80000b78)
 >> Reverting instruction          :  44 ea 0e e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 0. Instruction: 00000766. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000b8c
 >> Updated                     : 0x0000000080000b90
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 c0 8c e0          	: add ip, ip, sb
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a c0 8c e0          	: add ip, ip, sl
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c c0 8c e0          	: add ip, ip, ip
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 c0 8c e0          	: add ip, ip, r0
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 c0 8c e0          	: add ip, ip, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 c0 8c e0          	: add ip, ip, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 c0 8c e0          	: add ip, ip, r8, asr #32
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 c0 8c e0          	: add ip, ip, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 c1 8c e0          	: add ip, ip, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 c2 8c e0          	: add ip, ip, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 c4 8c e0          	: add ip, ip, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 c8 8c e0          	: add ip, ip, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 d0 8c e0          	: add sp, ip, r8
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 e0 8c e0          	: add lr, ip, r8
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 80 8c e0          	: add r8, ip, r8
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000b8c. Hit: 1. Lifespan: 2. Instruction: 00000766. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 c0 8c e0          	: add ip, ip, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 40 8c e0          	: add r4, ip, r8
 >> Lifespan countdown: 2. (0x80000b90)
 >> Lifespan countdown: 1. (0x80000b94)
 >> Reverting instruction          :  08 c0 8c e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 0. Instruction: 00000774. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bac
 >> Updated                     : 0x0000000080000bb0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 a0 25 e0          	: eor sl, r5, r8
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b a0 25 e0          	: eor sl, r5, fp
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d a0 25 e0          	: eor sl, r5, sp
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 a0 25 e0          	: eor sl, r5, r1
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 a0 25 e0          	: eor sl, r5, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 a0 25 e0          	: eor sl, r5, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 a0 25 e0          	: eor sl, r5, sb, asr #32
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 a0 25 e0          	: eor sl, r5, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 a1 25 e0          	: eor sl, r5, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 a2 25 e0          	: eor sl, r5, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 a4 25 e0          	: eor sl, r5, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 a8 25 e0          	: eor sl, r5, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 b0 25 e0          	: eor fp, r5, sb
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000a29669be, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 779.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 80 25 e0          	: eor r8, r5, sb
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 e0 25 e0          	: eor lr, r5, sb
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bac. Hit: 1. Lifespan: 2. Instruction: 00000774. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 a0 25 e0          	: eor sl, r5, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 20 25 e0          	: eor r2, r5, sb
 >> Lifespan countdown: 2. (0x80000bb0)
 >> Lifespan countdown: 1. (0x80000bb4)
 >> Reverting instruction          :  09 a0 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 0. Instruction: 00000782. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000bcc
 >> Updated                     : 0x0000000080000bd0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 50 25 e0          	: eor r5, r5, fp
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 50 25 e0          	: eor r5, r5, r8
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 50 25 e0          	: eor r5, r5, lr
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 50 25 e0          	: eor r5, r5, r2
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 50 25 e0          	: eor r5, r5, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 50 25 e0          	: eor r5, r5, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 50 25 e0          	: eor r5, r5, sl, asr #32
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 50 25 e0          	: eor r5, r5, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 51 25 e0          	: eor r5, r5, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 52 25 e0          	: eor r5, r5, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 54 25 e0          	: eor r5, r5, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 58 25 e0          	: eor r5, r5, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 40 25 e0          	: eor r4, r5, sl
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 70 25 e0          	: eor r7, r5, sl
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 10 25 e0          	: eor r1, r5, sl
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000bcc. Hit: 1. Lifespan: 2. Instruction: 00000782. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 50 25 e0          	: eor r5, r5, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a d0 25 e0          	: eor sp, r5, sl
 >> Lifespan countdown: 2. (0x80000bd0)
 >> Lifespan countdown: 1. (0x80000bd4)
 >> Reverting instruction          :  0a 50 25 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 0. Instruction: 00000789. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000be8
 >> Updated                     : 0x0000000080000bec
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 10 80 e0          	: add r1, r0, r0
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 10 80 e0          	: add r1, r0, r3
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 10 80 e0          	: add r1, r0, r5
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 10 80 e0          	: add r1, r0, sb
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 10 80 e0          	: add r1, r0, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 10 80 e0          	: add r1, r0, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 10 80 e0          	: add r1, r0, r1, asr #32
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 10 80 e0          	: add r1, r0, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 11 80 e0          	: add r1, r0, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 12 80 e0          	: add r1, r0, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 14 80 e0          	: add r1, r0, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 18 80 e0          	: add r1, r0, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 00 80 e0          	: add r0, r0, r1
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 30 80 e0          	: add r3, r0, r1
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 50 80 e0          	: add r5, r0, r1
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000be8. Hit: 1. Lifespan: 2. Instruction: 00000789. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 10 80 e0          	: add r1, r0, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 90 80 e0          	: add sb, r0, r1
 >> Lifespan countdown: 2. (0x80000bec)
 >> Lifespan countdown: 1. (0x80000bf0)
 >> Reverting instruction          :  01 10 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 0. Instruction: 00000796. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c04
 >> Updated                     : 0x0000000080000c08
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x1
 >> Updated instruction            :  9a c8 42 e3          	: movt ip, #0x289a
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x2
 >> Updated instruction            :  99 c8 42 e3          	: movt ip, #0x2899
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x4
 >> Updated instruction            :  9f c8 42 e3          	: movt ip, #0x289f
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x8
 >> Updated instruction            :  93 c8 42 e3          	: movt ip, #0x2893
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x10
 >> Updated instruction            :  8b c8 42 e3          	: movt ip, #0x288b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x20
 >> Updated instruction            :  bb c8 42 e3          	: movt ip, #0x28bb
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x40
 >> Updated instruction            :  db c8 42 e3          	: movt ip, #0x28db
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x80
 >> Updated instruction            :  1b c8 42 e3          	: movt ip, #0x281b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x100
 >> Updated instruction            :  9b c9 42 e3          	: movt ip, #0x299b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x200
 >> Updated instruction            :  9b ca 42 e3          	: movt ip, #0x2a9b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x400
 >> Updated instruction            :  9b cc 42 e3          	: movt ip, #0x2c9b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x800
 >> Updated instruction            :  9b c0 42 e3          	: movt ip, #0x209b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x1000
 >> Updated instruction            :  9b d8 42 e3          	: movt sp, #0x289b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x2000
 >> Updated instruction            :  9b e8 42 e3          	: movt lr, #0x289b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x4000
 >> Updated instruction            :  9b 88 42 e3          	: movt r8, #0x289b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c04. Hit: 1. Lifespan: 2. Instruction: 00000796. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  9b c8 42 e3          	: movt ip, #0x289b
 >> Mask                           :  0x8000
 >> Updated instruction            :  9b 48 42 e3          	: movt r4, #0x289b
 >> Lifespan countdown: 2. (0x80000c08)
 >> Lifespan countdown: 1. (0x80000c0c)
 >> Reverting instruction          :  9b c8 42 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 0. Instruction: 00000803. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c20
 >> Updated                     : 0x0000000080000c24
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x1
 >> Updated instruction            :  fb 87 02 e3          	: movw r8, #0x27fb
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x2
 >> Updated instruction            :  f8 87 02 e3          	: movw r8, #0x27f8
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x4
 >> Updated instruction            :  fe 87 02 e3          	: movw r8, #0x27fe
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x8
 >> Updated instruction            :  f2 87 02 e3          	: movw r8, #0x27f2
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x10
 >> Updated instruction            :  ea 87 02 e3          	: movw r8, #0x27ea
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x20
 >> Updated instruction            :  da 87 02 e3          	: movw r8, #0x27da
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x40
 >> Updated instruction            :  ba 87 02 e3          	: movw r8, #0x27ba
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x80
 >> Updated instruction            :  7a 87 02 e3          	: movw r8, #0x277a
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x100
 >> Updated instruction            :  fa 86 02 e3          	: movw r8, #0x26fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x200
 >> Updated instruction            :  fa 85 02 e3          	: movw r8, #0x25fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x400
 >> Updated instruction            :  fa 83 02 e3          	: movw r8, #0x23fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x800
 >> Updated instruction            :  fa 8f 02 e3          	: movw r8, #0x2ffa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x1000
 >> Updated instruction            :  fa 97 02 e3          	: movw sb, #0x27fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x2000
 >> Updated instruction            :  fa a7 02 e3          	: movw sl, #0x27fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x4000
 >> Updated instruction            :  fa c7 02 e3          	: movw ip, #0x27fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c20. Hit: 1. Lifespan: 2. Instruction: 00000803. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fa 87 02 e3          	: movw r8, #0x27fa
 >> Mask                           :  0x8000
 >> Updated instruction            :  fa 07 02 e3          	: movw r0, #0x27fa
 >> Lifespan countdown: 2. (0x80000c24)
 >> Lifespan countdown: 1. (0x80000c28)
 >> Reverting instruction          :  fa 87 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 0. Instruction: 00000811. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c40
 >> Updated                     : 0x0000000080000c44
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x1
 >> Updated instruction            :  08 e0 8e e0          	: add lr, lr, r8
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x2
 >> Updated instruction            :  0b e0 8e e0          	: add lr, lr, fp
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x4
 >> Updated instruction            :  0d e0 8e e0          	: add lr, lr, sp
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x8
 >> Updated instruction            :  01 e0 8e e0          	: add lr, lr, r1
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x10
 >> Updated instruction            :  19 e0 8e e0          	: add lr, lr, sb, lsl r0
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x20
 >> Updated instruction            :  29 e0 8e e0          	: add lr, lr, sb, lsr #32
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x40
 >> Updated instruction            :  49 e0 8e e0          	: add lr, lr, sb, asr #32
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x80
 >> Updated instruction            :  89 e0 8e e0          	: add lr, lr, sb, lsl #1
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x100
 >> Updated instruction            :  09 e1 8e e0          	: add lr, lr, sb, lsl #2
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x200
 >> Updated instruction            :  09 e2 8e e0          	: add lr, lr, sb, lsl #4
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x400
 >> Updated instruction            :  09 e4 8e e0          	: add lr, lr, sb, lsl #8
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x800
 >> Updated instruction            :  09 e8 8e e0          	: add lr, lr, sb, lsl #16
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x1000
 >> Updated instruction            :  09 f0 8e e0          	: add pc, lr, sb
 >!  Erm -  fetching from unmapped memory, address: 0xa34e55b0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 811.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x2000
 >> Updated instruction            :  09 c0 8e e0          	: add ip, lr, sb
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x4000
 >> Updated instruction            :  09 a0 8e e0          	: add sl, lr, sb
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c40. Hit: 1. Lifespan: 2. Instruction: 00000811. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  09 e0 8e e0          	: add lr, lr, sb
 >> Mask                           :  0x8000
 >> Updated instruction            :  09 60 8e e0          	: add r6, lr, sb
 >> Lifespan countdown: 2. (0x80000c44)
 >> Lifespan countdown: 1. (0x80000c48)
 >> Reverting instruction          :  09 e0 8e e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 0. Instruction: 00000819. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c60
 >> Updated                     : 0x0000000080000c64
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x1
 >> Updated instruction            :  04 1d 01 e3          	: movw r1, #0x1d04
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x2
 >> Updated instruction            :  07 1d 01 e3          	: movw r1, #0x1d07
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x4
 >> Updated instruction            :  01 1d 01 e3          	: movw r1, #0x1d01
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 1d 01 e3          	: movw r1, #0x1d0d
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x10
 >> Updated instruction            :  15 1d 01 e3          	: movw r1, #0x1d15
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x20
 >> Updated instruction            :  25 1d 01 e3          	: movw r1, #0x1d25
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x40
 >> Updated instruction            :  45 1d 01 e3          	: movw r1, #0x1d45
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x80
 >> Updated instruction            :  85 1d 01 e3          	: movw r1, #0x1d85
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x100
 >> Updated instruction            :  05 1c 01 e3          	: movw r1, #0x1c05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x200
 >> Updated instruction            :  05 1f 01 e3          	: movw r1, #0x1f05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x400
 >> Updated instruction            :  05 19 01 e3          	: movw r1, #0x1905
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x800
 >> Updated instruction            :  05 15 01 e3          	: movw r1, #0x1505
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 0d 01 e3          	: movw r0, #0x1d05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 3d 01 e3          	: movw r3, #0x1d05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 5d 01 e3          	: movw r5, #0x1d05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c60. Hit: 1. Lifespan: 2. Instruction: 00000819. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 1d 01 e3          	: movw r1, #0x1d05
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 9d 01 e3          	: movw sb, #0x1d05
 >> Lifespan countdown: 2. (0x80000c64)
 >> Lifespan countdown: 1. (0x80000c68)
 >> Reverting instruction          :  05 1d 01 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 0. Instruction: 00000828. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000c84
 >> Updated                     : 0x0000000080000c88
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x1
 >> Updated instruction            :  35 c0 1b e5          	: ldr ip, [fp, #-0x35]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x2
 >> Updated instruction            :  36 c0 1b e5          	: ldr ip, [fp, #-0x36]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x4
 >> Updated instruction            :  30 c0 1b e5          	: ldr ip, [fp, #-0x30]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x8
 >> Updated instruction            :  3c c0 1b e5          	: ldr ip, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x10
 >> Updated instruction            :  24 c0 1b e5          	: ldr ip, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x20
 >> Updated instruction            :  14 c0 1b e5          	: ldr ip, [fp, #-0x14]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x40
 >> Updated instruction            :  74 c0 1b e5          	: ldr ip, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x80
 >> Updated instruction            :  b4 c0 1b e5          	: ldr ip, [fp, #-0xb4]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x100
 >> Updated instruction            :  34 c1 1b e5          	: ldr ip, [fp, #-0x134]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x200
 >> Updated instruction            :  34 c2 1b e5          	: ldr ip, [fp, #-0x234]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x400
 >> Updated instruction            :  34 c4 1b e5          	: ldr ip, [fp, #-0x434]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x800
 >> Updated instruction            :  34 c8 1b e5          	: ldr ip, [fp, #-0x834]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x1000
 >> Updated instruction            :  34 d0 1b e5          	: ldr sp, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x2000
 >> Updated instruction            :  34 e0 1b e5          	: ldr lr, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x4000
 >> Updated instruction            :  34 80 1b e5          	: ldr r8, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000c84. Hit: 1. Lifespan: 2. Instruction: 00000828. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  34 c0 1b e5          	: ldr ip, [fp, #-0x34]
 >> Mask                           :  0x8000
 >> Updated instruction            :  34 40 1b e5          	: ldr r4, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000c88)
 >> Lifespan countdown: 1. (0x80000c8c)
 >> Reverting instruction          :  34 c0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 0. Instruction: 00000837. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ca8
 >> Updated                     : 0x0000000080000cac
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 86 e0          	: add ip, r6, sp
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 86 e0          	: add ip, r6, lr
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 86 e0          	: add ip, r6, r8
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 86 e0          	: add ip, r6, r4
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 86 e0          	: add ip, r6, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 86 e0          	: add ip, r6, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 86 e0          	: add ip, r6, ip, asr #32
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 86 e0          	: add ip, r6, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 86 e0          	: add ip, r6, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 86 e0          	: add ip, r6, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 86 e0          	: add ip, r6, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 86 e0          	: add ip, r6, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 86 e0          	: add sp, r6, ip
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 86 e0          	: add lr, r6, ip
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 86 e0          	: add r8, r6, ip
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ca8. Hit: 1. Lifespan: 2. Instruction: 00000837. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 86 e0          	: add ip, r6, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 86 e0          	: add r4, r6, ip
 >> Lifespan countdown: 2. (0x80000cac)
 >> Lifespan countdown: 1. (0x80000cb0)
 >> Reverting instruction          :  0c c0 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 0. Instruction: 00000844. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000cc4
 >> Updated                     : 0x0000000080000cc8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x1
 >> Updated instruction            :  a3 0f 41 e3          	: movt r0, #0x1fa3
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x2
 >> Updated instruction            :  a0 0f 41 e3          	: movt r0, #0x1fa0
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x4
 >> Updated instruction            :  a6 0f 41 e3          	: movt r0, #0x1fa6
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x8
 >> Updated instruction            :  aa 0f 41 e3          	: movt r0, #0x1faa
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x10
 >> Updated instruction            :  b2 0f 41 e3          	: movt r0, #0x1fb2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x20
 >> Updated instruction            :  82 0f 41 e3          	: movt r0, #0x1f82
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x40
 >> Updated instruction            :  e2 0f 41 e3          	: movt r0, #0x1fe2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x80
 >> Updated instruction            :  22 0f 41 e3          	: movt r0, #0x1f22
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x100
 >> Updated instruction            :  a2 0e 41 e3          	: movt r0, #0x1ea2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x200
 >> Updated instruction            :  a2 0d 41 e3          	: movt r0, #0x1da2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x400
 >> Updated instruction            :  a2 0b 41 e3          	: movt r0, #0x1ba2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x800
 >> Updated instruction            :  a2 07 41 e3          	: movt r0, #0x17a2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x1000
 >> Updated instruction            :  a2 1f 41 e3          	: movt r1, #0x1fa2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x2000
 >> Updated instruction            :  a2 2f 41 e3          	: movt r2, #0x1fa2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x4000
 >> Updated instruction            :  a2 4f 41 e3          	: movt r4, #0x1fa2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000cc4. Hit: 1. Lifespan: 2. Instruction: 00000844. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a2 0f 41 e3          	: movt r0, #0x1fa2
 >> Mask                           :  0x8000
 >> Updated instruction            :  a2 8f 41 e3          	: movt r8, #0x1fa2
 >> Lifespan countdown: 2. (0x80000cc8)
 >> Lifespan countdown: 1. (0x80000ccc)
 >> Reverting instruction          :  a2 0f 41 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 0. Instruction: 00000852. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ce4
 >> Updated                     : 0x0000000080000ce8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x1
 >> Updated instruction            :  ad 14 4c e3          	: movt r1, #0xc4ad
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x2
 >> Updated instruction            :  ae 14 4c e3          	: movt r1, #0xc4ae
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x4
 >> Updated instruction            :  a8 14 4c e3          	: movt r1, #0xc4a8
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x8
 >> Updated instruction            :  a4 14 4c e3          	: movt r1, #0xc4a4
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x10
 >> Updated instruction            :  bc 14 4c e3          	: movt r1, #0xc4bc
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x20
 >> Updated instruction            :  8c 14 4c e3          	: movt r1, #0xc48c
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x40
 >> Updated instruction            :  ec 14 4c e3          	: movt r1, #0xc4ec
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x80
 >> Updated instruction            :  2c 14 4c e3          	: movt r1, #0xc42c
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x100
 >> Updated instruction            :  ac 15 4c e3          	: movt r1, #0xc5ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x200
 >> Updated instruction            :  ac 16 4c e3          	: movt r1, #0xc6ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x400
 >> Updated instruction            :  ac 10 4c e3          	: movt r1, #0xc0ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x800
 >> Updated instruction            :  ac 1c 4c e3          	: movt r1, #0xccac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x1000
 >> Updated instruction            :  ac 04 4c e3          	: movt r0, #0xc4ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x2000
 >> Updated instruction            :  ac 34 4c e3          	: movt r3, #0xc4ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x4000
 >> Updated instruction            :  ac 54 4c e3          	: movt r5, #0xc4ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ce4. Hit: 1. Lifespan: 2. Instruction: 00000852. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  ac 14 4c e3          	: movt r1, #0xc4ac
 >> Mask                           :  0x8000
 >> Updated instruction            :  ac 94 4c e3          	: movt sb, #0xc4ac
 >> Lifespan countdown: 2. (0x80000ce8)
 >> Lifespan countdown: 1. (0x80000cec)
 >> Reverting instruction          :  ac 14 4c e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 0. Instruction: 00000860. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d04
 >> Updated                     : 0x0000000080000d08
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x1
 >> Updated instruction            :  49 a0 1b e5          	: ldr sl, [fp, #-0x49]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x2
 >> Updated instruction            :  4a a0 1b e5          	: ldr sl, [fp, #-0x4a]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x4
 >> Updated instruction            :  4c a0 1b e5          	: ldr sl, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x8
 >> Updated instruction            :  40 a0 1b e5          	: ldr sl, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x10
 >> Updated instruction            :  58 a0 1b e5          	: ldr sl, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x20
 >> Updated instruction            :  68 a0 1b e5          	: ldr sl, [fp, #-0x68]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x40
 >> Updated instruction            :  08 a0 1b e5          	: ldr sl, [fp, #-8]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x80
 >> Updated instruction            :  c8 a0 1b e5          	: ldr sl, [fp, #-0xc8]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x100
 >> Updated instruction            :  48 a1 1b e5          	: ldr sl, [fp, #-0x148]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x200
 >> Updated instruction            :  48 a2 1b e5          	: ldr sl, [fp, #-0x248]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x400
 >> Updated instruction            :  48 a4 1b e5          	: ldr sl, [fp, #-0x448]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x800
 >> Updated instruction            :  48 a8 1b e5          	: ldr sl, [fp, #-0x848]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x1000
 >> Updated instruction            :  48 b0 1b e5          	: ldr fp, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ed879052, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 879.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x2000
 >> Updated instruction            :  48 80 1b e5          	: ldr r8, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x4000
 >> Updated instruction            :  48 e0 1b e5          	: ldr lr, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d04. Hit: 1. Lifespan: 2. Instruction: 00000860. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  48 a0 1b e5          	: ldr sl, [fp, #-0x48]
 >> Mask                           :  0x8000
 >> Updated instruction            :  48 20 1b e5          	: ldr r2, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000d08)
 >> Lifespan countdown: 1. (0x80000d0c)
 >> Reverting instruction          :  48 a0 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 0. Instruction: 00000869. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d28
 >> Updated                     : 0x0000000080000d2c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x1
 >> Updated instruction            :  a6 a3 02 e3          	: movw sl, #0x23a6
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x2
 >> Updated instruction            :  a5 a3 02 e3          	: movw sl, #0x23a5
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x4
 >> Updated instruction            :  a3 a3 02 e3          	: movw sl, #0x23a3
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x8
 >> Updated instruction            :  af a3 02 e3          	: movw sl, #0x23af
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x10
 >> Updated instruction            :  b7 a3 02 e3          	: movw sl, #0x23b7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x20
 >> Updated instruction            :  87 a3 02 e3          	: movw sl, #0x2387
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x40
 >> Updated instruction            :  e7 a3 02 e3          	: movw sl, #0x23e7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x80
 >> Updated instruction            :  27 a3 02 e3          	: movw sl, #0x2327
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x100
 >> Updated instruction            :  a7 a2 02 e3          	: movw sl, #0x22a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x200
 >> Updated instruction            :  a7 a1 02 e3          	: movw sl, #0x21a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x400
 >> Updated instruction            :  a7 a7 02 e3          	: movw sl, #0x27a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x800
 >> Updated instruction            :  a7 ab 02 e3          	: movw sl, #0x2ba7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x1000
 >> Updated instruction            :  a7 b3 02 e3          	: movw fp, #0x23a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000000234f, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 879.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x2000
 >> Updated instruction            :  a7 83 02 e3          	: movw r8, #0x23a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x4000
 >> Updated instruction            :  a7 e3 02 e3          	: movw lr, #0x23a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d28. Hit: 1. Lifespan: 2. Instruction: 00000869. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a7 a3 02 e3          	: movw sl, #0x23a7
 >> Mask                           :  0x8000
 >> Updated instruction            :  a7 23 02 e3          	: movw r2, #0x23a7
 >> Lifespan countdown: 2. (0x80000d2c)
 >> Lifespan countdown: 1. (0x80000d30)
 >> Reverting instruction          :  a7 a3 02 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 0. Instruction: 00000879. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d50
 >> Updated                     : 0x0000000080000d54
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x1
 >> Updated instruction            :  59 70 1b e5          	: ldr r7, [fp, #-0x59]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x2
 >> Updated instruction            :  5a 70 1b e5          	: ldr r7, [fp, #-0x5a]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x4
 >> Updated instruction            :  5c 70 1b e5          	: ldr r7, [fp, #-0x5c]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x8
 >> Updated instruction            :  50 70 1b e5          	: ldr r7, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x10
 >> Updated instruction            :  48 70 1b e5          	: ldr r7, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x20
 >> Updated instruction            :  78 70 1b e5          	: ldr r7, [fp, #-0x78]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x40
 >> Updated instruction            :  18 70 1b e5          	: ldr r7, [fp, #-0x18]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x80
 >> Updated instruction            :  d8 70 1b e5          	: ldr r7, [fp, #-0xd8]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x100
 >> Updated instruction            :  58 71 1b e5          	: ldr r7, [fp, #-0x158]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x200
 >> Updated instruction            :  58 72 1b e5          	: ldr r7, [fp, #-0x258]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x400
 >> Updated instruction            :  58 74 1b e5          	: ldr r7, [fp, #-0x458]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x800
 >> Updated instruction            :  58 78 1b e5          	: ldr r7, [fp, #-0x858]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x1000
 >> Updated instruction            :  58 60 1b e5          	: ldr r6, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x2000
 >> Updated instruction            :  58 50 1b e5          	: ldr r5, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x4000
 >> Updated instruction            :  58 30 1b e5          	: ldr r3, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000d54)
 >> Lifespan countdown: 1. (0x80000d58)
 >> Reverting instruction          :  58 70 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d50. Hit: 1. Lifespan: 2. Instruction: 00000879. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  58 70 1b e5          	: ldr r7, [fp, #-0x58]
 >> Mask                           :  0x8000
 >> Updated instruction            :  58 f0 1b e5          	: ldr pc, [fp, #-0x58]
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 879.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 0. Instruction: 00000887. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d70
 >> Updated                     : 0x0000000080000d74
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d a0 8a e0          	: add sl, sl, sp
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e a0 8a e0          	: add sl, sl, lr
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 a0 8a e0          	: add sl, sl, r8
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 a0 8a e0          	: add sl, sl, r4
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c a0 8a e0          	: add sl, sl, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c a0 8a e0          	: add sl, sl, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c a0 8a e0          	: add sl, sl, ip, asr #32
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c a0 8a e0          	: add sl, sl, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c a1 8a e0          	: add sl, sl, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c a2 8a e0          	: add sl, sl, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c a4 8a e0          	: add sl, sl, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c a8 8a e0          	: add sl, sl, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c b0 8a e0          	: add fp, sl, ip
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000009e799356, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 905.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 80 8a e0          	: add r8, sl, ip
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c e0 8a e0          	: add lr, sl, ip
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d70. Hit: 1. Lifespan: 2. Instruction: 00000887. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c a0 8a e0          	: add sl, sl, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 20 8a e0          	: add r2, sl, ip
 >> Lifespan countdown: 2. (0x80000d74)
 >> Lifespan countdown: 1. (0x80000d78)
 >> Reverting instruction          :  0c a0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 0. Instruction: 00000895. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000d90
 >> Updated                     : 0x0000000080000d94
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 50 86 e0          	: add r5, r6, r4
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 50 86 e0          	: add r5, r6, r7
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 50 86 e0          	: add r5, r6, r1
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 50 86 e0          	: add r5, r6, sp
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 50 86 e0          	: add r5, r6, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 50 86 e0          	: add r5, r6, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 50 86 e0          	: add r5, r6, r5, asr #32
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 50 86 e0          	: add r5, r6, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 51 86 e0          	: add r5, r6, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 52 86 e0          	: add r5, r6, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 54 86 e0          	: add r5, r6, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 58 86 e0          	: add r5, r6, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 40 86 e0          	: add r4, r6, r5
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 70 86 e0          	: add r7, r6, r5
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 10 86 e0          	: add r1, r6, r5
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000d90. Hit: 1. Lifespan: 2. Instruction: 00000895. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 50 86 e0          	: add r5, r6, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 d0 86 e0          	: add sp, r6, r5
 >> Lifespan countdown: 2. (0x80000d94)
 >> Lifespan countdown: 1. (0x80000d98)
 >> Reverting instruction          :  05 50 86 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 0. Instruction: 00000902. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dac
 >> Updated                     : 0x0000000080000db0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 40 24 e0          	: eor r4, r4, r0
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 40 24 e0          	: eor r4, r4, r3
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 40 24 e0          	: eor r4, r4, r5
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 40 24 e0          	: eor r4, r4, sb
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 40 24 e0          	: eor r4, r4, r1, lsl r0
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 40 24 e0          	: eor r4, r4, r1, lsr #32
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 40 24 e0          	: eor r4, r4, r1, asr #32
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 40 24 e0          	: eor r4, r4, r1, lsl #1
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 41 24 e0          	: eor r4, r4, r1, lsl #2
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 42 24 e0          	: eor r4, r4, r1, lsl #4
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 44 24 e0          	: eor r4, r4, r1, lsl #8
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 48 24 e0          	: eor r4, r4, r1, lsl #16
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 50 24 e0          	: eor r5, r4, r1
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 60 24 e0          	: eor r6, r4, r1
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 00 24 e0          	: eor r0, r4, r1
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dac. Hit: 1. Lifespan: 2. Instruction: 00000902. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 40 24 e0          	: eor r4, r4, r1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 c0 24 e0          	: eor ip, r4, r1
 >> Lifespan countdown: 2. (0x80000db0)
 >> Lifespan countdown: 1. (0x80000db4)
 >> Reverting instruction          :  01 40 24 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 0. Instruction: 00000911. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000dd0
 >> Updated                     : 0x0000000080000dd4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x1
 >> Updated instruction            :  d0 cd 05 e3          	: movw ip, #0x5dd0
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x2
 >> Updated instruction            :  d3 cd 05 e3          	: movw ip, #0x5dd3
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x4
 >> Updated instruction            :  d5 cd 05 e3          	: movw ip, #0x5dd5
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x8
 >> Updated instruction            :  d9 cd 05 e3          	: movw ip, #0x5dd9
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x10
 >> Updated instruction            :  c1 cd 05 e3          	: movw ip, #0x5dc1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x20
 >> Updated instruction            :  f1 cd 05 e3          	: movw ip, #0x5df1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x40
 >> Updated instruction            :  91 cd 05 e3          	: movw ip, #0x5d91
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x80
 >> Updated instruction            :  51 cd 05 e3          	: movw ip, #0x5d51
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x100
 >> Updated instruction            :  d1 cc 05 e3          	: movw ip, #0x5cd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x200
 >> Updated instruction            :  d1 cf 05 e3          	: movw ip, #0x5fd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x400
 >> Updated instruction            :  d1 c9 05 e3          	: movw ip, #0x59d1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x800
 >> Updated instruction            :  d1 c5 05 e3          	: movw ip, #0x55d1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x1000
 >> Updated instruction            :  d1 dd 05 e3          	: movw sp, #0x5dd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x2000
 >> Updated instruction            :  d1 ed 05 e3          	: movw lr, #0x5dd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x4000
 >> Updated instruction            :  d1 8d 05 e3          	: movw r8, #0x5dd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000dd0. Hit: 1. Lifespan: 2. Instruction: 00000911. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  d1 cd 05 e3          	: movw ip, #0x5dd1
 >> Mask                           :  0x8000
 >> Updated instruction            :  d1 4d 05 e3          	: movw r4, #0x5dd1
 >> Lifespan countdown: 2. (0x80000dd4)
 >> Lifespan countdown: 1. (0x80000dd8)
 >> Reverting instruction          :  d1 cd 05 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 0. Instruction: 00000919. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000df0
 >> Updated                     : 0x0000000080000df4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d c0 8a e0          	: add ip, sl, sp
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e c0 8a e0          	: add ip, sl, lr
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 c0 8a e0          	: add ip, sl, r8
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 c0 8a e0          	: add ip, sl, r4
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c c0 8a e0          	: add ip, sl, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c c0 8a e0          	: add ip, sl, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c c0 8a e0          	: add ip, sl, ip, asr #32
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c c0 8a e0          	: add ip, sl, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c c1 8a e0          	: add ip, sl, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c c2 8a e0          	: add ip, sl, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c c4 8a e0          	: add ip, sl, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c c8 8a e0          	: add ip, sl, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c d0 8a e0          	: add sp, sl, ip
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c e0 8a e0          	: add lr, sl, ip
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 80 8a e0          	: add r8, sl, ip
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000df0. Hit: 1. Lifespan: 2. Instruction: 00000919. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c c0 8a e0          	: add ip, sl, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 40 8a e0          	: add r4, sl, ip
 >> Lifespan countdown: 2. (0x80000df4)
 >> Lifespan countdown: 1. (0x80000df8)
 >> Reverting instruction          :  0c c0 8a e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 0. Instruction: 00000927. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e10
 >> Updated                     : 0x0000000080000e14
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x1
 >> Updated instruction            :  06 10 81 e0          	: add r1, r1, r6
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x2
 >> Updated instruction            :  05 10 81 e0          	: add r1, r1, r5
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x4
 >> Updated instruction            :  03 10 81 e0          	: add r1, r1, r3
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 10 81 e0          	: add r1, r1, pc
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x10
 >> Updated instruction            :  17 10 81 e0          	: add r1, r1, r7, lsl r0
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x20
 >> Updated instruction            :  27 10 81 e0          	: add r1, r1, r7, lsr #32
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x40
 >> Updated instruction            :  47 10 81 e0          	: add r1, r1, r7, asr #32
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x80
 >> Updated instruction            :  87 10 81 e0          	: add r1, r1, r7, lsl #1
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x100
 >> Updated instruction            :  07 11 81 e0          	: add r1, r1, r7, lsl #2
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x200
 >> Updated instruction            :  07 12 81 e0          	: add r1, r1, r7, lsl #4
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x400
 >> Updated instruction            :  07 14 81 e0          	: add r1, r1, r7, lsl #8
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x800
 >> Updated instruction            :  07 18 81 e0          	: add r1, r1, r7, lsl #16
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 00 81 e0          	: add r0, r1, r7
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 30 81 e0          	: add r3, r1, r7
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 50 81 e0          	: add r5, r1, r7
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e10. Hit: 1. Lifespan: 2. Instruction: 00000927. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 10 81 e0          	: add r1, r1, r7
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 90 81 e0          	: add sb, r1, r7
 >> Lifespan countdown: 2. (0x80000e14)
 >> Lifespan countdown: 1. (0x80000e18)
 >> Reverting instruction          :  07 10 81 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 0. Instruction: 00000936. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e34
 >> Updated                     : 0x0000000080000e38
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x1
 >> Updated instruction            :  00 83 4a e3          	: movt r8, #0xa300
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x2
 >> Updated instruction            :  03 83 4a e3          	: movt r8, #0xa303
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x4
 >> Updated instruction            :  05 83 4a e3          	: movt r8, #0xa305
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x8
 >> Updated instruction            :  09 83 4a e3          	: movt r8, #0xa309
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x10
 >> Updated instruction            :  11 83 4a e3          	: movt r8, #0xa311
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x20
 >> Updated instruction            :  21 83 4a e3          	: movt r8, #0xa321
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x40
 >> Updated instruction            :  41 83 4a e3          	: movt r8, #0xa341
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x80
 >> Updated instruction            :  81 83 4a e3          	: movt r8, #0xa381
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x100
 >> Updated instruction            :  01 82 4a e3          	: movt r8, #0xa201
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x200
 >> Updated instruction            :  01 81 4a e3          	: movt r8, #0xa101
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x400
 >> Updated instruction            :  01 87 4a e3          	: movt r8, #0xa701
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x800
 >> Updated instruction            :  01 8b 4a e3          	: movt r8, #0xab01
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 93 4a e3          	: movt sb, #0xa301
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 a3 4a e3          	: movt sl, #0xa301
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 c3 4a e3          	: movt ip, #0xa301
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e34. Hit: 1. Lifespan: 2. Instruction: 00000936. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 83 4a e3          	: movt r8, #0xa301
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 03 4a e3          	: movt r0, #0xa301
 >> Lifespan countdown: 2. (0x80000e38)
 >> Lifespan countdown: 1. (0x80000e3c)
 >> Reverting instruction          :  01 83 4a e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 0. Instruction: 00000945. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e58
 >> Updated                     : 0x0000000080000e5c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x1
 >> Updated instruction            :  65 00 1b e5          	: ldr r0, [fp, #-0x65]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x2
 >> Updated instruction            :  66 00 1b e5          	: ldr r0, [fp, #-0x66]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x4
 >> Updated instruction            :  60 00 1b e5          	: ldr r0, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x8
 >> Updated instruction            :  6c 00 1b e5          	: ldr r0, [fp, #-0x6c]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x10
 >> Updated instruction            :  74 00 1b e5          	: ldr r0, [fp, #-0x74]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x20
 >> Updated instruction            :  44 00 1b e5          	: ldr r0, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x40
 >> Updated instruction            :  24 00 1b e5          	: ldr r0, [fp, #-0x24]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x80
 >> Updated instruction            :  e4 00 1b e5          	: ldr r0, [fp, #-0xe4]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x100
 >> Updated instruction            :  64 01 1b e5          	: ldr r0, [fp, #-0x164]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x200
 >> Updated instruction            :  64 02 1b e5          	: ldr r0, [fp, #-0x264]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x400
 >> Updated instruction            :  64 04 1b e5          	: ldr r0, [fp, #-0x464]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x800
 >> Updated instruction            :  64 08 1b e5          	: ldr r0, [fp, #-0x864]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x1000
 >> Updated instruction            :  64 10 1b e5          	: ldr r1, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x2000
 >> Updated instruction            :  64 20 1b e5          	: ldr r2, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x4000
 >> Updated instruction            :  64 40 1b e5          	: ldr r4, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e58. Hit: 1. Lifespan: 2. Instruction: 00000945. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  64 00 1b e5          	: ldr r0, [fp, #-0x64]
 >> Mask                           :  0x8000
 >> Updated instruction            :  64 80 1b e5          	: ldr r8, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000e5c)
 >> Lifespan countdown: 1. (0x80000e60)
 >> Reverting instruction          :  64 00 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 0. Instruction: 00000952. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e74
 >> Updated                     : 0x0000000080000e78
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 20 22 e0          	: eor r2, r2, r4
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 20 22 e0          	: eor r2, r2, r7
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 20 22 e0          	: eor r2, r2, r1
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 20 22 e0          	: eor r2, r2, sp
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 20 22 e0          	: eor r2, r2, r5, lsl r0
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 20 22 e0          	: eor r2, r2, r5, lsr #32
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 20 22 e0          	: eor r2, r2, r5, asr #32
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 20 22 e0          	: eor r2, r2, r5, lsl #1
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 21 22 e0          	: eor r2, r2, r5, lsl #2
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 22 22 e0          	: eor r2, r2, r5, lsl #4
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 24 22 e0          	: eor r2, r2, r5, lsl #8
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 28 22 e0          	: eor r2, r2, r5, lsl #16
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 30 22 e0          	: eor r3, r2, r5
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 00 22 e0          	: eor r0, r2, r5
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 60 22 e0          	: eor r6, r2, r5
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e74. Hit: 1. Lifespan: 2. Instruction: 00000952. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 20 22 e0          	: eor r2, r2, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 a0 22 e0          	: eor sl, r2, r5
 >> Lifespan countdown: 2. (0x80000e78)
 >> Lifespan countdown: 1. (0x80000e7c)
 >> Reverting instruction          :  05 20 22 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 0. Instruction: 00000961. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000e98
 >> Updated                     : 0x0000000080000e9c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x1
 >> Updated instruction            :  83 6e 07 e3          	: movw r6, #0x7e83
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x2
 >> Updated instruction            :  80 6e 07 e3          	: movw r6, #0x7e80
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x4
 >> Updated instruction            :  86 6e 07 e3          	: movw r6, #0x7e86
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x8
 >> Updated instruction            :  8a 6e 07 e3          	: movw r6, #0x7e8a
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x10
 >> Updated instruction            :  92 6e 07 e3          	: movw r6, #0x7e92
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x20
 >> Updated instruction            :  a2 6e 07 e3          	: movw r6, #0x7ea2
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x40
 >> Updated instruction            :  c2 6e 07 e3          	: movw r6, #0x7ec2
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x80
 >> Updated instruction            :  02 6e 07 e3          	: movw r6, #0x7e02
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x100
 >> Updated instruction            :  82 6f 07 e3          	: movw r6, #0x7f82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x200
 >> Updated instruction            :  82 6c 07 e3          	: movw r6, #0x7c82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x400
 >> Updated instruction            :  82 6a 07 e3          	: movw r6, #0x7a82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x800
 >> Updated instruction            :  82 66 07 e3          	: movw r6, #0x7682
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x1000
 >> Updated instruction            :  82 7e 07 e3          	: movw r7, #0x7e82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x2000
 >> Updated instruction            :  82 4e 07 e3          	: movw r4, #0x7e82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x4000
 >> Updated instruction            :  82 2e 07 e3          	: movw r2, #0x7e82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000e98. Hit: 1. Lifespan: 2. Instruction: 00000961. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  82 6e 07 e3          	: movw r6, #0x7e82
 >> Mask                           :  0x8000
 >> Updated instruction            :  82 ee 07 e3          	: movw lr, #0x7e82
 >> Lifespan countdown: 2. (0x80000e9c)
 >> Lifespan countdown: 1. (0x80000ea0)
 >> Reverting instruction          :  82 6e 07 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 0. Instruction: 00000969. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000eb8
 >> Updated                     : 0x0000000080000ebc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x1
 >> Updated instruction            :  3b 5d 4b e3          	: movt r5, #0xbd3b
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x2
 >> Updated instruction            :  38 5d 4b e3          	: movt r5, #0xbd38
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x4
 >> Updated instruction            :  3e 5d 4b e3          	: movt r5, #0xbd3e
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x8
 >> Updated instruction            :  32 5d 4b e3          	: movt r5, #0xbd32
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x10
 >> Updated instruction            :  2a 5d 4b e3          	: movt r5, #0xbd2a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x20
 >> Updated instruction            :  1a 5d 4b e3          	: movt r5, #0xbd1a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x40
 >> Updated instruction            :  7a 5d 4b e3          	: movt r5, #0xbd7a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x80
 >> Updated instruction            :  ba 5d 4b e3          	: movt r5, #0xbdba
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x100
 >> Updated instruction            :  3a 5c 4b e3          	: movt r5, #0xbc3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x200
 >> Updated instruction            :  3a 5f 4b e3          	: movt r5, #0xbf3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x400
 >> Updated instruction            :  3a 59 4b e3          	: movt r5, #0xb93a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x800
 >> Updated instruction            :  3a 55 4b e3          	: movt r5, #0xb53a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x1000
 >> Updated instruction            :  3a 4d 4b e3          	: movt r4, #0xbd3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x2000
 >> Updated instruction            :  3a 7d 4b e3          	: movt r7, #0xbd3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x4000
 >> Updated instruction            :  3a 1d 4b e3          	: movt r1, #0xbd3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000eb8. Hit: 1. Lifespan: 2. Instruction: 00000969. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3a 5d 4b e3          	: movt r5, #0xbd3a
 >> Mask                           :  0x8000
 >> Updated instruction            :  3a dd 4b e3          	: movt sp, #0xbd3a
 >> Lifespan countdown: 2. (0x80000ebc)
 >> Lifespan countdown: 1. (0x80000ec0)
 >> Reverting instruction          :  3a 5d 4b e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 0. Instruction: 00000977. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ed8
 >> Updated                     : 0x0000000080000edc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 20 e0 e1          	: mvn r2, sp
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 20 e0 e1          	: mvn r2, lr
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 20 e0 e1          	: mvn r2, r8
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 20 e0 e1          	: mvn r2, r4
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 20 e0 e1          	: mvn r2, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 20 e0 e1          	: mvn r2, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 20 e0 e1          	: mvn r2, ip, asr #32
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 20 e0 e1          	: mvn r2, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 21 e0 e1          	: mvn r2, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 22 e0 e1          	: mvn r2, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 24 e0 e1          	: mvn r2, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 28 e0 e1          	: mvn r2, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 30 e0 e1          	: mvn r3, ip
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c 00 e0 e1          	: mvn r0, ip
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c 60 e0 e1          	: mvn r6, ip
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ed8. Hit: 1. Lifespan: 2. Instruction: 00000977. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 20 e0 e1          	: mvn r2, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c a0 e0 e1          	: mvn sl, ip
 >> Lifespan countdown: 2. (0x80000edc)
 >> Lifespan countdown: 1. (0x80000ee0)
 >> Reverting instruction          :  0c 20 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 0. Instruction: 00000985. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ef8
 >> Updated                     : 0x0000000080000efc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x1
 >> Updated instruction            :  51 30 1b e5          	: ldr r3, [fp, #-0x51]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x2
 >> Updated instruction            :  52 30 1b e5          	: ldr r3, [fp, #-0x52]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x4
 >> Updated instruction            :  54 30 1b e5          	: ldr r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x8
 >> Updated instruction            :  58 30 1b e5          	: ldr r3, [fp, #-0x58]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x10
 >> Updated instruction            :  40 30 1b e5          	: ldr r3, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x20
 >> Updated instruction            :  70 30 1b e5          	: ldr r3, [fp, #-0x70]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x40
 >> Updated instruction            :  10 30 1b e5          	: ldr r3, [fp, #-0x10]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x80
 >> Updated instruction            :  d0 30 1b e5          	: ldr r3, [fp, #-0xd0]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x100
 >> Updated instruction            :  50 31 1b e5          	: ldr r3, [fp, #-0x150]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x200
 >> Updated instruction            :  50 32 1b e5          	: ldr r3, [fp, #-0x250]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x400
 >> Updated instruction            :  50 34 1b e5          	: ldr r3, [fp, #-0x450]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x800
 >> Updated instruction            :  50 38 1b e5          	: ldr r3, [fp, #-0x850]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x1000
 >> Updated instruction            :  50 20 1b e5          	: ldr r2, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x2000
 >> Updated instruction            :  50 10 1b e5          	: ldr r1, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x4000
 >> Updated instruction            :  50 70 1b e5          	: ldr r7, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000ef8. Hit: 1. Lifespan: 2. Instruction: 00000985. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  50 30 1b e5          	: ldr r3, [fp, #-0x50]
 >> Mask                           :  0x8000
 >> Updated instruction            :  50 b0 1b e5          	: ldr fp, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000efc)
 >> Lifespan countdown: 1. (0x80000f00)
 >> Reverting instruction          :  50 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffcc, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 991.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 0. Instruction: 00000994. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f1c
 >> Updated                     : 0x0000000080000f20
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x1
 >> Updated instruction            :  09 00 80 e0          	: add r0, r0, sb
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 00 80 e0          	: add r0, r0, sl
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 00 80 e0          	: add r0, r0, ip
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x8
 >> Updated instruction            :  00 00 80 e0          	: add r0, r0, r0
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x10
 >> Updated instruction            :  18 00 80 e0          	: add r0, r0, r8, lsl r0
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x20
 >> Updated instruction            :  28 00 80 e0          	: add r0, r0, r8, lsr #32
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x40
 >> Updated instruction            :  48 00 80 e0          	: add r0, r0, r8, asr #32
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x80
 >> Updated instruction            :  88 00 80 e0          	: add r0, r0, r8, lsl #1
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x100
 >> Updated instruction            :  08 01 80 e0          	: add r0, r0, r8, lsl #2
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x200
 >> Updated instruction            :  08 02 80 e0          	: add r0, r0, r8, lsl #4
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x400
 >> Updated instruction            :  08 04 80 e0          	: add r0, r0, r8, lsl #8
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x800
 >> Updated instruction            :  08 08 80 e0          	: add r0, r0, r8, lsl #16
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 10 80 e0          	: add r1, r0, r8
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 20 80 e0          	: add r2, r0, r8
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 40 80 e0          	: add r4, r0, r8
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f1c. Hit: 1. Lifespan: 2. Instruction: 00000994. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 00 80 e0          	: add r0, r0, r8
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 80 80 e0          	: add r8, r0, r8
 >> Lifespan countdown: 2. (0x80000f20)
 >> Lifespan countdown: 1. (0x80000f24)
 >> Reverting instruction          :  08 00 80 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 0. Instruction: 00001001. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f38
 >> Updated                     : 0x0000000080000f3c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 40 84 e0          	: add r4, r4, r1
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 40 84 e0          	: add r4, r4, r2
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 40 84 e0          	: add r4, r4, r4
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 40 84 e0          	: add r4, r4, r8
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 40 84 e0          	: add r4, r4, r0, lsl r0
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 40 84 e0          	: add r4, r4, r0, lsr #32
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 40 84 e0          	: add r4, r4, r0, asr #32
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 40 84 e0          	: add r4, r4, r0, lsl #1
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 41 84 e0          	: add r4, r4, r0, lsl #2
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 42 84 e0          	: add r4, r4, r0, lsl #4
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 44 84 e0          	: add r4, r4, r0, lsl #8
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 48 84 e0          	: add r4, r4, r0, lsl #16
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 50 84 e0          	: add r5, r4, r0
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 60 84 e0          	: add r6, r4, r0
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 00 84 e0          	: add r0, r4, r0
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f38. Hit: 1. Lifespan: 2. Instruction: 00001001. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 40 84 e0          	: add r4, r4, r0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 c0 84 e0          	: add ip, r4, r0
 >> Lifespan countdown: 2. (0x80000f3c)
 >> Lifespan countdown: 1. (0x80000f40)
 >> Reverting instruction          :  00 40 84 e0 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 0. Instruction: 00001008. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f54
 >> Updated                     : 0x0000000080000f58
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x1
 >> Updated instruction            :  0b c0 8c e1          	: orr ip, ip, fp
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x2
 >> Updated instruction            :  08 c0 8c e1          	: orr ip, ip, r8
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x4
 >> Updated instruction            :  0e c0 8c e1          	: orr ip, ip, lr
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x8
 >> Updated instruction            :  02 c0 8c e1          	: orr ip, ip, r2
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x10
 >> Updated instruction            :  1a c0 8c e1          	: orr ip, ip, sl, lsl r0
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x20
 >> Updated instruction            :  2a c0 8c e1          	: orr ip, ip, sl, lsr #32
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x40
 >> Updated instruction            :  4a c0 8c e1          	: orr ip, ip, sl, asr #32
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x80
 >> Updated instruction            :  8a c0 8c e1          	: orr ip, ip, sl, lsl #1
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x100
 >> Updated instruction            :  0a c1 8c e1          	: orr ip, ip, sl, lsl #2
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x200
 >> Updated instruction            :  0a c2 8c e1          	: orr ip, ip, sl, lsl #4
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x400
 >> Updated instruction            :  0a c4 8c e1          	: orr ip, ip, sl, lsl #8
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x800
 >> Updated instruction            :  0a c8 8c e1          	: orr ip, ip, sl, lsl #16
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a d0 8c e1          	: orr sp, ip, sl
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a e0 8c e1          	: orr lr, ip, sl
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 80 8c e1          	: orr r8, ip, sl
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f54. Hit: 1. Lifespan: 2. Instruction: 00001008. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a c0 8c e1          	: orr ip, ip, sl
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a 40 8c e1          	: orr r4, ip, sl
 >> Lifespan countdown: 2. (0x80000f58)
 >> Lifespan countdown: 1. (0x80000f5c)
 >> Reverting instruction          :  0a c0 8c e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 0. Instruction: 00001017. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f78
 >> Updated                     : 0x0000000080000f7c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x1
 >> Updated instruction            :  0d 80 e0 e1          	: mvn r8, sp
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x2
 >> Updated instruction            :  0e 80 e0 e1          	: mvn r8, lr
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x4
 >> Updated instruction            :  08 80 e0 e1          	: mvn r8, r8
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x8
 >> Updated instruction            :  04 80 e0 e1          	: mvn r8, r4
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x10
 >> Updated instruction            :  1c 80 e0 e1          	: mvn r8, ip, lsl r0
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x20
 >> Updated instruction            :  2c 80 e0 e1          	: mvn r8, ip, lsr #32
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x40
 >> Updated instruction            :  4c 80 e0 e1          	: mvn r8, ip, asr #32
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x80
 >> Updated instruction            :  8c 80 e0 e1          	: mvn r8, ip, lsl #1
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x100
 >> Updated instruction            :  0c 81 e0 e1          	: mvn r8, ip, lsl #2
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x200
 >> Updated instruction            :  0c 82 e0 e1          	: mvn r8, ip, lsl #4
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x400
 >> Updated instruction            :  0c 84 e0 e1          	: mvn r8, ip, lsl #8
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x800
 >> Updated instruction            :  0c 88 e0 e1          	: mvn r8, ip, lsl #16
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x1000
 >> Updated instruction            :  0c 90 e0 e1          	: mvn sb, ip
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x2000
 >> Updated instruction            :  0c a0 e0 e1          	: mvn sl, ip
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x4000
 >> Updated instruction            :  0c c0 e0 e1          	: mvn ip, ip
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f78. Hit: 1. Lifespan: 2. Instruction: 00001017. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0c 80 e0 e1          	: mvn r8, ip
 >> Mask                           :  0x8000
 >> Updated instruction            :  0c 00 e0 e1          	: mvn r0, ip
 >> Lifespan countdown: 2. (0x80000f7c)
 >> Lifespan countdown: 1. (0x80000f80)
 >> Reverting instruction          :  0c 80 e0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 0. Instruction: 00001025. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000f98
 >> Updated                     : 0x0000000080000f9c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x1
 >> Updated instruction            :  45 30 0b e5          	: str r3, [fp, #-0x45]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x2
 >> Updated instruction            :  46 30 0b e5          	: str r3, [fp, #-0x46]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x4
 >> Updated instruction            :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x8
 >> Updated instruction            :  4c 30 0b e5          	: str r3, [fp, #-0x4c]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x10
 >> Updated instruction            :  54 30 0b e5          	: str r3, [fp, #-0x54]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x20
 >> Updated instruction            :  64 30 0b e5          	: str r3, [fp, #-0x64]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x40
 >> Updated instruction            :  04 30 0b e5          	: str r3, [fp, #-4]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000079f3a9e7, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x80
 >> Updated instruction            :  c4 30 0b e5          	: str r3, [fp, #-0xc4]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x100
 >> Updated instruction            :  44 31 0b e5          	: str r3, [fp, #-0x144]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x200
 >> Updated instruction            :  44 32 0b e5          	: str r3, [fp, #-0x244]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x400
 >> Updated instruction            :  44 34 0b e5          	: str r3, [fp, #-0x444]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x800
 >> Updated instruction            :  44 38 0b e5          	: str r3, [fp, #-0x844]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x1000
 >> Updated instruction            :  44 20 0b e5          	: str r2, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x2000
 >> Updated instruction            :  44 10 0b e5          	: str r1, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x4000
 >> Updated instruction            :  44 70 0b e5          	: str r7, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000f98. Hit: 1. Lifespan: 2. Instruction: 00001025. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Mask                           :  0x8000
 >> Updated instruction            :  44 b0 0b e5          	: str fp, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000f9c)
 >> Lifespan countdown: 1. (0x80000fa0)
 >> Reverting instruction          :  44 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 0. Instruction: 00001032. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fb4
 >> Updated                     : 0x0000000080000fb8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x1
 >> Updated instruction            :  41 30 0b e5          	: str r3, [fp, #-0x41]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x2
 >> Updated instruction            :  42 30 0b e5          	: str r3, [fp, #-0x42]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x4
 >> Updated instruction            :  44 30 0b e5          	: str r3, [fp, #-0x44]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x8
 >> Updated instruction            :  48 30 0b e5          	: str r3, [fp, #-0x48]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x10
 >> Updated instruction            :  50 30 0b e5          	: str r3, [fp, #-0x50]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x20
 >> Updated instruction            :  60 30 0b e5          	: str r3, [fp, #-0x60]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x40
 >> Updated instruction            :  00 30 0b e5          	: str r3, [fp, #-0]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >!  Erm -  fetching from unmapped memory, address: 0x760cd704, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1048.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x80
 >> Updated instruction            :  c0 30 0b e5          	: str r3, [fp, #-0xc0]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x100
 >> Updated instruction            :  40 31 0b e5          	: str r3, [fp, #-0x140]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x200
 >> Updated instruction            :  40 32 0b e5          	: str r3, [fp, #-0x240]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x400
 >> Updated instruction            :  40 34 0b e5          	: str r3, [fp, #-0x440]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x800
 >> Updated instruction            :  40 38 0b e5          	: str r3, [fp, #-0x840]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x1000
 >> Updated instruction            :  40 20 0b e5          	: str r2, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x2000
 >> Updated instruction            :  40 10 0b e5          	: str r1, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x4000
 >> Updated instruction            :  40 70 0b e5          	: str r7, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fb4. Hit: 1. Lifespan: 2. Instruction: 00001032. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  40 30 0b e5          	: str r3, [fp, #-0x40]
 >> Mask                           :  0x8000
 >> Updated instruction            :  40 b0 0b e5          	: str fp, [fp, #-0x40]
 >> Lifespan countdown: 2. (0x80000fb8)
 >> Lifespan countdown: 1. (0x80000fbc)
 >> Reverting instruction          :  40 30 0b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 0. Instruction: 00001040. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000fd4
 >> Updated                     : 0x0000000080000fd8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x1
 >> Updated instruction            :  3d 30 1b e5          	: ldr r3, [fp, #-0x3d]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x2
 >> Updated instruction            :  3e 30 1b e5          	: ldr r3, [fp, #-0x3e]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x4
 >> Updated instruction            :  38 30 1b e5          	: ldr r3, [fp, #-0x38]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x8
 >> Updated instruction            :  34 30 1b e5          	: ldr r3, [fp, #-0x34]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x10
 >> Updated instruction            :  2c 30 1b e5          	: ldr r3, [fp, #-0x2c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x20
 >> Updated instruction            :  1c 30 1b e5          	: ldr r3, [fp, #-0x1c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x40
 >> Updated instruction            :  7c 30 1b e5          	: ldr r3, [fp, #-0x7c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x80
 >> Updated instruction            :  bc 30 1b e5          	: ldr r3, [fp, #-0xbc]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x100
 >> Updated instruction            :  3c 31 1b e5          	: ldr r3, [fp, #-0x13c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x200
 >> Updated instruction            :  3c 32 1b e5          	: ldr r3, [fp, #-0x23c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x400
 >> Updated instruction            :  3c 34 1b e5          	: ldr r3, [fp, #-0x43c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x800
 >> Updated instruction            :  3c 38 1b e5          	: ldr r3, [fp, #-0x83c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x1000
 >> Updated instruction            :  3c 20 1b e5          	: ldr r2, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xc78cb6ce, value: 0x2578ea84!! Count 1042 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1041.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x2000
 >> Updated instruction            :  3c 10 1b e5          	: ldr r1, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x4000
 >> Updated instruction            :  3c 70 1b e5          	: ldr r7, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000fd4. Hit: 1. Lifespan: 2. Instruction: 00001040. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  3c 30 1b e5          	: ldr r3, [fp, #-0x3c]
 >> Mask                           :  0x8000
 >> Updated instruction            :  3c b0 1b e5          	: ldr fp, [fp, #-0x3c]
 >> Lifespan countdown: 2. (0x80000fd8)
 >> Lifespan countdown: 1. (0x80000fdc)
 >> Reverting instruction          :  3c 30 1b e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000c78cb686, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1043.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 0. Instruction: 00001048. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000ff4
 >> Updated                     : 0x0000000080000ff8
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002578ea84, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x1
 >> Updated instruction            :  f1 8f bd e8          	: pop {r0, r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x2
 >> Updated instruction            :  f2 8f bd e8          	: pop {r1, r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x4
 >> Updated instruction            :  f4 8f bd e8          	: pop {r2, r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x8
 >> Updated instruction            :  f8 8f bd e8          	: pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x10
 >> Updated instruction            :  e0 8f bd e8          	: pop {r5, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x20
 >> Updated instruction            :  d0 8f bd e8          	: pop {r4, r6, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x40
 >> Updated instruction            :  b0 8f bd e8          	: pop {r4, r5, r7, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x80
 >> Updated instruction            :  70 8f bd e8          	: pop {r4, r5, r6, r8, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x100
 >> Updated instruction            :  f0 8e bd e8          	: pop {r4, r5, r6, r7, sb, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000d7bf00b9, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x200
 >> Updated instruction            :  f0 8d bd e8          	: pop {r4, r5, r6, r7, r8, sl, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x400
 >> Updated instruction            :  f0 8b bd e8          	: pop {r4, r5, r6, r7, r8, sb, fp, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x800
 >> Updated instruction            :  f0 87 bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, pc}
 >> Lifespan countdown: 2. (0x8010ff34)
 >> Lifespan countdown: 1. (0x8010ff38)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1062.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x1000
 >> Updated instruction            :  f0 9f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, ip, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x2000
 >> Updated instruction            :  f0 af bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, sp, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x4000
 >> Updated instruction            :  f0 cf bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, lr, pc}
 >> Lifespan countdown: 2. (0x8010ff60)
 >> Lifespan countdown: 1. (0x8010ff64)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000fffff57c, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000ff4. Hit: 1. Lifespan: 2. Instruction: 00001048. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  f0 8f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
 >> Mask                           :  0x8000
 >> Updated instruction            :  f0 0f bd e8          	: pop {r4, r5, r6, r7, r8, sb, sl, fp}
 >> Lifespan countdown: 2. (0x80000ff8)
 >> Lifespan countdown: 1. (0x80000ffc)
 >> Reverting instruction          :  f0 8f bd e8 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002578ea84, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1051.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 0. Instruction: 00001054. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010e0
 >> Updated                     : 0x00000000800010e4
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x1
 >> Updated instruction            :  09 30 94 e5          	: ldr r3, [r4, #9]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x2
 >> Updated instruction            :  0a 30 94 e5          	: ldr r3, [r4, #0xa]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x4
 >> Updated instruction            :  0c 30 94 e5          	: ldr r3, [r4, #0xc]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x8
 >> Updated instruction            :  00 30 94 e5          	: ldr r3, [r4]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x10
 >> Updated instruction            :  18 30 94 e5          	: ldr r3, [r4, #0x18]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x20
 >> Updated instruction            :  28 30 94 e5          	: ldr r3, [r4, #0x28]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x40
 >> Updated instruction            :  48 30 94 e5          	: ldr r3, [r4, #0x48]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x80
 >> Updated instruction            :  88 30 94 e5          	: ldr r3, [r4, #0x88]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x100
 >> Updated instruction            :  08 31 94 e5          	: ldr r3, [r4, #0x108]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110068, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1054.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x200
 >> Updated instruction            :  08 32 94 e5          	: ldr r3, [r4, #0x208]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110168, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1054.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x400
 >> Updated instruction            :  08 34 94 e5          	: ldr r3, [r4, #0x408]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110368, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1054.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x800
 >> Updated instruction            :  08 38 94 e5          	: ldr r3, [r4, #0x808]
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000080110768, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1054.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x1000
 >> Updated instruction            :  08 20 94 e5          	: ldr r2, [r4, #8]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x2000
 >> Updated instruction            :  08 10 94 e5          	: ldr r1, [r4, #8]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x4000
 >> Updated instruction            :  08 70 94 e5          	: ldr r7, [r4, #8]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010e0. Hit: 1. Lifespan: 2. Instruction: 00001054. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  08 30 94 e5          	: ldr r3, [r4, #8]
 >> Mask                           :  0x8000
 >> Updated instruction            :  08 b0 94 e5          	: ldr fp, [r4, #8]
 >> Lifespan countdown: 2. (0x800010e4)
 >> Lifespan countdown: 1. (0x800010e8)
 >> Reverting instruction          :  08 30 94 e5 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000002578ea70, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1089.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 0. Instruction: 00001060. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800010f8
 >> Updated                     : 0x00000000800010fc
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x1
 >> Updated instruction            :  02 30 c5 e5          	: strb r3, [r5, #2]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x2
 >> Updated instruction            :  01 30 c5 e5          	: strb r3, [r5, #1]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x4
 >> Updated instruction            :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x10
 >> Updated instruction            :  13 30 c5 e5          	: strb r3, [r5, #0x13]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x20
 >> Updated instruction            :  23 30 c5 e5          	: strb r3, [r5, #0x23]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x40
 >> Updated instruction            :  43 30 c5 e5          	: strb r3, [r5, #0x43]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x80
 >> Updated instruction            :  83 30 c5 e5          	: strb r3, [r5, #0x83]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x100
 >> Updated instruction            :  03 31 c5 e5          	: strb r3, [r5, #0x103]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110053, value: 0x25!! Count 1061 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1060.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x200
 >> Updated instruction            :  03 32 c5 e5          	: strb r3, [r5, #0x203]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110153, value: 0x25!! Count 1061 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1060.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x400
 >> Updated instruction            :  03 34 c5 e5          	: strb r3, [r5, #0x403]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110353, value: 0x25!! Count 1061 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1060.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x800
 >> Updated instruction            :  03 38 c5 e5          	: strb r3, [r5, #0x803]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110753, value: 0x25!! Count 1061 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1060.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 20 c5 e5          	: strb r2, [r5, #3]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 10 c5 e5          	: strb r1, [r5, #3]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 70 c5 e5          	: strb r7, [r5, #3]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800010f8. Hit: 1. Lifespan: 2. Instruction: 00001060. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 b0 c5 e5          	: strb fp, [r5, #3]
 >> Lifespan countdown: 2. (0x800010fc)
 >> Lifespan countdown: 1. (0x80001100)
 >> Reverting instruction          :  03 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 0. Instruction: 00001069. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000111c
 >> Updated                     : 0x0000000080001120
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x1
 >> Updated instruction            :  06 30 c5 e5          	: strb r3, [r5, #6]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x2
 >> Updated instruction            :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x4
 >> Updated instruction            :  03 30 c5 e5          	: strb r3, [r5, #3]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x8
 >> Updated instruction            :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x10
 >> Updated instruction            :  17 30 c5 e5          	: strb r3, [r5, #0x17]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x20
 >> Updated instruction            :  27 30 c5 e5          	: strb r3, [r5, #0x27]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x40
 >> Updated instruction            :  47 30 c5 e5          	: strb r3, [r5, #0x47]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x80
 >> Updated instruction            :  87 30 c5 e5          	: strb r3, [r5, #0x87]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x100
 >> Updated instruction            :  07 31 c5 e5          	: strb r3, [r5, #0x107]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110057, value: 0xc7!! Count 1070 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1069.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x200
 >> Updated instruction            :  07 32 c5 e5          	: strb r3, [r5, #0x207]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110157, value: 0xc7!! Count 1070 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1069.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x400
 >> Updated instruction            :  07 34 c5 e5          	: strb r3, [r5, #0x407]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110357, value: 0xc7!! Count 1070 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1069.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x800
 >> Updated instruction            :  07 38 c5 e5          	: strb r3, [r5, #0x807]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110757, value: 0xc7!! Count 1070 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1069.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x1000
 >> Updated instruction            :  07 20 c5 e5          	: strb r2, [r5, #7]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x2000
 >> Updated instruction            :  07 10 c5 e5          	: strb r1, [r5, #7]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x4000
 >> Updated instruction            :  07 70 c5 e5          	: strb r7, [r5, #7]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000111c. Hit: 1. Lifespan: 2. Instruction: 00001069. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  07 30 c5 e5          	: strb r3, [r5, #7]
 >> Mask                           :  0x8000
 >> Updated instruction            :  07 b0 c5 e5          	: strb fp, [r5, #7]
 >> Lifespan countdown: 2. (0x80001120)
 >> Lifespan countdown: 1. (0x80001124)
 >> Reverting instruction          :  07 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 0. Instruction: 00001076. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001138
 >> Updated                     : 0x000000008000113c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x1
 >> Updated instruction            :  0b 30 c5 e5          	: strb r3, [r5, #0xb]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x2
 >> Updated instruction            :  08 30 c5 e5          	: strb r3, [r5, #8]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x4
 >> Updated instruction            :  0e 30 c5 e5          	: strb r3, [r5, #0xe]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x8
 >> Updated instruction            :  02 30 c5 e5          	: strb r3, [r5, #2]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x10
 >> Updated instruction            :  1a 30 c5 e5          	: strb r3, [r5, #0x1a]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x20
 >> Updated instruction            :  2a 30 c5 e5          	: strb r3, [r5, #0x2a]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x40
 >> Updated instruction            :  4a 30 c5 e5          	: strb r3, [r5, #0x4a]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x80
 >> Updated instruction            :  8a 30 c5 e5          	: strb r3, [r5, #0x8a]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x100
 >> Updated instruction            :  0a 31 c5 e5          	: strb r3, [r5, #0x10a]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005a, value: 0xc!! Count 1077 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1076.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x200
 >> Updated instruction            :  0a 32 c5 e5          	: strb r3, [r5, #0x20a]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015a, value: 0xc!! Count 1077 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1076.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x400
 >> Updated instruction            :  0a 34 c5 e5          	: strb r3, [r5, #0x40a]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035a, value: 0xc!! Count 1077 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1076.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x800
 >> Updated instruction            :  0a 38 c5 e5          	: strb r3, [r5, #0x80a]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075a, value: 0xc!! Count 1077 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1076.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0a 20 c5 e5          	: strb r2, [r5, #0xa]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0a 10 c5 e5          	: strb r1, [r5, #0xa]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0a 70 c5 e5          	: strb r7, [r5, #0xa]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001138. Hit: 1. Lifespan: 2. Instruction: 00001076. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0a 30 c5 e5          	: strb r3, [r5, #0xa]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0a b0 c5 e5          	: strb fp, [r5, #0xa]
 >> Lifespan countdown: 2. (0x8000113c)
 >> Lifespan countdown: 1. (0x80001140)
 >> Reverting instruction          :  0a 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 0. Instruction: 00001083. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001154
 >> Updated                     : 0x0000000080001158
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x1
 >> Updated instruction            :  0c 30 c5 e5          	: strb r3, [r5, #0xc]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x2
 >> Updated instruction            :  0f 30 c5 e5          	: strb r3, [r5, #0xf]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x4
 >> Updated instruction            :  09 30 c5 e5          	: strb r3, [r5, #9]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x8
 >> Updated instruction            :  05 30 c5 e5          	: strb r3, [r5, #5]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x10
 >> Updated instruction            :  1d 30 c5 e5          	: strb r3, [r5, #0x1d]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x20
 >> Updated instruction            :  2d 30 c5 e5          	: strb r3, [r5, #0x2d]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x40
 >> Updated instruction            :  4d 30 c5 e5          	: strb r3, [r5, #0x4d]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x80
 >> Updated instruction            :  8d 30 c5 e5          	: strb r3, [r5, #0x8d]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x100
 >> Updated instruction            :  0d 31 c5 e5          	: strb r3, [r5, #0x10d]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011005d, value: 0xa9!! Count 1084 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1083.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x200
 >> Updated instruction            :  0d 32 c5 e5          	: strb r3, [r5, #0x20d]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011015d, value: 0xa9!! Count 1084 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1083.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x400
 >> Updated instruction            :  0d 34 c5 e5          	: strb r3, [r5, #0x40d]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011035d, value: 0xa9!! Count 1084 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1083.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x800
 >> Updated instruction            :  0d 38 c5 e5          	: strb r3, [r5, #0x80d]
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011075d, value: 0xa9!! Count 1084 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1083.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x1000
 >> Updated instruction            :  0d 20 c5 e5          	: strb r2, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x2000
 >> Updated instruction            :  0d 10 c5 e5          	: strb r1, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x4000
 >> Updated instruction            :  0d 70 c5 e5          	: strb r7, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80001154. Hit: 1. Lifespan: 2. Instruction: 00001083. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  0d 30 c5 e5          	: strb r3, [r5, #0xd]
 >> Mask                           :  0x8000
 >> Updated instruction            :  0d b0 c5 e5          	: strb fp, [r5, #0xd]
 >> Lifespan countdown: 2. (0x80001158)
 >> Lifespan countdown: 1. (0x8000115c)
 >> Reverting instruction          :  0d 30 c5 e5 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 0. Instruction: 00001091. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000007c
 >> Updated                     : 0x0000000080000080
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x1
 >> Updated instruction            :  01 00 52 e3          	: cmp r2, #1
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x2
 >> Updated instruction            :  02 00 52 e3          	: cmp r2, #2
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x4
 >> Updated instruction            :  04 00 52 e3          	: cmp r2, #4
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x8
 >> Updated instruction            :  08 00 52 e3          	: cmp r2, #8
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x10
 >> Updated instruction            :  10 00 52 e3          	: cmp r2, #0x10
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x20
 >> Updated instruction            :  20 00 52 e3          	: cmp r2, #0x20
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x40
 >> Updated instruction            :  40 00 52 e3          	: cmp r2, #0x40
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x80
 >> Updated instruction            :  80 00 52 e3          	: cmp r2, #0x80
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x100
 >> Updated instruction            :  00 01 52 e3          	: cmp r2, #0, #2
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x200
 >> Updated instruction            :  00 02 52 e3          	: cmp r2, #0, #4
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x400
 >> Updated instruction            :  00 04 52 e3          	: cmp r2, #0, #8
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x800
 >> Updated instruction            :  00 08 52 e3          	: cmp r2, #0, #16
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x1000
 >> Updated instruction            :  00 10 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x2000
 >> Updated instruction            :  00 20 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x4000
 >> Updated instruction            :  00 40 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000007c. Hit: 2. Lifespan: 2. Instruction: 00001091. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  00 00 52 e3          	: cmp r2, #0
 >> Mask                           :  0x8000
 >> Updated instruction            :  00 80 52 e3          	: cmp r2, #0
 >> Lifespan countdown: 2. (0x80000080)
 >> Lifespan countdown: 1. (0x80000084)
 >> Reverting instruction          :  00 00 52 e3 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 0. Instruction: 00001099. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000009c
 >> Updated                     : 0x00000000800000a0
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 c0 a0 33          	: movlo ip, #4
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 c0 a0 33          	: movlo ip, #7
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 c0 a0 33          	: movlo ip, #1
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d c0 a0 33          	: movlo ip, #0xd
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 c0 a0 33          	: movlo ip, #0x15
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 c0 a0 33          	: movlo ip, #0x25
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 c0 a0 33          	: movlo ip, #0x45
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 c0 a0 33          	: movlo ip, #0x85
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 c1 a0 33          	: movlo ip, #0x40000001
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 c2 a0 33          	: movlo ip, #0x50000000
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 c4 a0 33          	: movlo ip, #0x5000000
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 c8 a0 33          	: movlo ip, #0x50000
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 d0 a0 33          	: movlo sp, #5
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000005, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 e0 a0 33          	: movlo lr, #5
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 80 a0 33          	: movlo r8, #5
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000009c. Hit: 2. Lifespan: 2. Instruction: 00001099. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 c0 a0 33          	: movlo ip, #5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 40 a0 33          	: movlo r4, #5
 >> Lifespan countdown: 2. (0x800000a0)
 >> Lifespan countdown: 1. (0x800000a4)
 >> Reverting instruction          :  05 c0 a0 33 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 0. Instruction: 00001109. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800000f4
 >> Updated                     : 0x00000000800000f8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x1
 >> Updated instruction            :  10 c4 cf e7          	: bfi ip, r0, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x2
 >> Updated instruction            :  13 c4 cf e7          	: bfi ip, r3, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x4
 >> Updated instruction            :  15 c4 cf e7          	: bfi ip, r5, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x8
 >> Updated instruction            :  19 c4 cf e7          	: bfi ip, sb, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x10
 >> Updated instruction            :  01 c4 cf e7          	: strb ip, [pc, r1, lsl #8]
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x20
 >> Updated instruction            :  31 c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x40
 >> Updated instruction            :  51 c4 cf e7          
Unable to disassemble opcode. I guess it's something very specific. Try skipping it?
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1109.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x80
 >> Updated instruction            :  91 c4 cf e7          	: bfi ip, r1, #9, #7
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x100
 >> Updated instruction            :  11 c5 cf e7          	: bfi ip, r1, #0xa, #6
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x200
 >> Updated instruction            :  11 c6 cf e7          	: bfi ip, r1, #0xc, #4
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x400
 >> Updated instruction            :  11 c0 cf e7          	: bfi ip, r1, #0, #0x10
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x800
 >> Updated instruction            :  11 cc cf e7          	: bfi ip, r1, #0xf, #1
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x1000
 >> Updated instruction            :  11 d4 cf e7          	: bfi sp, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >!  Erm -  fetching from unmapped memory, address: 0x0, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1271.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x2000
 >> Updated instruction            :  11 e4 cf e7          	: bfi lr, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x4000
 >> Updated instruction            :  11 84 cf e7          	: bfi r8, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800000f4. Hit: 2. Lifespan: 2. Instruction: 00001109. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  11 c4 cf e7          	: bfi ip, r1, #8, #8
 >> Mask                           :  0x8000
 >> Updated instruction            :  11 44 cf e7          	: bfi r4, r1, #8, #8
 >> Lifespan countdown: 2. (0x800000f8)
 >> Lifespan countdown: 1. (0x800000fc)
 >> Reverting instruction          :  11 c4 cf e7 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 0. Instruction: 00001116. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110064, value: 0x0!! Count 1121 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110164, value: 0x0!! Count 1121 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110364, value: 0x0!! Count 1121 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110764, value: 0x0!! Count 1121 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1120.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 10. Lifespan: 2. Instruction: 00001116. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 0. Instruction: 00001124. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1149 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1148.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011006c, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011016c, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011036c, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8011076c, value: 0x0!! Count 1129 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1128.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 12. Lifespan: 2. Instruction: 00001124. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 0. Instruction: 00001133. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 14. Lifespan: 2. Instruction: 00001133. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 0. Instruction: 00001141. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 16. Lifespan: 2. Instruction: 00001141. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 0. Instruction: 00001148. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110004, value: 0x0!! Count 1153 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1152.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110084, value: 0x0!! Count 1153 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1152.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110184, value: 0x0!! Count 1153 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1152.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110384, value: 0x0!! Count 1153 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1152.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110784, value: 0x0!! Count 1153 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1152.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 18. Lifespan: 2. Instruction: 00001148. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 0. Instruction: 00001155. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 20. Lifespan: 2. Instruction: 00001155. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 0. Instruction: 00001163. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 22. Lifespan: 2. Instruction: 00001163. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 0. Instruction: 00001171. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x000000008000010c
 >> Updated                     : 0x0000000080000110
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1
 >> Updated instruction            :  00 30 83 e2          	: add r3, r3, #0
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2
 >> Updated instruction            :  03 30 83 e2          	: add r3, r3, #3
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4
 >> Updated instruction            :  05 30 83 e2          	: add r3, r3, #5
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8
 >> Updated instruction            :  09 30 83 e2          	: add r3, r3, #9
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x10
 >> Updated instruction            :  11 30 83 e2          	: add r3, r3, #0x11
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x20
 >> Updated instruction            :  21 30 83 e2          	: add r3, r3, #0x21
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x40
 >> Updated instruction            :  41 30 83 e2          	: add r3, r3, #0x41
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x80
 >> Updated instruction            :  81 30 83 e2          	: add r3, r3, #0x81
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x100
 >> Updated instruction            :  01 31 83 e2          	: add r3, r3, #0x40000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x200
 >> Updated instruction            :  01 32 83 e2          	: add r3, r3, #0x10000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x400
 >> Updated instruction            :  01 34 83 e2          	: add r3, r3, #0x1000000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x800
 >> Updated instruction            :  01 38 83 e2          	: add r3, r3, #0x10000
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x1000
 >> Updated instruction            :  01 20 83 e2          	: add r2, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x2000
 >> Updated instruction            :  01 10 83 e2          	: add r1, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x4000
 >> Updated instruction            :  01 70 83 e2          	: add r7, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x8000010c. Hit: 24. Lifespan: 2. Instruction: 00001171. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  01 30 83 e2          	: add r3, r3, #1
 >> Mask                           :  0x8000
 >> Updated instruction            :  01 b0 83 e2          	: add fp, r3, #1
 >> Lifespan countdown: 2. (0x80000110)
 >> Lifespan countdown: 1. (0x80000114)
 >> Reverting instruction          :  01 30 83 e2 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 0. Instruction: 00001180. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000110
 >> Updated                     : 0x0000000080000114
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 c0 80 e4          	: str ip, [r0], #5
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 c0 80 e4          	: str ip, [r0], #6
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 c0 80 e4          	: str ip, [r0], #0
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c c0 80 e4          	: str ip, [r0], #0xc
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 c0 80 e4          	: str ip, [r0], #0x14
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 c0 80 e4          	: str ip, [r0], #0x24
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1245 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1244.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 c0 80 e4          	: str ip, [r0], #0x44
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1213 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1212.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 c0 80 e4          	: str ip, [r0], #0x84
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110024, value: 0x0!! Count 1185 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 c1 80 e4          	: str ip, [r0], #0x104
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801100a4, value: 0x0!! Count 1185 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 c2 80 e4          	: str ip, [r0], #0x204
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801101a4, value: 0x0!! Count 1185 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 c4 80 e4          	: str ip, [r0], #0x404
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801103a4, value: 0x0!! Count 1185 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 c8 80 e4          	: str ip, [r0], #0x804
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x801107a4, value: 0x0!! Count 1185 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1184.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 d0 80 e4          	: str sp, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 e0 80 e4          	: str lr, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 80 80 e4          	: str r8, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000110. Hit: 26. Lifespan: 2. Instruction: 00001180. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 c0 80 e4          	: str ip, [r0], #4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 40 80 e4          	: str r4, [r0], #4
 >> Lifespan countdown: 2. (0x80000114)
 >> Lifespan countdown: 1. (0x80000118)
 >> Reverting instruction          :  04 c0 80 e4 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 0. Instruction: 00001186. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1273 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1272.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1190 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1189.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 27. Lifespan: 2. Instruction: 00001186. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1186.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 0. Instruction: 00001194. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1269 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1268.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1289 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1288.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1198 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1197.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 29. Lifespan: 2. Instruction: 00001194. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1194.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 0. Instruction: 00001202. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1269 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1268.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110001, value: 0x0!! Count 1285 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1206 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1205.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 31. Lifespan: 2. Instruction: 00001202. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1202.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 0. Instruction: 00001209. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 33. Lifespan: 2. Instruction: 00001209. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 0. Instruction: 00001217. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 35. Lifespan: 2. Instruction: 00001217. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 0. Instruction: 00001225. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 37. Lifespan: 2. Instruction: 00001225. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 0. Instruction: 00001233. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 39. Lifespan: 2. Instruction: 00001233. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 0. Instruction: 00001238. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1261 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1260.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110002, value: 0x0!! Count 1277 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1276.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1242 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1241.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 40. Lifespan: 2. Instruction: 00001238. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1238.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 0. Instruction: 00001246. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000118
 >> Updated                     : 0x000000008000011c
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1
 >> Updated instruction            :  fa ff ff 3a          	: blo #0xff0
 >> Lifespan countdown: 2. (0x80000108)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1279 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1278.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2
 >> Updated instruction            :  f9 ff ff 3a          	: blo #0xfec
 >> Lifespan countdown: 2. (0x80000104)
 >> Lifespan countdown: 1. (0x80000108)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110000, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4
 >> Updated instruction            :  ff ff ff 3a          	: blo #0x1004
 >> Lifespan countdown: 2. (0x8000011c)
 >> Lifespan countdown: 1. (0x80000120)
 >> Reverting instruction          :  fb ff ff 3a 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8
 >> Updated instruction            :  f3 ff ff 3a          	: blo #0xfd4
 >> Lifespan countdown: 2. (0x800000ec)
 >> Lifespan countdown: 1. (0x800000f0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110005, value: 0x0!! Count 1257 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1256.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x10
 >> Updated instruction            :  eb ff ff 3a          	: blo #0xfb4
 >> Lifespan countdown: 2. (0x800000cc)
 >> Lifespan countdown: 1. (0x800000d0)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110005, value: 0x0!! Count 1265 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1264.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x20
 >> Updated instruction            :  db ff ff 3a          	: blo #0xf74
 >> Lifespan countdown: 2. (0x8000008c)
 >> Lifespan countdown: 1. (0x80000090)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x80110005, value: 0x0!! Count 1281 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1280.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x40
 >> Updated instruction            :  bb ff ff 3a          	: blo #0xef4
 >> Lifespan countdown: 2. (0x8000000c)
 >> Lifespan countdown: 1. (0x80000010)
 >> Reverting instruction          :  fb ff ff 3a 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x26, value: 0x0!! Count 1250 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1249.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x80
 >> Updated instruction            :  7b ff ff 3a          	: blo #0xdf4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffff0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x100
 >> Updated instruction            :  fb fe ff 3a          	: blo #0xbf4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffffd0c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x200
 >> Updated instruction            :  fb fd ff 3a          	: blo #0x7f4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff90c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x400
 >> Updated instruction            :  fb fb ff 3a          	: blo #0xfffffff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffff10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x800
 >> Updated instruction            :  fb f7 ff 3a          	: blo #0xffffeff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffe10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x1000
 >> Updated instruction            :  fb ef ff 3a          	: blo #0xffffcff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fffc10c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x2000
 >> Updated instruction            :  fb df ff 3a          	: blo #0xffff8ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff810c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x4000
 >> Updated instruction            :  fb bf ff 3a          	: blo #0xffff0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7fff010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000118. Hit: 42. Lifespan: 2. Instruction: 00001246. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  fb ff ff 3a          	: blo #0xff4
 >> Mask                           :  0x8000
 >> Updated instruction            :  fb 7f ff 3a          	: blo #0xfffe0ff4
 >!  Erm -  fetching from unmapped memory, address: 0x7ffe010c, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1246.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 0. Instruction: 00001253. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 44. Lifespan: 2. Instruction: 00001253. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 0. Instruction: 00001261. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000114
 >> Updated                     : 0x0000000080000118
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1
 >> Updated instruction            :  05 00 53 e1          	: cmp r3, r5
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2
 >> Updated instruction            :  06 00 53 e1          	: cmp r3, r6
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4
 >> Updated instruction            :  00 00 53 e1          	: cmp r3, r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8
 >> Updated instruction            :  0c 00 53 e1          	: cmp r3, ip
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x10
 >> Updated instruction            :  14 00 53 e1          	: cmp r3, r4, lsl r0
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x20
 >> Updated instruction            :  24 00 53 e1          	: cmp r3, r4, lsr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x40
 >> Updated instruction            :  44 00 53 e1          	: cmp r3, r4, asr #32
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000011c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x80
 >> Updated instruction            :  84 00 53 e1          	: cmp r3, r4, lsl #1
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x100
 >> Updated instruction            :  04 01 53 e1          	: cmp r3, r4, lsl #2
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x200
 >> Updated instruction            :  04 02 53 e1          	: cmp r3, r4, lsl #4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x400
 >> Updated instruction            :  04 04 53 e1          	: cmp r3, r4, lsl #8
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x800
 >> Updated instruction            :  04 08 53 e1          	: cmp r3, r4, lsl #16
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x1000
 >> Updated instruction            :  04 10 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x2000
 >> Updated instruction            :  04 20 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x4000
 >> Updated instruction            :  04 40 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000114. Hit: 46. Lifespan: 2. Instruction: 00001261. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  04 00 53 e1          	: cmp r3, r4
 >> Mask                           :  0x8000
 >> Updated instruction            :  04 80 53 e1          	: cmp r3, r4
 >> Lifespan countdown: 2. (0x80000118)
 >> Lifespan countdown: 1. (0x8000010c)
 >> Reverting instruction          :  04 00 53 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 0. Instruction: 00001268. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080000120
 >> Updated                     : 0x0000000080000124
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 52 e1          	: cmp r2, r2
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 52 e1          	: cmp r2, r1
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 52 e1          	: cmp r2, r7
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 52 e1          	: cmp r2, fp
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 52 e1          	: cmp r2, r3, lsl r0
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 52 e1          	: cmp r2, r3, lsr #32
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 52 e1          	: cmp r2, r3, asr #32
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 52 e1          	: cmp r2, r3, lsl #1
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 52 e1          	: cmp r2, r3, lsl #2
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 52 e1          	: cmp r2, r3, lsl #4
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 52 e1          	: cmp r2, r3, lsl #8
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 52 e1          	: cmp r2, r3, lsl #16
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x80000120. Hit: 2. Lifespan: 2. Instruction: 00001268. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 52 e1          	: cmp r2, r3
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 52 e1          	: cmp r2, r3
 >> Lifespan countdown: 2. (0x80000124)
 >> Lifespan countdown: 1. (0x80000128)
 >> Reverting instruction          :  03 00 52 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 0. Instruction: 00001276. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800012fc
 >> Updated                     : 0x0000000080001300
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x1
 >> Updated instruction            :  04 00 a0 e1          	: mov r0, r4
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x2
 >> Updated instruction            :  07 00 a0 e1          	: mov r0, r7
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x4
 >> Updated instruction            :  01 00 a0 e1          	: mov r0, r1
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
---- Reached a hard stop address 0x8000124c ----
 >> Run result: reached a 'hard stop' address.
 >>> Output from address (0x0aa01000): 01





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x8
 >> Updated instruction            :  0d 00 a0 e1          	: mov r0, sp
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x10
 >> Updated instruction            :  15 00 a0 e1          	: lsl r0, r5, r0
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x20
 >> Updated instruction            :  25 00 a0 e1          	: lsr r0, r5, #0x20
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x40
 >> Updated instruction            :  45 00 a0 e1          	: asr r0, r5, #0x20
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ffffffff, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x80
 >> Updated instruction            :  85 00 a0 e1          	: lsl r0, r5, #1
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000021fea0, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x100
 >> Updated instruction            :  05 01 a0 e1          	: lsl r0, r5, #2
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x000000000043fd40, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x200
 >> Updated instruction            :  05 02 a0 e1          	: lsl r0, r5, #4
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000010ff500, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x400
 >> Updated instruction            :  05 04 a0 e1          	: lsl r0, r5, #8
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000010ff5000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x800
 >> Updated instruction            :  05 08 a0 e1          	: lsl r0, r5, #0x10
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x00000000ff500000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1285.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x1000
 >> Updated instruction            :  05 10 a0 e1          	: mov r1, r5
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x2000
 >> Updated instruction            :  05 20 a0 e1          	: mov r2, r5
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x4000
 >> Updated instruction            :  05 40 a0 e1          	: mov r4, r5
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800012fc. Hit: 1. Lifespan: 2. Instruction: 00001276. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  05 00 a0 e1          	: mov r0, r5
 >> Mask                           :  0x8000
 >> Updated instruction            :  05 80 a0 e1          	: mov r8, r5
 >> Lifespan countdown: 2. (0x80001300)
 >> Lifespan countdown: 1. (0x80001304)
 >> Reverting instruction          :  05 00 a0 e1 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 0. Instruction: 00001282. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x00000000800002e4
 >> Updated                     : 0x00000000800002e8
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x1
 >> Updated instruction            :  02 00 00 ea          	: b #0x1010
 >> Lifespan countdown: 2. (0x800002f4)
 >> Lifespan countdown: 1. (0x80000310)
 >> Reverting instruction          :  03 00 00 ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x2
 >> Updated instruction            :  01 00 00 ea          	: b #0x100c
 >> Lifespan countdown: 2. (0x800002f0)
 >> Lifespan countdown: 1. (0x800002f4)
 >> Reverting instruction          :  03 00 00 ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x4
 >> Updated instruction            :  07 00 00 ea          	: b #0x1024
 >> Lifespan countdown: 2. (0x80000308)
 >> Lifespan countdown: 1. (0x8000030c)
 >> Reverting instruction          :  03 00 00 ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x8
 >> Updated instruction            :  0b 00 00 ea          	: b #0x1034
 >> Lifespan countdown: 2. (0x80000318)
 >> Lifespan countdown: 1. (0x8000031c)
 >> Reverting instruction          :  03 00 00 ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x10
 >> Updated instruction            :  13 00 00 ea          	: b #0x1054
 >> Lifespan countdown: 2. (0x80000338)
 >> Lifespan countdown: 1. (0x8000033c)
 >> Reverting instruction          :  03 00 00 ea 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1286.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x20
 >> Updated instruction            :  23 00 00 ea          	: b #0x1094
 >> Lifespan countdown: 2. (0x80000378)
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000001, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1283.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x40
 >> Updated instruction            :  43 00 00 ea          	: b #0x1114
 >> Lifespan countdown: 2. (0x800003f8)
 >> Lifespan countdown: 1. (0x800003fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x21feb4, value: 0x20000!! Count 1347 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1346.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x80
 >> Updated instruction            :  83 00 00 ea          	: b #0x1214
 >> Lifespan countdown: 2. (0x800004f8)
 >> Lifespan countdown: 1. (0x800004fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x58, value: 0x0!! Count 1325 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1324.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x100
 >> Updated instruction            :  03 01 00 ea          	: b #0x1414
 >> Lifespan countdown: 2. (0x800006f8)
 >> Lifespan countdown: 1. (0x800006fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000020, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1284.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x200
 >> Updated instruction            :  03 02 00 ea          	: b #0x1814
 >> Lifespan countdown: 2. (0x80000af8)
 >> Lifespan countdown: 1. (0x80000afc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  ʕ•ᴥ•ʔ  Oopsie    - reading from unmapped memory, address: 0x0000000000000000, value: 0x0!!
 >> Run result: Fault errored program - last instruction: 1597.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x400
 >> Updated instruction            :  03 04 00 ea          	: b #0x2014
 >> Lifespan countdown: 2. (0x800012f8)
 >> Lifespan countdown: 1. (0x800012fc)
 >> Reverting instruction          :  03 00 00 ea 
 >> Run result: reached end address after faulting.
 >>> Output from address (0x0aa01000): 02





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x800
 >> Updated instruction            :  03 08 00 ea          	: b #0x3014
 >> Lifespan countdown: 2. (0x800022f8)
 >> Lifespan countdown: 1. (0x800022fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  An invalid instruction was encountered. Probably the result of faulting the instruction?
 >> Run result: Fault errored program - last instruction: 1292.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x1000
 >> Updated instruction            :  03 10 00 ea          	: b #0x5014
 >> Lifespan countdown: 2. (0x800042f8)
 >> Lifespan countdown: 1. (0x800042fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 29764.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x2000
 >> Updated instruction            :  03 20 00 ea          	: b #0x9014
 >> Lifespan countdown: 2. (0x800082f8)
 >> Lifespan countdown: 1. (0x800082fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 25668.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x4000
 >> Updated instruction            :  03 40 00 ea          	: b #0x11014
 >> Lifespan countdown: 2. (0x800102f8)
 >> Lifespan countdown: 1. (0x800102fc)
 >> Reverting instruction          :  03 00 00 ea 
 >!  Erm -  fetching from unmapped memory, address: 0x80020000, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 17476.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x800002e4. Hit: 1. Lifespan: 2. Instruction: 00001282. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  03 00 00 ea          	: b #0x1014
 >> Mask                           :  0x8000
 >> Updated instruction            :  03 80 00 ea          	: b #0x21014
 >!  Erm -  fetching from unmapped memory, address: 0x800202f8, value: 0x0!! Skipping to end.
 >!  Attempted to access unmapped memory
 >> Run result: Fault errored program - last instruction: 1282.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 0. Instruction: 00001300. Faulting Target: InstructionPointer. 		Operation: SKIP.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction pointer: 0x0000000080001320
 >> Updated                     : 0x0000000080001324
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000001. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x1
 >> Updated instruction            :  a1 3a 40 e3          	: movt r3, #0xaa1
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa11000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000002. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x2
 >> Updated instruction            :  a2 3a 40 e3          	: movt r3, #0xaa2
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa21000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000004. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x4
 >> Updated instruction            :  a4 3a 40 e3          	: movt r3, #0xaa4
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa41000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000008. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x8
 >> Updated instruction            :  a8 3a 40 e3          	: movt r3, #0xaa8
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xaa81000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000010. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x10
 >> Updated instruction            :  b0 3a 40 e3          	: movt r3, #0xab0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xab01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000020. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x20
 >> Updated instruction            :  80 3a 40 e3          	: movt r3, #0xa80
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa801000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000040. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x40
 >> Updated instruction            :  e0 3a 40 e3          	: movt r3, #0xae0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xae01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000080. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x80
 >> Updated instruction            :  20 3a 40 e3          	: movt r3, #0xa20
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xa201000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000100. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x100
 >> Updated instruction            :  a0 3b 40 e3          	: movt r3, #0xba0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xba01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000200. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x200
 >> Updated instruction            :  a0 38 40 e3          	: movt r3, #0x8a0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x8a01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000400. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x400
 >> Updated instruction            :  a0 3e 40 e3          	: movt r3, #0xea0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0xea01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000000800. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x800
 >> Updated instruction            :  a0 32 40 e3          	: movt r3, #0x2a0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x2a01000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000001000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x1000
 >> Updated instruction            :  a0 2a 40 e3          	: movt r2, #0xaa0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000002000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x2000
 >> Updated instruction            :  a0 1a 40 e3          	: movt r1, #0xaa0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000004000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x4000
 >> Updated instruction            :  a0 7a 40 e3          	: movt r7, #0xaa0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00





########## Starting new run. Address: 0x80001320. Hit: 1. Lifespan: 2. Instruction: 00001300. Faulting Target: Instruction. Mask: 0x0000000000008000. Operation: XOR.  ################

 >> Writing input #0 directly to address: 0x0000000032000000: aa9087ed9b9849aa
 >> Writing input #1 directly to address: 0x0000000012000000: 02000000
 >> Writing input #2 directly to address: 0x0000000012000004: 00000000
 >> Writing input #3 directly to address: 0x0000000012000008: 00000000
 >> Writing input #4 directly to address: 0x000000001200000c: 0000020000
 >> Writing input #5 directly to address: 0x0000000012000020: 726744c0807da582d5eab0f7fa68d18b
 >> Original instruction           :  a0 3a 40 e3          	: movt r3, #0xaa0
 >> Mask                           :  0x8000
 >> Updated instruction            :  a0 ba 40 e3          	: movt fp, #0xaa0
 >> Lifespan countdown: 2. (0x80001324)
 >> Lifespan countdown: 1. (0x80001328)
 >> Reverting instruction          :  a0 3a 40 e3 
 >!  /ᐠ.ꞈ.ᐟ\  Hmm - writing to unmapped memory, address: 0x1000, value: 0x2!! Count 1303 Skipping to end.
 >> Run result: Fault errored program - last instruction: 1302.
 >>> Output from address (0x0aa01000): 00
